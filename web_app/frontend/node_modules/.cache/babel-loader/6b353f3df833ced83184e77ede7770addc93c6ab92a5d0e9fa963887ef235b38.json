{"ast":null,"code":"import{create}from'zustand';import{devtools,persist}from'zustand/middleware';const generateId=()=>Math.random().toString(36).substr(2,9);export const useAppStore=create()(devtools(persist((set,get)=>({// Initial state\nmessages:[],currentQuery:'',isLoading:false,isStreaming:false,sessionId:generateId(),theme:'light',sidebarCollapsed:false,activeTab:'chat',graphData:undefined,selectedNode:undefined,error:undefined,abortController:null,// Basic actions\nsetCurrentQuery:query=>set({currentQuery:query}),setLoading:loading=>set({isLoading:loading}),setStreaming:streaming=>set({isStreaming:streaming}),// Interruption control\nsetAbortController:controller=>set({abortController:controller}),cancelCurrentRequest:()=>{const{abortController,messages}=get();if(abortController){abortController.abort();// 立即停止所有状态\nset({abortController:null,isLoading:false,isStreaming:false,error:undefined// 不显示错误，因为是用户主动取消\n});// 更新最后一条助手消息，标记为已取消\nconst lastMessage=messages[messages.length-1];if(lastMessage&&lastMessage.type==='assistant'&&lastMessage.isStreaming){set(state=>({messages:state.messages.map((msg,index)=>index===state.messages.length-1?{...msg,isStreaming:false,content:msg.content||'回答已取消',isCancelled:true}:msg)}));}}},addMessage:message=>set(state=>({messages:[...state.messages,message]})),updateMessage:(id,updates)=>set(state=>({messages:state.messages.map(msg=>msg.id===id?{...msg,...updates}:msg)})),clearMessages:()=>set({messages:[]}),setTheme:theme=>set({theme}),setSidebarCollapsed:collapsed=>set({sidebarCollapsed:collapsed}),setActiveTab:tab=>set({activeTab:tab}),setGraphData:data=>set({graphData:data}),setSelectedNode:node=>set({selectedNode:node}),setError:error=>set({error}),generateSessionId:()=>{const newSessionId=generateId();set({sessionId:newSessionId});return newSessionId;},// Complex actions\nhandleQueryResponse:(response,originalQuery)=>{const messageId=generateId();// 添加用户消息\nconst userMessage={id:generateId(),type:'user',content:originalQuery,timestamp:new Date()};// 添加助手回复消息\nconsole.log('Store - 接收到的响应:',response);console.log('Store - 推理路径:',response.reasoning_path);console.log('Store - integrated_response类型:',typeof response.integrated_response);console.log('Store - integrated_response值:',response.integrated_response);// 确保内容是字符串\nlet content=response.integrated_response;if(typeof content!=='string'){if(content&&typeof content==='object'){content=JSON.stringify(content,null,2);}else{content=String(content||'正在生成回答...');}}const assistantMessage={id:messageId,type:'assistant',content:content,timestamp:new Date(),response,reasoning_steps:response.reasoning_path||[]};console.log('Store - 创建的助手消息:',assistantMessage);set(state=>({messages:[...state.messages,userMessage,assistantMessage],graphData:response.graph_data,isLoading:false,isStreaming:false,error:undefined}));},handleStreamingStep:(step,messageId)=>{set(state=>({messages:state.messages.map(msg=>{if(msg.id===messageId){const existingSteps=msg.reasoning_steps||[];const updatedSteps=[...existingSteps];// 查找是否已存在相同的步骤\nconst existingIndex=updatedSteps.findIndex(s=>s.agent_name===step.agent_name&&s.step_type===step.step_type);if(existingIndex>=0){updatedSteps[existingIndex]=step;}else{updatedSteps.push(step);}return{...msg,reasoning_steps:updatedSteps,isStreaming:step.status==='processing'};}return msg;})}));}}),{name:'algokg-app-store',partialize:state=>({theme:state.theme,sidebarCollapsed:state.sidebarCollapsed,sessionId:state.sessionId// 不持久化消息和临时状态\n})}),{name:'AlgoKG App Store'}));// 选择器函数\nexport const useMessages=()=>useAppStore(state=>state.messages);export const useCurrentQuery=()=>useAppStore(state=>state.currentQuery);export const useLoading=()=>useAppStore(state=>state.isLoading);export const useStreaming=()=>useAppStore(state=>state.isStreaming);export const useTheme=()=>useAppStore(state=>state.theme);export const useSidebarCollapsed=()=>useAppStore(state=>state.sidebarCollapsed);export const useActiveTab=()=>useAppStore(state=>state.activeTab);export const useGraphData=()=>useAppStore(state=>state.graphData);export const useSelectedNode=()=>useAppStore(state=>state.selectedNode);export const useError=()=>useAppStore(state=>state.error);export const useSessionId=()=>useAppStore(state=>state.sessionId);// 动作选择器\nexport const useAppActions=()=>useAppStore(state=>({setCurrentQuery:state.setCurrentQuery,setLoading:state.setLoading,setStreaming:state.setStreaming,addMessage:state.addMessage,updateMessage:state.updateMessage,clearMessages:state.clearMessages,setTheme:state.setTheme,setSidebarCollapsed:state.setSidebarCollapsed,setActiveTab:state.setActiveTab,setGraphData:state.setGraphData,setSelectedNode:state.setSelectedNode,setError:state.setError,generateSessionId:state.generateSessionId,handleQueryResponse:state.handleQueryResponse,handleStreamingStep:state.handleStreamingStep,// 中断控制\nabortController:state.abortController,setAbortController:state.setAbortController,cancelCurrentRequest:state.cancelCurrentRequest}));export default useAppStore;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}