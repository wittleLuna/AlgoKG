{"ast":null,"code":"import React,{useState,useEffect,useCallback}from'react';import{Layout,Tabs,Button,message,Spin,Alert}from'antd';import{MessageOutlined,NodeIndexOutlined,MenuFoldOutlined,MenuUnfoldOutlined,BulbOutlined,CodeOutlined,UserOutlined,LeftOutlined,FilterOutlined}from'@ant-design/icons';import QueryInput from'./components/common/QueryInput';import MessageItem from'./components/qa/MessageItem';import UnifiedGraphPage from'./pages/UnifiedGraphPage';import AlgorithmVisualizationPage from'./pages/AlgorithmVisualizationPage';import UserMenu from'./components/auth/UserMenu';import FavoritesPanel from'./components/user/FavoritesPanel';import NoteUpload from'./components/notes/NoteUpload';import NoteList from'./components/notes/NoteList';import NoteDetail from'./components/notes/NoteDetail';import EntityGraphVisualization from'./components/notes/EntityGraphVisualization';import SearchHistoryPanel from'./components/user/SearchHistoryPanel';import SessionSidebar from'./components/chat/SessionSidebar';import{useAppStore,useAppActions}from'./store';import{apiService}from'./services/api';import{authService}from'./services/authService';import'./App.css';import'./components/components.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const{Header,Sider,Content}=Layout;const{TabPane}=Tabs;const App=()=>{const{messages,currentQuery,isLoading,isStreaming,theme,sidebarCollapsed,activeTab,graphData,selectedNode,error,sessionId}=useAppStore();// 认证相关状态\nconst[isAuthenticated,setIsAuthenticated]=useState(false);const[currentUser,setCurrentUser]=useState(null);// 笔记相关状态\nconst[noteUploadVisible,setNoteUploadVisible]=useState(false);const[selectedNote,setSelectedNote]=useState(null);const[showNoteDetail,setShowNoteDetail]=useState(false);const[showEntityGraph,setShowEntityGraph]=useState(false);const[entityGraphNote,setEntityGraphNote]=useState(null);const{setCurrentQuery,setLoading,setStreaming,addMessage,updateMessage,clearMessages,setTheme,setSidebarCollapsed,setActiveTab,setGraphData,setSelectedNode,setError,handleQueryResponse,handleStreamingStep,abortController,setAbortController,cancelCurrentRequest}=useAppActions();const[healthStatus,setHealthStatus]=useState('checking');const[favoritesVisible,setFavoritesVisible]=useState(false);const[historyVisible,setHistoryVisible]=useState(false);const[currentSessionId,setCurrentSessionId]=useState(sessionId);// 健康检查\nuseEffect(()=>{const checkHealth=async()=>{try{await apiService.healthCheck();setHealthStatus('healthy');}catch(error){console.error('健康检查失败:',error);setHealthStatus('unhealthy');}};checkHealth();const interval=setInterval(checkHealth,30000);// 每30秒检查一次\nreturn()=>clearInterval(interval);},[]);// 认证处理\nconst checkAuthStatus=useCallback(()=>{const token=localStorage.getItem('token');const user=localStorage.getItem('user');console.log('检查认证状态:',{token:!!token,user:!!user});// 调试日志\nif(token&&user){try{const userData=JSON.parse(user);console.log('设置认证状态为 true, 用户:',userData);// 调试日志\nsetIsAuthenticated(true);setCurrentUser(userData);}catch(error){console.error('解析用户数据失败:',error);localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setCurrentUser(null);}}else{console.log('没有令牌或用户数据，设置为未认证');// 调试日志\nsetIsAuthenticated(false);setCurrentUser(null);}},[]);const handleLoginSuccess=useCallback((token,user)=>{setIsAuthenticated(true);setCurrentUser(user);},[]);const handleLogout=useCallback(()=>{localStorage.removeItem('token');localStorage.removeItem('user');setIsAuthenticated(false);setCurrentUser(null);message.success('已退出登录');},[]);// 笔记处理\nconst handleNoteUploadSuccess=useCallback(noteId=>{message.success('笔记上传成功！');setNoteUploadVisible(false);// 如果当前在笔记标签页，刷新列表\nif(activeTab==='notes'){// 这里可以触发笔记列表刷新\n}},[activeTab]);const handleNoteUploadCancel=useCallback(()=>{setNoteUploadVisible(false);},[]);const handleNoteSelect=useCallback(note=>{setSelectedNote(note);setShowNoteDetail(true);},[]);const handleNoteDetailBack=useCallback(()=>{setShowNoteDetail(false);setSelectedNote(null);},[]);const handleEntityVisualize=useCallback(note=>{console.log('打开实体图谱可视化:',note);setEntityGraphNote(note);setShowEntityGraph(true);},[]);// 认证状态检查\nuseEffect(()=>{checkAuthStatus();},[checkAuthStatus]);// 立即检查认证状态（组件挂载时）\nuseEffect(()=>{const token=localStorage.getItem('token');const user=localStorage.getItem('user');console.log('组件挂载时检查认证状态:',{token:!!token,user:!!user});if(token&&user){try{const userData=JSON.parse(user);console.log('组件挂载时设置认证状态为 true');setIsAuthenticated(true);setCurrentUser(userData);}catch(error){console.error('组件挂载时解析用户数据失败:',error);setIsAuthenticated(false);setCurrentUser(null);}}else{setIsAuthenticated(false);setCurrentUser(null);}},[]);// 空依赖数组，只在组件挂载时执行一次\n// 添加搜索历史\nconst addToSearchHistory=useCallback(async function(query,searchType){let resultsCount=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;if(authService.isAuthenticated()){try{await authService.addSearchHistory(query,searchType,resultsCount);}catch(error){console.warn('添加搜索历史失败:',error);}}},[]);// 处理搜索历史点击\nconst handleSearchHistoryClick=useCallback((query,searchType)=>{setCurrentQuery(query);if(searchType==='qa'){setActiveTab('chat');handleQuerySubmit(query);}else if(searchType==='graph'){setActiveTab('graph');}setHistoryVisible(false);},[]);// 处理会话选择\nconst handleSessionSelect=useCallback(sessionId=>{setCurrentSessionId(sessionId);// 这里可以加载会话的历史消息\nconsole.log('切换到会话:',sessionId);},[]);// 处理新建会话\nconst handleNewSession=useCallback(()=>{const newSessionId=Math.random().toString(36).substr(2,9);setCurrentSessionId(newSessionId);clearMessages();console.log('创建新会话:',newSessionId);},[clearMessages]);// 处理查询提交\nconst handleQuerySubmit=useCallback(async query=>{if(!query.trim()||isLoading||isStreaming)return;// 如果是新会话的第一条消息，且用户已登录，创建会话\nif(messages.length===0&&authService.isAuthenticated()){try{const newSession=await authService.createSession({title:query.length>20?`${query.substring(0,20)}...`:query,description:'智能问答会话'});setCurrentSessionId(newSession.id.toString());console.log('自动创建新会话:',newSession);}catch(error){console.error('创建会话失败:',error);// 继续执行查询，不因为会话创建失败而中断\n}}// 取消之前的请求\nif(abortController){abortController.abort();}// 创建新的AbortController\nconst newAbortController=new AbortController();setAbortController(newAbortController);setError(undefined);setLoading(true);const request={query:query.trim(),session_id:sessionId,context:{previous_queries:messages.slice(-5).map(m=>m.content)}};try{// 使用流式响应\nconst messageId=Math.random().toString(36).substr(2,9);// 添加用户消息\nconst userMessage={id:Math.random().toString(36).substr(2,9),type:'user',content:query,timestamp:new Date()};addMessage(userMessage);// 添加助手消息占位符\nconst assistantMessage={id:messageId,type:'assistant',content:'',timestamp:new Date(),isStreaming:true,reasoning_steps:[]};addMessage(assistantMessage);setStreaming(true);setLoading(false);// 处理流式响应\ntry{for await(const chunk of apiService.queryStream(request,newAbortController.signal)){// 检查是否已被取消\nif(newAbortController.signal.aborted){console.log('请求已被取消');break;}if(chunk.type==='step'){// 更新推理步骤\nconsole.log('收到步骤数据:',chunk.data);handleStreamingStep({agent_name:chunk.data.agent_name||chunk.data.agent||'system',step_type:chunk.data.step_type||'processing',description:chunk.data.description||'',status:'processing',start_time:chunk.data.start_time||new Date().toISOString(),confidence:chunk.data.confidence},messageId);}else if(chunk.type==='step_complete'){// 步骤完成\nconsole.log('收到步骤完成数据:',chunk.data);handleStreamingStep({agent_name:chunk.data.agent_name||chunk.data.agent||'system',step_type:chunk.data.step_type||'processing',description:chunk.data.description||'',status:chunk.data.status||'success',start_time:chunk.data.start_time||new Date().toISOString(),end_time:chunk.data.end_time||new Date().toISOString(),confidence:chunk.data.confidence,result:chunk.data.result},messageId);}else if(chunk.type==='final_result'){// 最终结果\nconst response=chunk.data;console.log('最终结果数据:',response);console.log('推理路径数据:',response.reasoning_path);// 确保内容是字符串\nlet content=response.integrated_response;if(typeof content!=='string'){if(content&&typeof content==='object'){content=JSON.stringify(content);}else{content=String(content||'正在生成回答...');}}updateMessage(messageId,{content:content,response:response,reasoning_steps:response.reasoning_path||[],isStreaming:false});// 更新图谱数据\nif(response.graph_data){setGraphData(response.graph_data);}// 添加到搜索历史\naddToSearchHistory(query,'qa',1);}else if(chunk.type==='error'){throw new Error(chunk.data.error);}}}catch(streamError){var _streamError$message,_streamError$message2;console.error('流式处理错误:',streamError);// 检查是否是用户主动取消的请求\nif(streamError.name==='AbortError'||streamError.code==='ERR_CANCELED'||(_streamError$message=streamError.message)!==null&&_streamError$message!==void 0&&_streamError$message.includes('canceled')||(_streamError$message2=streamError.message)!==null&&_streamError$message2!==void 0&&_streamError$message2.includes('请求已取消')){console.log('流式请求被用户取消');return;// 不继续处理\n}// 回退到普通请求\ntry{const response=await apiService.query(request,newAbortController.signal);updateMessage(messageId,{content:response.integrated_response,response:response,isStreaming:false});if(response.graph_data){setGraphData(response.graph_data);}}catch(fallbackError){var _fallbackError$messag;// 如果回退请求也失败，检查是否是取消操作\nif(fallbackError.name==='AbortError'||fallbackError.code==='ERR_CANCELED'||(_fallbackError$messag=fallbackError.message)!==null&&_fallbackError$messag!==void 0&&_fallbackError$messag.includes('canceled')){return;// 不显示错误\n}throw fallbackError;// 重新抛出其他错误\n}}}catch(error){var _error$message,_error$message2;console.error('查询失败:',error);// 检查是否是用户主动取消的请求\nif(error.name==='AbortError'||error.code==='ERR_CANCELED'||(_error$message=error.message)!==null&&_error$message!==void 0&&_error$message.includes('canceled')||(_error$message2=error.message)!==null&&_error$message2!==void 0&&_error$message2.includes('请求已取消')){console.log('用户主动取消请求，不显示错误提示');return;// 不显示错误提示\n}setError(error.message||'查询失败，请稍后重试');message.error('查询失败: '+(error.message||'未知错误'));}finally{setLoading(false);setStreaming(false);}},[isLoading,isStreaming,sessionId,messages,addMessage,updateMessage,handleStreamingStep,setError,setLoading,setStreaming,setGraphData]);// 处理概念点击 - 修改为直接发送用户消息\nconst handleConceptClick=useCallback(async concept=>{console.log('概念点击:',concept);// 显示用户反馈\nmessage.info(`正在为您查询\"${concept}\"的相关信息...`);// 切换到智能问答标签页\nsetActiveTab('chat');// 构造用户查询消息\nconst userQuery=`请详细解释${concept}的概念`;// 直接调用查询处理函数，就像用户输入了这个问题一样\nawait handleQuerySubmit(userQuery);},[setActiveTab,handleQuerySubmit]);// 处理题目点击 - 修改为直接发送用户消息\nconst handleProblemClick=useCallback(async problemTitle=>{console.log('题目点击:',problemTitle);// 显示用户反馈\nmessage.info(`正在为您分析\"${problemTitle}\"题目...`);// 切换到智能问答标签页\nsetActiveTab('chat');// 构造用户查询消息\nconst userQuery=`请分析${problemTitle}这道题目，包括解题思路和代码实现`;// 直接调用查询处理函数，就像用户输入了这个问题一样\nawait handleQuerySubmit(userQuery);},[setActiveTab,handleQuerySubmit]);// 处理图谱节点点击\nconst handleGraphNodeClick=useCallback(async node=>{setSelectedNode(node);if(node.type==='Problem'){await handleProblemClick(node.label);}else{await handleConceptClick(node.label);}},[setSelectedNode,handleProblemClick,handleConceptClick]);// 渲染健康状态\nconst renderHealthStatus=()=>{if(healthStatus==='checking'){return/*#__PURE__*/_jsx(Spin,{size:\"small\"});}else if(healthStatus==='unhealthy'){return/*#__PURE__*/_jsx(Alert,{message:\"\\u670D\\u52A1\\u8FDE\\u63A5\\u5F02\\u5E38\",description:\"\\u65E0\\u6CD5\\u8FDE\\u63A5\\u5230\\u540E\\u7AEF\\u670D\\u52A1\\uFF0C\\u8BF7\\u68C0\\u67E5\\u670D\\u52A1\\u72B6\\u6001\",type:\"error\",showIcon:true,style:{margin:'16px 0'}});}return null;};return/*#__PURE__*/_jsxs(Layout,{className:`app-layout theme-${theme}`,children:[/*#__PURE__*/_jsx(SessionSidebar,{collapsed:sidebarCollapsed,onCollapse:setSidebarCollapsed,currentSessionId:currentSessionId,onSessionSelect:handleSessionSelect,onNewSession:handleNewSession}),sidebarCollapsed&&/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(MenuUnfoldOutlined,{}),size:\"large\",onClick:()=>setSidebarCollapsed(false),style:{position:'fixed',top:'20px',left:'20px',zIndex:1002,borderRadius:'50%',width:'48px',height:'48px',display:'flex',alignItems:'center',justifyContent:'center',boxShadow:'0 4px 12px rgba(0, 0, 0, 0.15)',transition:'all 0.3s ease'},className:\"floating-menu-btn\"}),/*#__PURE__*/_jsxs(Layout,{className:\"main-layout\",children:[/*#__PURE__*/_jsxs(Header,{className:\"app-header\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"header-left\",children:[/*#__PURE__*/_jsx(Button,{type:\"text\",icon:sidebarCollapsed?/*#__PURE__*/_jsx(MenuUnfoldOutlined,{}):/*#__PURE__*/_jsx(MenuFoldOutlined,{}),onClick:()=>setSidebarCollapsed(!sidebarCollapsed),className:\"collapse-button\"}),/*#__PURE__*/_jsx(\"div\",{className:\"header-title\",children:\"AlgoKG\\u667A\\u80FD\\u95EE\\u7B54\\u7CFB\\u7EDF\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"header-right\",children:[renderHealthStatus(),/*#__PURE__*/_jsx(Button,{type:\"text\",icon:theme==='dark'?/*#__PURE__*/_jsx(UserOutlined,{}):/*#__PURE__*/_jsx(LeftOutlined,{}),onClick:()=>setTheme(theme==='dark'?'light':'dark'),className:\"theme-button\",title:theme==='dark'?'切换到浅色主题':'切换到深色主题'}),/*#__PURE__*/_jsx(UserMenu,{onFavoritesClick:()=>setFavoritesVisible(true),onHistoryClick:()=>setHistoryVisible(true),onSettingsClick:()=>message.info('个人设置功能开发中...'),onAdminClick:()=>message.info('管理后台功能开发中...'),onLoginSuccess:handleLoginSuccess,onLogout:handleLogout,isAuthenticated:isAuthenticated,currentUser:currentUser}),/*#__PURE__*/_jsx(Button,{type:\"text\",onClick:()=>{checkAuthStatus();const token=localStorage.getItem('token');const user=localStorage.getItem('user');console.log('手动检查认证状态:',{token:!!token,user:!!user,isAuthenticated,currentUser});message.info(`认证状态: ${isAuthenticated?'已登录':'未登录'}`);},style:{marginLeft:8,fontSize:'12px'},children:\"\\u68C0\\u67E5\\u72B6\\u6001\"})]})]}),/*#__PURE__*/_jsxs(Content,{className:\"app-content\",children:[error&&/*#__PURE__*/_jsx(Alert,{message:\"\\u7CFB\\u7EDF\\u9519\\u8BEF\",description:error,type:\"error\",closable:true,onClose:()=>setError(undefined),style:{marginBottom:16}}),/*#__PURE__*/_jsxs(Tabs,{activeKey:activeTab,onChange:setActiveTab,className:\"content-tabs\",children:[/*#__PURE__*/_jsx(TabPane,{tab:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(MessageOutlined,{}),\"\\u667A\\u80FD\\u95EE\\u7B54\"]}),children:/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"messages-container\",children:[messages.map(message=>/*#__PURE__*/_jsx(MessageItem,{message:message,onConceptClick:handleConceptClick,onProblemClick:handleProblemClick},message.id)),messages.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"welcome-message\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"welcome-content\",children:[/*#__PURE__*/_jsx(BulbOutlined,{style:{fontSize:48,color:'#1890ff',marginBottom:16}}),/*#__PURE__*/_jsx(\"h2\",{children:\"\\u6B22\\u8FCE\\u4F7F\\u7528AlgoKG\\u667A\\u80FD\\u95EE\\u7B54\\u7CFB\\u7EDF\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u6211\\u662F\\u60A8\\u7684\\u7B97\\u6CD5\\u5B66\\u4E60\\u52A9\\u624B\\uFF0C\\u53EF\\u4EE5\\u5E2E\\u60A8\\uFF1A\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\u89E3\\u91CA\\u7B97\\u6CD5\\u548C\\u6570\\u636E\\u7ED3\\u6784\\u6982\\u5FF5\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u63A8\\u8350\\u76F8\\u5173\\u7EC3\\u4E60\\u9898\\u76EE\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u5206\\u6790\\u9898\\u76EE\\u89E3\\u6CD5\\u548C\\u4EE3\\u7801\\u5B9E\\u73B0\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\u6784\\u5EFA\\u4E2A\\u6027\\u5316\\u5B66\\u4E60\\u8DEF\\u5F84\"})]}),/*#__PURE__*/_jsx(\"p\",{children:\"\\u8BF7\\u5728\\u4E0B\\u65B9\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898\\u5F00\\u59CB\\u5BF9\\u8BDD\\uFF01\"})]})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"input-container\",children:/*#__PURE__*/_jsx(QueryInput,{onSubmit:handleQuerySubmit,loading:isLoading,isStreaming:isStreaming,onCancel:cancelCurrentRequest,placeholder:\"\\u8BF7\\u8F93\\u5165\\u60A8\\u7684\\u95EE\\u9898\\uFF0C\\u6BD4\\u5982\\uFF1A\\u8BF7\\u89E3\\u91CA\\u52A8\\u6001\\u89C4\\u5212\\u7684\\u6982\\u5FF5\\u548C\\u539F\\u7406\"})})]})},\"chat\"),/*#__PURE__*/_jsx(TabPane,{tab:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(NodeIndexOutlined,{}),\"\\u77E5\\u8BC6\\u56FE\\u8C31\"]}),children:/*#__PURE__*/_jsx(UnifiedGraphPage,{})},\"knowledge-graph\"),/*#__PURE__*/_jsx(TabPane,{tab:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(CodeOutlined,{}),\"\\u7B97\\u6CD5\\u53EF\\u89C6\\u5316\"]}),children:/*#__PURE__*/_jsx(AlgorithmVisualizationPage,{})},\"algorithm-visualization\"),/*#__PURE__*/_jsx(TabPane,{tab:/*#__PURE__*/_jsxs(\"span\",{children:[/*#__PURE__*/_jsx(FilterOutlined,{}),\"\\u7B14\\u8BB0\\u7BA1\\u7406\"]}),children:!isAuthenticated?/*#__PURE__*/_jsxs(\"div\",{style:{display:'flex',flexDirection:'column',alignItems:'center',justifyContent:'center',minHeight:'400px',textAlign:'center'},children:[/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:'24px'},children:[/*#__PURE__*/_jsx(FilterOutlined,{style:{fontSize:'48px',color:'#ccc',marginBottom:'16px'}}),/*#__PURE__*/_jsx(\"h3\",{style:{color:'#666'},children:\"\\u7B14\\u8BB0\\u7BA1\\u7406\"}),/*#__PURE__*/_jsx(\"p\",{style:{color:'#999',marginBottom:'24px'},children:\"\\u8BF7\\u5148\\u767B\\u5F55\\u540E\\u518D\\u7BA1\\u7406\\u60A8\\u7684\\u7B14\\u8BB0\"})]}),/*#__PURE__*/_jsxs(\"div\",{style:{color:'#999',fontSize:'14px'},children:[/*#__PURE__*/_jsx(\"p\",{children:\"\\u767B\\u5F55\\u540E\\u60A8\\u53EF\\u4EE5\\uFF1A\"}),/*#__PURE__*/_jsxs(\"ul\",{style:{textAlign:'left',marginTop:'8px'},children:[/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDCDD \\u4E0A\\u4F20\\u548C\\u7BA1\\u7406\\u7B14\\u8BB0\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDD0D \\u67E5\\u770B\\u63D0\\u53D6\\u7684\\u5B9E\\u4F53\\u4FE1\\u606F\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83C\\uDFAF \\u5B9E\\u4F53\\u77E5\\u8BC6\\u56FE\\u8C31\\u53EF\\u89C6\\u5316\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDD04 \\u91CD\\u65B0\\u62BD\\u53D6\\u5B9E\\u4F53\"}),/*#__PURE__*/_jsx(\"li\",{children:\"\\uD83D\\uDDD1\\uFE0F \\u5220\\u9664\\u4E0D\\u9700\\u8981\\u7684\\u7B14\\u8BB0\"})]}),/*#__PURE__*/_jsx(\"p\",{style:{marginTop:'16px',color:'#1890ff'},children:\"\\uD83D\\uDC46 \\u8BF7\\u70B9\\u51FB\\u53F3\\u4E0A\\u89D2\\u7684\\u7528\\u6237\\u56FE\\u6807\\u8FDB\\u884C\\u767B\\u5F55\"})]})]}):showNoteDetail&&selectedNote?/*#__PURE__*/_jsx(NoteDetail,{note:selectedNote,onBack:handleNoteDetailBack,onEntityVisualize:handleEntityVisualize}):/*#__PURE__*/_jsx(NoteList,{onNoteSelect:handleNoteSelect,onNoteDelete:()=>{// 刷新列表的逻辑可以在这里添加\n},onUploadClick:()=>setNoteUploadVisible(true),onEntityVisualize:handleEntityVisualize})},\"notes\")]})]})]}),/*#__PURE__*/_jsx(FavoritesPanel,{visible:favoritesVisible,onClose:()=>setFavoritesVisible(false)}),/*#__PURE__*/_jsx(SearchHistoryPanel,{visible:historyVisible,onClose:()=>setHistoryVisible(false),onSearchClick:handleSearchHistoryClick}),noteUploadVisible&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0, 0, 0, 0.5)',zIndex:9999,display:'flex',alignItems:'center',justifyContent:'center'},onClick:handleNoteUploadCancel,children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'white',borderRadius:8,padding:24,maxWidth:900,width:'90%',maxHeight:'90%',overflow:'auto',boxShadow:'0 4px 12px rgba(0, 0, 0, 0.15)'},onClick:e=>e.stopPropagation(),children:/*#__PURE__*/_jsx(NoteUpload,{onUploadSuccess:handleNoteUploadSuccess,onCancel:handleNoteUploadCancel})})}),showEntityGraph&&entityGraphNote&&/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0, 0, 0, 0.7)',zIndex:999999,display:'flex',alignItems:'center',justifyContent:'center',padding:'20px'},onClick:()=>setShowEntityGraph(false),children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'white',borderRadius:8,width:'95%',height:'90%',maxWidth:'1200px',boxShadow:'0 8px 24px rgba(0, 0, 0, 0.3)',display:'flex',flexDirection:'column'},onClick:e=>e.stopPropagation(),children:/*#__PURE__*/_jsx(EntityGraphVisualization,{noteId:entityGraphNote.id,onClose:()=>setShowEntityGraph(false)})})})]});};export default App;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}