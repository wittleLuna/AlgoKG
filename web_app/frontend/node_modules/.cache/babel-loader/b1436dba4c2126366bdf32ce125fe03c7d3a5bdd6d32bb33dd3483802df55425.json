{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Button,Space,message,Typography}from'antd';import{UserOutlined}from'@ant-design/icons';import{authService}from'../../services/authService';import Login from'./Login';import Portal from'../common/Portal';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const{Text}=Typography;const UserMenu=_ref=>{let{onProfileClick,onFavoritesClick,onHistoryClick,onSettingsClick,onAdminClick,onLoginSuccess,onLogout,isAuthenticated:propIsAuthenticated,currentUser:propCurrentUser}=_ref;const[user,setUser]=useState(null);const[userProfile,setUserProfile]=useState(null);const[loginModalVisible,setLoginModalVisible]=useState(false);const[loading,setLoading]=useState(false);// 使用传入的认证状态，如果没有传入则使用自己的检查逻辑\nuseEffect(()=>{if(propIsAuthenticated!==undefined){// 使用传入的认证状态\nif(propIsAuthenticated&&propCurrentUser){setUser(propCurrentUser);setUserProfile(propCurrentUser);}else{setUser(null);setUserProfile(null);}}else{// 回退到原来的检查逻辑\ncheckAuthStatus();}},[propIsAuthenticated,propCurrentUser]);const checkAuthStatus=async()=>{if(authService.isAuthenticated()){try{const currentUser=authService.getCurrentUser();setUser(currentUser);// 获取详细的用户资料\nconst profile=await authService.getUserProfile();setUserProfile(profile);}catch(error){console.error('获取用户信息失败:',error);// 如果令牌无效，清除本地存储\nauthService.removeToken();setUser(null);setUserProfile(null);}}};const handleLogin=()=>{setLoginModalVisible(true);};const handleLoginSuccess=()=>{// 如果有传入的登录成功回调，优先使用\nif(onLoginSuccess){// 从 localStorage 获取令牌和用户信息\nconst token=localStorage.getItem('token');const userStr=localStorage.getItem('user');if(token&&userStr){try{const userData=JSON.parse(userStr);onLoginSuccess(token,userData);}catch(error){console.error('解析用户数据失败:',error);}}}else{// 回退到原来的逻辑\nif(authService.isAuthenticated()){const currentUser=authService.getCurrentUser();setUser(currentUser);setUserProfile(null);}}setLoginModalVisible(false);message.success('登录成功！');};const handleLogout=async()=>{setLoading(true);try{// 如果有传入的退出回调，优先使用\nif(onLogout){onLogout();}else{// 回退到原来的逻辑\nawait authService.logout();}setUser(null);setUserProfile(null);setLoginModalVisible(false);message.success('已退出登录');}catch(error){message.error(error.message||'退出登录失败');}finally{setLoading(false);}};const getUserDisplayName=()=>{const currentUser=displayUser||user;if(!currentUser)return'';return currentUser.full_name||currentUser.username;};const getUserAvatar=()=>{const currentUser=displayUser||user;return/*#__PURE__*/_jsx(\"div\",{style:{width:32,height:32,borderRadius:'50%',backgroundColor:currentUser?'#1890ff':'#d9d9d9',color:'white',display:'flex',alignItems:'center',justifyContent:'center',fontSize:'14px',fontWeight:'bold'},children:currentUser?getUserDisplayName().charAt(0).toUpperCase():/*#__PURE__*/_jsx(UserOutlined,{})});};// 使用传入的认证状态，如果没有传入则使用本地状态\nconst isLoggedIn=propIsAuthenticated!==undefined?propIsAuthenticated:!!user;const displayUser=propCurrentUser||user;if(!isLoggedIn){// 未登录状态\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(UserOutlined,{}),loading:loading,onClick:handleLogin,children:\"\\u767B\\u5F55\"}),loginModalVisible&&/*#__PURE__*/_jsx(Portal,{children:/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0, 0, 0, 0.7)',zIndex:999999,display:'flex',alignItems:'center',justifyContent:'center'},onClick:()=>setLoginModalVisible(false),children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'white',borderRadius:8,padding:0,maxWidth:400,width:'90%',boxShadow:'0 8px 24px rgba(0, 0, 0, 0.3)'},onClick:e=>e.stopPropagation(),children:/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess})})})})]});}// 已登录状态\nreturn/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"text\",onClick:()=>onFavoritesClick&&onFavoritesClick(),title:\"\\u6211\\u7684\\u6536\\u85CF\",children:\"\\u6536\\u85CF\"}),/*#__PURE__*/_jsx(Button,{type:\"text\",onClick:()=>onHistoryClick&&onHistoryClick(),title:\"\\u641C\\u7D22\\u5386\\u53F2\",children:\"\\u5386\\u53F2\"}),/*#__PURE__*/_jsxs(Space,{style:{cursor:'pointer'},onClick:()=>onProfileClick&&onProfileClick(),children:[getUserAvatar(),/*#__PURE__*/_jsx(\"span\",{style:{color:'#333'},children:getUserDisplayName()})]}),/*#__PURE__*/_jsx(Button,{type:\"text\",onClick:handleLogout,loading:loading,title:\"\\u9000\\u51FA\\u767B\\u5F55\",children:\"\\u9000\\u51FA\"})]}),loginModalVisible&&/*#__PURE__*/_jsx(Portal,{children:/*#__PURE__*/_jsx(\"div\",{style:{position:'fixed',top:0,left:0,right:0,bottom:0,backgroundColor:'rgba(0, 0, 0, 0.7)',zIndex:999999,display:'flex',alignItems:'center',justifyContent:'center'},onClick:()=>setLoginModalVisible(false),children:/*#__PURE__*/_jsx(\"div\",{style:{backgroundColor:'white',borderRadius:8,padding:0,maxWidth:400,width:'90%',boxShadow:'0 8px 24px rgba(0, 0, 0, 0.3)'},onClick:e=>e.stopPropagation(),children:/*#__PURE__*/_jsx(Login,{onLoginSuccess:handleLoginSuccess})})})})]});};export default UserMenu;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}