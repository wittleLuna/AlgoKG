{
  "id": "SA476",
  "name": "KMP算法",
  "alias": [
    "KMP",
    "Prefix Function"
  ],
  "type": "specific_algorithm",
  "description": "KMP算法是一种高效的字符串匹配算法，通过利用已经匹配的部分信息来避免从头再做匹配。给定一个长度为 n 的字符串 s，其前缀函数被定义为一个长度为 n 的数组 π。其中 π[i] 的定义是子串 s[0…i] 最长的相等的真前缀与真后缀的长度。",
  "key_concepts": [
    "前缀表",
    "next数组",
    "最长公共前后缀",
    "字符串处理",
    "真前缀",
    "真后缀"
  ],
  "applications": [
    "字符串匹配",
    "模式识别"
  ],
  "created_at": "2025-07-19T12:56:11Z",
  "updated_at": "2025-07-19T12:56:40Z",
  "source_files": [
    "前缀函数与 KMP 算法_kama.txt",
    "前缀函数与 KMP 算法_wiki.txt"
  ],
  "spacy_entities": {
    "COMPLEXITY": [
      "O(m*n)",
      "O(1)",
      "O(n)",
      "O(m)",
      "O(n²)",
      "O(n³)",
      "O(n^2)",
      "O(n^3)"
    ],
    "SPECIFIC_ALGORITHM": [
      "KMP算法",
      "KMP",
      "kmp",
      "前缀函数"
    ],
    "DATA_STRUCTURE": [
      "数组",
      "图",
      "字符串",
      "文本",
      "string",
      "String"
    ],
    "TECHNIQUE": [
      "前缀表",
      "next数组",
      "前缀和",
      "双指针"
    ],
    "CORE_CONCEPT": [
      "初始化",
      "空间复杂度",
      "时间复杂度",
      "迭代",
      "递归",
      "动态规划",
      "状态转移方程",
      "状态转移"
    ],
    "PROBLEM_TYPE": [
      "字符串匹配问题"
    ],
    "ALGORITHM_PARADIGM": [
      "动态规划",
      "递归"
    ]
  }
}