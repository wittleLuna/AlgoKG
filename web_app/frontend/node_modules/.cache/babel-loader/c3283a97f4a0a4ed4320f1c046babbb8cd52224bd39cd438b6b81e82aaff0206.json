{"ast":null,"code":"/**\n * vis-data\n * http://visjs.org/\n *\n * Manage unstructured data using DataSet. Add, update, and remove data, and listen for changes in the data.\n *\n * @version 7.1.10\n * @date    2025-07-06T08:42:20.006Z\n *\n * @copyright (c) 2011-2017 Almende B.V, http://almende.com\n * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs\n *\n * @license\n * vis.js is dual licensed under both\n *\n *   1. The Apache 2.0 License\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *   and\n *\n *   2. The MIT License\n *      http://opensource.org/licenses/MIT\n *\n * vis.js may be distributed under either license.\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.vis = global.vis || {}));\n})(this, function (exports) {\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  function getDefaultExportFromCjs(x) {\n    return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n  var defineProperty$f = {\n    exports: {}\n  };\n  var check = function (it) {\n    return it && it.Math === Math && it;\n  };\n\n  // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n  var global$p =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) || check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  function () {\n    return this;\n  }() || commonjsGlobal || Function('return this')();\n  var fails$u = function (exec) {\n    try {\n      return !!exec();\n    } catch (error) {\n      return true;\n    }\n  };\n  var fails$t = fails$u;\n  var functionBindNative = !fails$t(function () {\n    // eslint-disable-next-line es/no-function-prototype-bind -- safe\n    var test = function () {/* empty */}.bind();\n    // eslint-disable-next-line no-prototype-builtins -- safe\n    return typeof test != 'function' || test.hasOwnProperty('prototype');\n  });\n  var NATIVE_BIND$4 = functionBindNative;\n  var FunctionPrototype$4 = Function.prototype;\n  var apply$6 = FunctionPrototype$4.apply;\n  var call$k = FunctionPrototype$4.call;\n\n  // eslint-disable-next-line es/no-reflect -- safe\n  var functionApply = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND$4 ? call$k.bind(apply$6) : function () {\n    return call$k.apply(apply$6, arguments);\n  });\n  var NATIVE_BIND$3 = functionBindNative;\n  var FunctionPrototype$3 = Function.prototype;\n  var call$j = FunctionPrototype$3.call;\n  var uncurryThisWithBind = NATIVE_BIND$3 && FunctionPrototype$3.bind.bind(call$j, call$j);\n  var functionUncurryThis = NATIVE_BIND$3 ? uncurryThisWithBind : function (fn) {\n    return function () {\n      return call$j.apply(fn, arguments);\n    };\n  };\n  var uncurryThis$q = functionUncurryThis;\n  var toString$9 = uncurryThis$q({}.toString);\n  var stringSlice$1 = uncurryThis$q(''.slice);\n  var classofRaw$2 = function (it) {\n    return stringSlice$1(toString$9(it), 8, -1);\n  };\n  var classofRaw$1 = classofRaw$2;\n  var uncurryThis$p = functionUncurryThis;\n  var functionUncurryThisClause = function (fn) {\n    // Nashorn bug:\n    //   https://github.com/zloirock/core-js/issues/1128\n    //   https://github.com/zloirock/core-js/issues/1130\n    if (classofRaw$1(fn) === 'Function') return uncurryThis$p(fn);\n  };\n  var documentAll$2 = typeof document == 'object' && document.all;\n\n  // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n  // eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\n  var IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;\n  var documentAll_1 = {\n    all: documentAll$2,\n    IS_HTMLDDA: IS_HTMLDDA\n  };\n  var $documentAll$1 = documentAll_1;\n  var documentAll$1 = $documentAll$1.all;\n\n  // `IsCallable` abstract operation\n  // https://tc39.es/ecma262/#sec-iscallable\n  var isCallable$m = $documentAll$1.IS_HTMLDDA ? function (argument) {\n    return typeof argument == 'function' || argument === documentAll$1;\n  } : function (argument) {\n    return typeof argument == 'function';\n  };\n  var objectGetOwnPropertyDescriptor = {};\n  var fails$s = fails$u;\n\n  // Detect IE8's incomplete defineProperty implementation\n  var descriptors = !fails$s(function () {\n    // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n    return Object.defineProperty({}, 1, {\n      get: function () {\n        return 7;\n      }\n    })[1] !== 7;\n  });\n  var NATIVE_BIND$2 = functionBindNative;\n  var call$i = Function.prototype.call;\n  var functionCall = NATIVE_BIND$2 ? call$i.bind(call$i) : function () {\n    return call$i.apply(call$i, arguments);\n  };\n  var objectPropertyIsEnumerable = {};\n  var $propertyIsEnumerable$1 = {}.propertyIsEnumerable;\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var getOwnPropertyDescriptor$7 = Object.getOwnPropertyDescriptor;\n\n  // Nashorn ~ JDK8 bug\n  var NASHORN_BUG = getOwnPropertyDescriptor$7 && !$propertyIsEnumerable$1.call({\n    1: 2\n  }, 1);\n\n  // `Object.prototype.propertyIsEnumerable` method implementation\n  // https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\n  objectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n    var descriptor = getOwnPropertyDescriptor$7(this, V);\n    return !!descriptor && descriptor.enumerable;\n  } : $propertyIsEnumerable$1;\n  var createPropertyDescriptor$7 = function (bitmap, value) {\n    return {\n      enumerable: !(bitmap & 1),\n      configurable: !(bitmap & 2),\n      writable: !(bitmap & 4),\n      value: value\n    };\n  };\n  var uncurryThis$o = functionUncurryThis;\n  var fails$r = fails$u;\n  var classof$f = classofRaw$2;\n  var $Object$4 = Object;\n  var split = uncurryThis$o(''.split);\n\n  // fallback for non-array-like ES3 and non-enumerable old V8 strings\n  var indexedObject = fails$r(function () {\n    // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n    // eslint-disable-next-line no-prototype-builtins -- safe\n    return !$Object$4('z').propertyIsEnumerable(0);\n  }) ? function (it) {\n    return classof$f(it) === 'String' ? split(it, '') : $Object$4(it);\n  } : $Object$4;\n\n  // we can't use just `it == null` since of `document.all` special case\n  // https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\n  var isNullOrUndefined$6 = function (it) {\n    return it === null || it === undefined;\n  };\n  var isNullOrUndefined$5 = isNullOrUndefined$6;\n  var $TypeError$g = TypeError;\n\n  // `RequireObjectCoercible` abstract operation\n  // https://tc39.es/ecma262/#sec-requireobjectcoercible\n  var requireObjectCoercible$3 = function (it) {\n    if (isNullOrUndefined$5(it)) throw new $TypeError$g(\"Can't call method on \" + it);\n    return it;\n  };\n\n  // toObject with fallback for non-array-like ES3 strings\n  var IndexedObject$3 = indexedObject;\n  var requireObjectCoercible$2 = requireObjectCoercible$3;\n  var toIndexedObject$a = function (it) {\n    return IndexedObject$3(requireObjectCoercible$2(it));\n  };\n  var isCallable$l = isCallable$m;\n  var $documentAll = documentAll_1;\n  var documentAll = $documentAll.all;\n  var isObject$h = $documentAll.IS_HTMLDDA ? function (it) {\n    return typeof it == 'object' ? it !== null : isCallable$l(it) || it === documentAll;\n  } : function (it) {\n    return typeof it == 'object' ? it !== null : isCallable$l(it);\n  };\n  var path$o = {};\n  var path$n = path$o;\n  var global$o = global$p;\n  var isCallable$k = isCallable$m;\n  var aFunction = function (variable) {\n    return isCallable$k(variable) ? variable : undefined;\n  };\n  var getBuiltIn$f = function (namespace, method) {\n    return arguments.length < 2 ? aFunction(path$n[namespace]) || aFunction(global$o[namespace]) : path$n[namespace] && path$n[namespace][method] || global$o[namespace] && global$o[namespace][method];\n  };\n  var uncurryThis$n = functionUncurryThis;\n  var objectIsPrototypeOf = uncurryThis$n({}.isPrototypeOf);\n  var engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n  var global$n = global$p;\n  var userAgent$5 = engineUserAgent;\n  var process$3 = global$n.process;\n  var Deno$1 = global$n.Deno;\n  var versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;\n  var v8 = versions && versions.v8;\n  var match, version;\n  if (v8) {\n    match = v8.split('.');\n    // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n    // but their correct versions are not interesting for us\n    version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n  }\n\n  // BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n  // so check `userAgent` even if `.v8` exists, but 0\n  if (!version && userAgent$5) {\n    match = userAgent$5.match(/Edge\\/(\\d+)/);\n    if (!match || match[1] >= 74) {\n      match = userAgent$5.match(/Chrome\\/(\\d+)/);\n      if (match) version = +match[1];\n    }\n  }\n  var engineV8Version = version;\n\n  /* eslint-disable es/no-symbol -- required for testing */\n  var V8_VERSION$3 = engineV8Version;\n  var fails$q = fails$u;\n  var global$m = global$p;\n  var $String$5 = global$m.String;\n\n  // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\n  var symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$q(function () {\n    var symbol = Symbol('symbol detection');\n    // Chrome 38 Symbol has incorrect toString conversion\n    // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n    // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n    // of course, fail.\n    return !$String$5(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;\n  });\n\n  /* eslint-disable es/no-symbol -- required for testing */\n  var NATIVE_SYMBOL$5 = symbolConstructorDetection;\n  var useSymbolAsUid = NATIVE_SYMBOL$5 && !Symbol.sham && typeof Symbol.iterator == 'symbol';\n  var getBuiltIn$e = getBuiltIn$f;\n  var isCallable$j = isCallable$m;\n  var isPrototypeOf$k = objectIsPrototypeOf;\n  var USE_SYMBOL_AS_UID$1 = useSymbolAsUid;\n  var $Object$3 = Object;\n  var isSymbol$5 = USE_SYMBOL_AS_UID$1 ? function (it) {\n    return typeof it == 'symbol';\n  } : function (it) {\n    var $Symbol = getBuiltIn$e('Symbol');\n    return isCallable$j($Symbol) && isPrototypeOf$k($Symbol.prototype, $Object$3(it));\n  };\n  var $String$4 = String;\n  var tryToString$6 = function (argument) {\n    try {\n      return $String$4(argument);\n    } catch (error) {\n      return 'Object';\n    }\n  };\n  var isCallable$i = isCallable$m;\n  var tryToString$5 = tryToString$6;\n  var $TypeError$f = TypeError;\n\n  // `Assert: IsCallable(argument) is true`\n  var aCallable$e = function (argument) {\n    if (isCallable$i(argument)) return argument;\n    throw new $TypeError$f(tryToString$5(argument) + ' is not a function');\n  };\n  var aCallable$d = aCallable$e;\n  var isNullOrUndefined$4 = isNullOrUndefined$6;\n\n  // `GetMethod` abstract operation\n  // https://tc39.es/ecma262/#sec-getmethod\n  var getMethod$3 = function (V, P) {\n    var func = V[P];\n    return isNullOrUndefined$4(func) ? undefined : aCallable$d(func);\n  };\n  var call$h = functionCall;\n  var isCallable$h = isCallable$m;\n  var isObject$g = isObject$h;\n  var $TypeError$e = TypeError;\n\n  // `OrdinaryToPrimitive` abstract operation\n  // https://tc39.es/ecma262/#sec-ordinarytoprimitive\n  var ordinaryToPrimitive$1 = function (input, pref) {\n    var fn, val;\n    if (pref === 'string' && isCallable$h(fn = input.toString) && !isObject$g(val = call$h(fn, input))) return val;\n    if (isCallable$h(fn = input.valueOf) && !isObject$g(val = call$h(fn, input))) return val;\n    if (pref !== 'string' && isCallable$h(fn = input.toString) && !isObject$g(val = call$h(fn, input))) return val;\n    throw new $TypeError$e(\"Can't convert object to primitive value\");\n  };\n  var shared$7 = {\n    exports: {}\n  };\n  var isPure = true;\n  var global$l = global$p;\n\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  var defineProperty$e = Object.defineProperty;\n  var defineGlobalProperty$1 = function (key, value) {\n    try {\n      defineProperty$e(global$l, key, {\n        value: value,\n        configurable: true,\n        writable: true\n      });\n    } catch (error) {\n      global$l[key] = value;\n    }\n    return value;\n  };\n  var global$k = global$p;\n  var defineGlobalProperty = defineGlobalProperty$1;\n  var SHARED = '__core-js_shared__';\n  var store$3 = global$k[SHARED] || defineGlobalProperty(SHARED, {});\n  var sharedStore = store$3;\n  var store$2 = sharedStore;\n  (shared$7.exports = function (key, value) {\n    return store$2[key] || (store$2[key] = value !== undefined ? value : {});\n  })('versions', []).push({\n    version: '3.33.2',\n    mode: 'pure',\n    copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n    license: 'https://github.com/zloirock/core-js/blob/v3.33.2/LICENSE',\n    source: 'https://github.com/zloirock/core-js'\n  });\n  var sharedExports = shared$7.exports;\n  var requireObjectCoercible$1 = requireObjectCoercible$3;\n  var $Object$2 = Object;\n\n  // `ToObject` abstract operation\n  // https://tc39.es/ecma262/#sec-toobject\n  var toObject$e = function (argument) {\n    return $Object$2(requireObjectCoercible$1(argument));\n  };\n  var uncurryThis$m = functionUncurryThis;\n  var toObject$d = toObject$e;\n  var hasOwnProperty = uncurryThis$m({}.hasOwnProperty);\n\n  // `HasOwnProperty` abstract operation\n  // https://tc39.es/ecma262/#sec-hasownproperty\n  // eslint-disable-next-line es/no-object-hasown -- safe\n  var hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {\n    return hasOwnProperty(toObject$d(it), key);\n  };\n  var uncurryThis$l = functionUncurryThis;\n  var id$1 = 0;\n  var postfix = Math.random();\n  var toString$8 = uncurryThis$l(1.0.toString);\n  var uid$4 = function (key) {\n    return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$8(++id$1 + postfix, 36);\n  };\n  var global$j = global$p;\n  var shared$6 = sharedExports;\n  var hasOwn$j = hasOwnProperty_1;\n  var uid$3 = uid$4;\n  var NATIVE_SYMBOL$4 = symbolConstructorDetection;\n  var USE_SYMBOL_AS_UID = useSymbolAsUid;\n  var Symbol$3 = global$j.Symbol;\n  var WellKnownSymbolsStore$2 = shared$6('wks');\n  var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol$3['for'] || Symbol$3 : Symbol$3 && Symbol$3.withoutSetter || uid$3;\n  var wellKnownSymbol$n = function (name) {\n    if (!hasOwn$j(WellKnownSymbolsStore$2, name)) {\n      WellKnownSymbolsStore$2[name] = NATIVE_SYMBOL$4 && hasOwn$j(Symbol$3, name) ? Symbol$3[name] : createWellKnownSymbol('Symbol.' + name);\n    }\n    return WellKnownSymbolsStore$2[name];\n  };\n  var call$g = functionCall;\n  var isObject$f = isObject$h;\n  var isSymbol$4 = isSymbol$5;\n  var getMethod$2 = getMethod$3;\n  var ordinaryToPrimitive = ordinaryToPrimitive$1;\n  var wellKnownSymbol$m = wellKnownSymbol$n;\n  var $TypeError$d = TypeError;\n  var TO_PRIMITIVE = wellKnownSymbol$m('toPrimitive');\n\n  // `ToPrimitive` abstract operation\n  // https://tc39.es/ecma262/#sec-toprimitive\n  var toPrimitive$6 = function (input, pref) {\n    if (!isObject$f(input) || isSymbol$4(input)) return input;\n    var exoticToPrim = getMethod$2(input, TO_PRIMITIVE);\n    var result;\n    if (exoticToPrim) {\n      if (pref === undefined) pref = 'default';\n      result = call$g(exoticToPrim, input, pref);\n      if (!isObject$f(result) || isSymbol$4(result)) return result;\n      throw new $TypeError$d(\"Can't convert object to primitive value\");\n    }\n    if (pref === undefined) pref = 'number';\n    return ordinaryToPrimitive(input, pref);\n  };\n  var toPrimitive$5 = toPrimitive$6;\n  var isSymbol$3 = isSymbol$5;\n\n  // `ToPropertyKey` abstract operation\n  // https://tc39.es/ecma262/#sec-topropertykey\n  var toPropertyKey$4 = function (argument) {\n    var key = toPrimitive$5(argument, 'string');\n    return isSymbol$3(key) ? key : key + '';\n  };\n  var global$i = global$p;\n  var isObject$e = isObject$h;\n  var document$3 = global$i.document;\n  // typeof document.createElement is 'object' in old IE\n  var EXISTS$1 = isObject$e(document$3) && isObject$e(document$3.createElement);\n  var documentCreateElement$1 = function (it) {\n    return EXISTS$1 ? document$3.createElement(it) : {};\n  };\n  var DESCRIPTORS$h = descriptors;\n  var fails$p = fails$u;\n  var createElement$1 = documentCreateElement$1;\n\n  // Thanks to IE8 for its funny defineProperty\n  var ie8DomDefine = !DESCRIPTORS$h && !fails$p(function () {\n    // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n    return Object.defineProperty(createElement$1('div'), 'a', {\n      get: function () {\n        return 7;\n      }\n    }).a !== 7;\n  });\n  var DESCRIPTORS$g = descriptors;\n  var call$f = functionCall;\n  var propertyIsEnumerableModule$2 = objectPropertyIsEnumerable;\n  var createPropertyDescriptor$6 = createPropertyDescriptor$7;\n  var toIndexedObject$9 = toIndexedObject$a;\n  var toPropertyKey$3 = toPropertyKey$4;\n  var hasOwn$i = hasOwnProperty_1;\n  var IE8_DOM_DEFINE$1 = ie8DomDefine;\n\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;\n\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n  objectGetOwnPropertyDescriptor.f = DESCRIPTORS$g ? $getOwnPropertyDescriptor$2 : function getOwnPropertyDescriptor(O, P) {\n    O = toIndexedObject$9(O);\n    P = toPropertyKey$3(P);\n    if (IE8_DOM_DEFINE$1) try {\n      return $getOwnPropertyDescriptor$2(O, P);\n    } catch (error) {/* empty */}\n    if (hasOwn$i(O, P)) return createPropertyDescriptor$6(!call$f(propertyIsEnumerableModule$2.f, O, P), O[P]);\n  };\n  var fails$o = fails$u;\n  var isCallable$g = isCallable$m;\n  var replacement = /#|\\.prototype\\./;\n  var isForced$2 = function (feature, detection) {\n    var value = data[normalize(feature)];\n    return value === POLYFILL ? true : value === NATIVE ? false : isCallable$g(detection) ? fails$o(detection) : !!detection;\n  };\n  var normalize = isForced$2.normalize = function (string) {\n    return String(string).replace(replacement, '.').toLowerCase();\n  };\n  var data = isForced$2.data = {};\n  var NATIVE = isForced$2.NATIVE = 'N';\n  var POLYFILL = isForced$2.POLYFILL = 'P';\n  var isForced_1 = isForced$2;\n  var uncurryThis$k = functionUncurryThisClause;\n  var aCallable$c = aCallable$e;\n  var NATIVE_BIND$1 = functionBindNative;\n  var bind$i = uncurryThis$k(uncurryThis$k.bind);\n\n  // optional / simple context binding\n  var functionBindContext = function (fn, that) {\n    aCallable$c(fn);\n    return that === undefined ? fn : NATIVE_BIND$1 ? bind$i(fn, that) : function /* ...args */\n    () {\n      return fn.apply(that, arguments);\n    };\n  };\n  var objectDefineProperty = {};\n  var DESCRIPTORS$f = descriptors;\n  var fails$n = fails$u;\n\n  // V8 ~ Chrome 36-\n  // https://bugs.chromium.org/p/v8/issues/detail?id=3334\n  var v8PrototypeDefineBug = DESCRIPTORS$f && fails$n(function () {\n    // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n    return Object.defineProperty(function () {/* empty */}, 'prototype', {\n      value: 42,\n      writable: false\n    }).prototype !== 42;\n  });\n  var isObject$d = isObject$h;\n  var $String$3 = String;\n  var $TypeError$c = TypeError;\n\n  // `Assert: Type(argument) is Object`\n  var anObject$d = function (argument) {\n    if (isObject$d(argument)) return argument;\n    throw new $TypeError$c($String$3(argument) + ' is not an object');\n  };\n  var DESCRIPTORS$e = descriptors;\n  var IE8_DOM_DEFINE = ie8DomDefine;\n  var V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;\n  var anObject$c = anObject$d;\n  var toPropertyKey$2 = toPropertyKey$4;\n  var $TypeError$b = TypeError;\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  var $defineProperty$1 = Object.defineProperty;\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;\n  var ENUMERABLE = 'enumerable';\n  var CONFIGURABLE$1 = 'configurable';\n  var WRITABLE = 'writable';\n\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  objectDefineProperty.f = DESCRIPTORS$e ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {\n    anObject$c(O);\n    P = toPropertyKey$2(P);\n    anObject$c(Attributes);\n    if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n      var current = $getOwnPropertyDescriptor$1(O, P);\n      if (current && current[WRITABLE]) {\n        O[P] = Attributes.value;\n        Attributes = {\n          configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],\n          enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n          writable: false\n        };\n      }\n    }\n    return $defineProperty$1(O, P, Attributes);\n  } : $defineProperty$1 : function defineProperty(O, P, Attributes) {\n    anObject$c(O);\n    P = toPropertyKey$2(P);\n    anObject$c(Attributes);\n    if (IE8_DOM_DEFINE) try {\n      return $defineProperty$1(O, P, Attributes);\n    } catch (error) {/* empty */}\n    if ('get' in Attributes || 'set' in Attributes) throw new $TypeError$b('Accessors not supported');\n    if ('value' in Attributes) O[P] = Attributes.value;\n    return O;\n  };\n  var DESCRIPTORS$d = descriptors;\n  var definePropertyModule$4 = objectDefineProperty;\n  var createPropertyDescriptor$5 = createPropertyDescriptor$7;\n  var createNonEnumerableProperty$9 = DESCRIPTORS$d ? function (object, key, value) {\n    return definePropertyModule$4.f(object, key, createPropertyDescriptor$5(1, value));\n  } : function (object, key, value) {\n    object[key] = value;\n    return object;\n  };\n  var global$h = global$p;\n  var apply$5 = functionApply;\n  var uncurryThis$j = functionUncurryThisClause;\n  var isCallable$f = isCallable$m;\n  var getOwnPropertyDescriptor$6 = objectGetOwnPropertyDescriptor.f;\n  var isForced$1 = isForced_1;\n  var path$m = path$o;\n  var bind$h = functionBindContext;\n  var createNonEnumerableProperty$8 = createNonEnumerableProperty$9;\n  var hasOwn$h = hasOwnProperty_1;\n  var wrapConstructor = function (NativeConstructor) {\n    var Wrapper = function (a, b, c) {\n      if (this instanceof Wrapper) {\n        switch (arguments.length) {\n          case 0:\n            return new NativeConstructor();\n          case 1:\n            return new NativeConstructor(a);\n          case 2:\n            return new NativeConstructor(a, b);\n        }\n        return new NativeConstructor(a, b, c);\n      }\n      return apply$5(NativeConstructor, this, arguments);\n    };\n    Wrapper.prototype = NativeConstructor.prototype;\n    return Wrapper;\n  };\n\n  /*\n    options.target         - name of the target object\n    options.global         - target is the global object\n    options.stat           - export as static methods of target\n    options.proto          - export as prototype methods of target\n    options.real           - real prototype method for the `pure` version\n    options.forced         - export even if the native feature is available\n    options.bind           - bind methods to the target, required for the `pure` version\n    options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n    options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n    options.sham           - add a flag to not completely full polyfills\n    options.enumerable     - export as enumerable property\n    options.dontCallGetSet - prevent calling a getter on target\n    options.name           - the .name of the function if it does not match the key\n  */\n  var _export = function (options, source) {\n    var TARGET = options.target;\n    var GLOBAL = options.global;\n    var STATIC = options.stat;\n    var PROTO = options.proto;\n    var nativeSource = GLOBAL ? global$h : STATIC ? global$h[TARGET] : (global$h[TARGET] || {}).prototype;\n    var target = GLOBAL ? path$m : path$m[TARGET] || createNonEnumerableProperty$8(path$m, TARGET, {})[TARGET];\n    var targetPrototype = target.prototype;\n    var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n    var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n    for (key in source) {\n      FORCED = isForced$1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n      // contains in native\n      USE_NATIVE = !FORCED && nativeSource && hasOwn$h(nativeSource, key);\n      targetProperty = target[key];\n      if (USE_NATIVE) if (options.dontCallGetSet) {\n        descriptor = getOwnPropertyDescriptor$6(nativeSource, key);\n        nativeProperty = descriptor && descriptor.value;\n      } else nativeProperty = nativeSource[key];\n\n      // export native or implementation\n      sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];\n      if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n      // bind methods to global for calling from export context\n      if (options.bind && USE_NATIVE) resultProperty = bind$h(sourceProperty, global$h);\n      // wrap global constructors for prevent changes in this version\n      else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n      // make static versions for prototype methods\n      else if (PROTO && isCallable$f(sourceProperty)) resultProperty = uncurryThis$j(sourceProperty);\n      // default case\n      else resultProperty = sourceProperty;\n\n      // add a flag to not completely full polyfills\n      if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {\n        createNonEnumerableProperty$8(resultProperty, 'sham', true);\n      }\n      createNonEnumerableProperty$8(target, key, resultProperty);\n      if (PROTO) {\n        VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n        if (!hasOwn$h(path$m, VIRTUAL_PROTOTYPE)) {\n          createNonEnumerableProperty$8(path$m, VIRTUAL_PROTOTYPE, {});\n        }\n        // export virtual prototype methods\n        createNonEnumerableProperty$8(path$m[VIRTUAL_PROTOTYPE], key, sourceProperty);\n        // export real prototype methods\n        if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n          createNonEnumerableProperty$8(targetPrototype, key, sourceProperty);\n        }\n      }\n    }\n  };\n  var $$P = _export;\n  var DESCRIPTORS$c = descriptors;\n  var defineProperty$d = objectDefineProperty.f;\n\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  $$P({\n    target: 'Object',\n    stat: true,\n    forced: Object.defineProperty !== defineProperty$d,\n    sham: !DESCRIPTORS$c\n  }, {\n    defineProperty: defineProperty$d\n  });\n  var path$l = path$o;\n  var Object$4 = path$l.Object;\n  var defineProperty$c = defineProperty$f.exports = function defineProperty(it, key, desc) {\n    return Object$4.defineProperty(it, key, desc);\n  };\n  if (Object$4.defineProperty.sham) defineProperty$c.sham = true;\n  var definePropertyExports = defineProperty$f.exports;\n  var parent$18 = definePropertyExports;\n  var defineProperty$b = parent$18;\n  var parent$17 = defineProperty$b;\n  var defineProperty$a = parent$17;\n  var parent$16 = defineProperty$a;\n  var defineProperty$9 = parent$16;\n  var defineProperty$8 = defineProperty$9;\n  var _Object$defineProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(defineProperty$8);\n  var classof$e = classofRaw$2;\n\n  // `IsArray` abstract operation\n  // https://tc39.es/ecma262/#sec-isarray\n  // eslint-disable-next-line es/no-array-isarray -- safe\n  var isArray$e = Array.isArray || function isArray(argument) {\n    return classof$e(argument) === 'Array';\n  };\n  var ceil = Math.ceil;\n  var floor$1 = Math.floor;\n\n  // `Math.trunc` method\n  // https://tc39.es/ecma262/#sec-math.trunc\n  // eslint-disable-next-line es/no-math-trunc -- safe\n  var mathTrunc = Math.trunc || function trunc(x) {\n    var n = +x;\n    return (n > 0 ? floor$1 : ceil)(n);\n  };\n  var trunc = mathTrunc;\n\n  // `ToIntegerOrInfinity` abstract operation\n  // https://tc39.es/ecma262/#sec-tointegerorinfinity\n  var toIntegerOrInfinity$4 = function (argument) {\n    var number = +argument;\n    // eslint-disable-next-line no-self-compare -- NaN check\n    return number !== number || number === 0 ? 0 : trunc(number);\n  };\n  var toIntegerOrInfinity$3 = toIntegerOrInfinity$4;\n  var min$2 = Math.min;\n\n  // `ToLength` abstract operation\n  // https://tc39.es/ecma262/#sec-tolength\n  var toLength$1 = function (argument) {\n    return argument > 0 ? min$2(toIntegerOrInfinity$3(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n  };\n  var toLength = toLength$1;\n\n  // `LengthOfArrayLike` abstract operation\n  // https://tc39.es/ecma262/#sec-lengthofarraylike\n  var lengthOfArrayLike$d = function (obj) {\n    return toLength(obj.length);\n  };\n  var $TypeError$a = TypeError;\n  var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\n  var doesNotExceedSafeInteger$4 = function (it) {\n    if (it > MAX_SAFE_INTEGER) throw $TypeError$a('Maximum allowed index exceeded');\n    return it;\n  };\n  var toPropertyKey$1 = toPropertyKey$4;\n  var definePropertyModule$3 = objectDefineProperty;\n  var createPropertyDescriptor$4 = createPropertyDescriptor$7;\n  var createProperty$6 = function (object, key, value) {\n    var propertyKey = toPropertyKey$1(key);\n    if (propertyKey in object) definePropertyModule$3.f(object, propertyKey, createPropertyDescriptor$4(0, value));else object[propertyKey] = value;\n  };\n  var wellKnownSymbol$l = wellKnownSymbol$n;\n  var TO_STRING_TAG$4 = wellKnownSymbol$l('toStringTag');\n  var test$2 = {};\n  test$2[TO_STRING_TAG$4] = 'z';\n  var toStringTagSupport = String(test$2) === '[object z]';\n  var TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;\n  var isCallable$e = isCallable$m;\n  var classofRaw = classofRaw$2;\n  var wellKnownSymbol$k = wellKnownSymbol$n;\n  var TO_STRING_TAG$3 = wellKnownSymbol$k('toStringTag');\n  var $Object$1 = Object;\n\n  // ES3 wrong here\n  var CORRECT_ARGUMENTS = classofRaw(function () {\n    return arguments;\n  }()) === 'Arguments';\n\n  // fallback for IE11 Script Access Denied error\n  var tryGet = function (it, key) {\n    try {\n      return it[key];\n    } catch (error) {/* empty */}\n  };\n\n  // getting tag from ES6+ `Object.prototype.toString`\n  var classof$d = TO_STRING_TAG_SUPPORT$2 ? classofRaw : function (it) {\n    var O, tag, result;\n    return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object$1(it), TO_STRING_TAG$3)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) === 'Object' && isCallable$e(O.callee) ? 'Arguments' : result;\n  };\n  var uncurryThis$i = functionUncurryThis;\n  var isCallable$d = isCallable$m;\n  var store$1 = sharedStore;\n  var functionToString = uncurryThis$i(Function.toString);\n\n  // this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\n  if (!isCallable$d(store$1.inspectSource)) {\n    store$1.inspectSource = function (it) {\n      return functionToString(it);\n    };\n  }\n  var inspectSource$2 = store$1.inspectSource;\n  var uncurryThis$h = functionUncurryThis;\n  var fails$m = fails$u;\n  var isCallable$c = isCallable$m;\n  var classof$c = classof$d;\n  var getBuiltIn$d = getBuiltIn$f;\n  var inspectSource$1 = inspectSource$2;\n  var noop = function () {/* empty */};\n  var empty = [];\n  var construct$4 = getBuiltIn$d('Reflect', 'construct');\n  var constructorRegExp = /^\\s*(?:class|function)\\b/;\n  var exec$1 = uncurryThis$h(constructorRegExp.exec);\n  var INCORRECT_TO_STRING = !constructorRegExp.test(noop);\n  var isConstructorModern = function isConstructor(argument) {\n    if (!isCallable$c(argument)) return false;\n    try {\n      construct$4(noop, empty, argument);\n      return true;\n    } catch (error) {\n      return false;\n    }\n  };\n  var isConstructorLegacy = function isConstructor(argument) {\n    if (!isCallable$c(argument)) return false;\n    switch (classof$c(argument)) {\n      case 'AsyncFunction':\n      case 'GeneratorFunction':\n      case 'AsyncGeneratorFunction':\n        return false;\n    }\n    try {\n      // we can't check .prototype since constructors produced by .bind haven't it\n      // `Function#toString` throws on some built-it function in some legacy engines\n      // (for example, `DOMQuad` and similar in FF41-)\n      return INCORRECT_TO_STRING || !!exec$1(constructorRegExp, inspectSource$1(argument));\n    } catch (error) {\n      return true;\n    }\n  };\n  isConstructorLegacy.sham = true;\n\n  // `IsConstructor` abstract operation\n  // https://tc39.es/ecma262/#sec-isconstructor\n  var isConstructor$4 = !construct$4 || fails$m(function () {\n    var called;\n    return isConstructorModern(isConstructorModern.call) || !isConstructorModern(Object) || !isConstructorModern(function () {\n      called = true;\n    }) || called;\n  }) ? isConstructorLegacy : isConstructorModern;\n  var isArray$d = isArray$e;\n  var isConstructor$3 = isConstructor$4;\n  var isObject$c = isObject$h;\n  var wellKnownSymbol$j = wellKnownSymbol$n;\n  var SPECIES$5 = wellKnownSymbol$j('species');\n  var $Array$3 = Array;\n\n  // a part of `ArraySpeciesCreate` abstract operation\n  // https://tc39.es/ecma262/#sec-arrayspeciescreate\n  var arraySpeciesConstructor$1 = function (originalArray) {\n    var C;\n    if (isArray$d(originalArray)) {\n      C = originalArray.constructor;\n      // cross-realm fallback\n      if (isConstructor$3(C) && (C === $Array$3 || isArray$d(C.prototype))) C = undefined;else if (isObject$c(C)) {\n        C = C[SPECIES$5];\n        if (C === null) C = undefined;\n      }\n    }\n    return C === undefined ? $Array$3 : C;\n  };\n  var arraySpeciesConstructor = arraySpeciesConstructor$1;\n\n  // `ArraySpeciesCreate` abstract operation\n  // https://tc39.es/ecma262/#sec-arrayspeciescreate\n  var arraySpeciesCreate$4 = function (originalArray, length) {\n    return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n  };\n  var fails$l = fails$u;\n  var wellKnownSymbol$i = wellKnownSymbol$n;\n  var V8_VERSION$2 = engineV8Version;\n  var SPECIES$4 = wellKnownSymbol$i('species');\n  var arrayMethodHasSpeciesSupport$5 = function (METHOD_NAME) {\n    // We can't use this feature detection in V8 since it causes\n    // deoptimization and serious performance degradation\n    // https://github.com/zloirock/core-js/issues/677\n    return V8_VERSION$2 >= 51 || !fails$l(function () {\n      var array = [];\n      var constructor = array.constructor = {};\n      constructor[SPECIES$4] = function () {\n        return {\n          foo: 1\n        };\n      };\n      return array[METHOD_NAME](Boolean).foo !== 1;\n    });\n  };\n  var $$O = _export;\n  var fails$k = fails$u;\n  var isArray$c = isArray$e;\n  var isObject$b = isObject$h;\n  var toObject$c = toObject$e;\n  var lengthOfArrayLike$c = lengthOfArrayLike$d;\n  var doesNotExceedSafeInteger$3 = doesNotExceedSafeInteger$4;\n  var createProperty$5 = createProperty$6;\n  var arraySpeciesCreate$3 = arraySpeciesCreate$4;\n  var arrayMethodHasSpeciesSupport$4 = arrayMethodHasSpeciesSupport$5;\n  var wellKnownSymbol$h = wellKnownSymbol$n;\n  var V8_VERSION$1 = engineV8Version;\n  var IS_CONCAT_SPREADABLE = wellKnownSymbol$h('isConcatSpreadable');\n\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION$1 >= 51 || !fails$k(function () {\n    var array = [];\n    array[IS_CONCAT_SPREADABLE] = false;\n    return array.concat()[0] !== array;\n  });\n  var isConcatSpreadable = function (O) {\n    if (!isObject$b(O)) return false;\n    var spreadable = O[IS_CONCAT_SPREADABLE];\n    return spreadable !== undefined ? !!spreadable : isArray$c(O);\n  };\n  var FORCED$6 = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport$4('concat');\n\n  // `Array.prototype.concat` method\n  // https://tc39.es/ecma262/#sec-array.prototype.concat\n  // with adding support of @@isConcatSpreadable and @@species\n  $$O({\n    target: 'Array',\n    proto: true,\n    arity: 1,\n    forced: FORCED$6\n  }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    concat: function concat(arg) {\n      var O = toObject$c(this);\n      var A = arraySpeciesCreate$3(O, 0);\n      var n = 0;\n      var i, k, length, len, E;\n      for (i = -1, length = arguments.length; i < length; i++) {\n        E = i === -1 ? O : arguments[i];\n        if (isConcatSpreadable(E)) {\n          len = lengthOfArrayLike$c(E);\n          doesNotExceedSafeInteger$3(n + len);\n          for (k = 0; k < len; k++, n++) if (k in E) createProperty$5(A, n, E[k]);\n        } else {\n          doesNotExceedSafeInteger$3(n + 1);\n          createProperty$5(A, n++, E);\n        }\n      }\n      A.length = n;\n      return A;\n    }\n  });\n  var classof$b = classof$d;\n  var $String$2 = String;\n  var toString$7 = function (argument) {\n    if (classof$b(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n    return $String$2(argument);\n  };\n  var objectDefineProperties = {};\n  var toIntegerOrInfinity$2 = toIntegerOrInfinity$4;\n  var max$3 = Math.max;\n  var min$1 = Math.min;\n\n  // Helper for a popular repeating case of the spec:\n  // Let integer be ? ToInteger(index).\n  // If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\n  var toAbsoluteIndex$4 = function (index, length) {\n    var integer = toIntegerOrInfinity$2(index);\n    return integer < 0 ? max$3(integer + length, 0) : min$1(integer, length);\n  };\n  var toIndexedObject$8 = toIndexedObject$a;\n  var toAbsoluteIndex$3 = toAbsoluteIndex$4;\n  var lengthOfArrayLike$b = lengthOfArrayLike$d;\n\n  // `Array.prototype.{ indexOf, includes }` methods implementation\n  var createMethod$3 = function (IS_INCLUDES) {\n    return function ($this, el, fromIndex) {\n      var O = toIndexedObject$8($this);\n      var length = lengthOfArrayLike$b(O);\n      var index = toAbsoluteIndex$3(fromIndex, length);\n      var value;\n      // Array#includes uses SameValueZero equality algorithm\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (IS_INCLUDES && el !== el) while (length > index) {\n        value = O[index++];\n        // eslint-disable-next-line no-self-compare -- NaN check\n        if (value !== value) return true;\n        // Array#indexOf ignores holes, Array#includes - not\n      } else for (; length > index; index++) {\n        if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n      }\n      return !IS_INCLUDES && -1;\n    };\n  };\n  var arrayIncludes = {\n    // `Array.prototype.includes` method\n    // https://tc39.es/ecma262/#sec-array.prototype.includes\n    includes: createMethod$3(true),\n    // `Array.prototype.indexOf` method\n    // https://tc39.es/ecma262/#sec-array.prototype.indexof\n    indexOf: createMethod$3(false)\n  };\n  var hiddenKeys$6 = {};\n  var uncurryThis$g = functionUncurryThis;\n  var hasOwn$g = hasOwnProperty_1;\n  var toIndexedObject$7 = toIndexedObject$a;\n  var indexOf = arrayIncludes.indexOf;\n  var hiddenKeys$5 = hiddenKeys$6;\n  var push$c = uncurryThis$g([].push);\n  var objectKeysInternal = function (object, names) {\n    var O = toIndexedObject$7(object);\n    var i = 0;\n    var result = [];\n    var key;\n    for (key in O) !hasOwn$g(hiddenKeys$5, key) && hasOwn$g(O, key) && push$c(result, key);\n    // Don't enum bug & hidden keys\n    while (names.length > i) if (hasOwn$g(O, key = names[i++])) {\n      ~indexOf(result, key) || push$c(result, key);\n    }\n    return result;\n  };\n\n  // IE8- don't enum bug keys\n  var enumBugKeys$3 = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];\n  var internalObjectKeys$1 = objectKeysInternal;\n  var enumBugKeys$2 = enumBugKeys$3;\n\n  // `Object.keys` method\n  // https://tc39.es/ecma262/#sec-object.keys\n  // eslint-disable-next-line es/no-object-keys -- safe\n  var objectKeys$3 = Object.keys || function keys(O) {\n    return internalObjectKeys$1(O, enumBugKeys$2);\n  };\n  var DESCRIPTORS$b = descriptors;\n  var V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;\n  var definePropertyModule$2 = objectDefineProperty;\n  var anObject$b = anObject$d;\n  var toIndexedObject$6 = toIndexedObject$a;\n  var objectKeys$2 = objectKeys$3;\n\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  // eslint-disable-next-line es/no-object-defineproperties -- safe\n  objectDefineProperties.f = DESCRIPTORS$b && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n    anObject$b(O);\n    var props = toIndexedObject$6(Properties);\n    var keys = objectKeys$2(Properties);\n    var length = keys.length;\n    var index = 0;\n    var key;\n    while (length > index) definePropertyModule$2.f(O, key = keys[index++], props[key]);\n    return O;\n  };\n  var getBuiltIn$c = getBuiltIn$f;\n  var html$2 = getBuiltIn$c('document', 'documentElement');\n  var shared$5 = sharedExports;\n  var uid$2 = uid$4;\n  var keys$7 = shared$5('keys');\n  var sharedKey$4 = function (key) {\n    return keys$7[key] || (keys$7[key] = uid$2(key));\n  };\n\n  /* global ActiveXObject -- old IE, WSH */\n  var anObject$a = anObject$d;\n  var definePropertiesModule$1 = objectDefineProperties;\n  var enumBugKeys$1 = enumBugKeys$3;\n  var hiddenKeys$4 = hiddenKeys$6;\n  var html$1 = html$2;\n  var documentCreateElement = documentCreateElement$1;\n  var sharedKey$3 = sharedKey$4;\n  var GT = '>';\n  var LT = '<';\n  var PROTOTYPE$1 = 'prototype';\n  var SCRIPT = 'script';\n  var IE_PROTO$1 = sharedKey$3('IE_PROTO');\n  var EmptyConstructor = function () {/* empty */};\n  var scriptTag = function (content) {\n    return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n  };\n\n  // Create object with fake `null` prototype: use ActiveX Object with cleared prototype\n  var NullProtoObjectViaActiveX = function (activeXDocument) {\n    activeXDocument.write(scriptTag(''));\n    activeXDocument.close();\n    var temp = activeXDocument.parentWindow.Object;\n    activeXDocument = null; // avoid memory leak\n    return temp;\n  };\n\n  // Create object with fake `null` prototype: use iframe Object with cleared prototype\n  var NullProtoObjectViaIFrame = function () {\n    // Thrash, waste and sodomy: IE GC bug\n    var iframe = documentCreateElement('iframe');\n    var JS = 'java' + SCRIPT + ':';\n    var iframeDocument;\n    iframe.style.display = 'none';\n    html$1.appendChild(iframe);\n    // https://github.com/zloirock/core-js/issues/475\n    iframe.src = String(JS);\n    iframeDocument = iframe.contentWindow.document;\n    iframeDocument.open();\n    iframeDocument.write(scriptTag('document.F=Object'));\n    iframeDocument.close();\n    return iframeDocument.F;\n  };\n\n  // Check for document.domain and active x support\n  // No need to use active x approach when document.domain is not set\n  // see https://github.com/es-shims/es5-shim/issues/150\n  // variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n  // avoid IE GC bug\n  var activeXDocument;\n  var NullProtoObject = function () {\n    try {\n      activeXDocument = new ActiveXObject('htmlfile');\n    } catch (error) {/* ignore */}\n    NullProtoObject = typeof document != 'undefined' ? document.domain && activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n    : NullProtoObjectViaIFrame() : NullProtoObjectViaActiveX(activeXDocument); // WSH\n    var length = enumBugKeys$1.length;\n    while (length--) delete NullProtoObject[PROTOTYPE$1][enumBugKeys$1[length]];\n    return NullProtoObject();\n  };\n  hiddenKeys$4[IE_PROTO$1] = true;\n\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  // eslint-disable-next-line es/no-object-create -- safe\n  var objectCreate = Object.create || function create(O, Properties) {\n    var result;\n    if (O !== null) {\n      EmptyConstructor[PROTOTYPE$1] = anObject$a(O);\n      result = new EmptyConstructor();\n      EmptyConstructor[PROTOTYPE$1] = null;\n      // add \"__proto__\" for Object.getPrototypeOf polyfill\n      result[IE_PROTO$1] = O;\n    } else result = NullProtoObject();\n    return Properties === undefined ? result : definePropertiesModule$1.f(result, Properties);\n  };\n  var objectGetOwnPropertyNames = {};\n  var internalObjectKeys = objectKeysInternal;\n  var enumBugKeys = enumBugKeys$3;\n  var hiddenKeys$3 = enumBugKeys.concat('length', 'prototype');\n\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  // eslint-disable-next-line es/no-object-getownpropertynames -- safe\n  objectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n    return internalObjectKeys(O, hiddenKeys$3);\n  };\n  var objectGetOwnPropertyNamesExternal = {};\n  var toAbsoluteIndex$2 = toAbsoluteIndex$4;\n  var lengthOfArrayLike$a = lengthOfArrayLike$d;\n  var createProperty$4 = createProperty$6;\n  var $Array$2 = Array;\n  var max$2 = Math.max;\n  var arraySliceSimple = function (O, start, end) {\n    var length = lengthOfArrayLike$a(O);\n    var k = toAbsoluteIndex$2(start, length);\n    var fin = toAbsoluteIndex$2(end === undefined ? length : end, length);\n    var result = $Array$2(max$2(fin - k, 0));\n    var n = 0;\n    for (; k < fin; k++, n++) createProperty$4(result, n, O[k]);\n    result.length = n;\n    return result;\n  };\n\n  /* eslint-disable es/no-object-getownpropertynames -- safe */\n  var classof$a = classofRaw$2;\n  var toIndexedObject$5 = toIndexedObject$a;\n  var $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;\n  var arraySlice$6 = arraySliceSimple;\n  var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];\n  var getWindowNames = function (it) {\n    try {\n      return $getOwnPropertyNames$1(it);\n    } catch (error) {\n      return arraySlice$6(windowNames);\n    }\n  };\n\n  // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n  objectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {\n    return windowNames && classof$a(it) === 'Window' ? getWindowNames(it) : $getOwnPropertyNames$1(toIndexedObject$5(it));\n  };\n  var objectGetOwnPropertySymbols = {};\n\n  // eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\n  objectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;\n  var createNonEnumerableProperty$7 = createNonEnumerableProperty$9;\n  var defineBuiltIn$6 = function (target, key, value, options) {\n    if (options && options.enumerable) target[key] = value;else createNonEnumerableProperty$7(target, key, value);\n    return target;\n  };\n  var defineProperty$7 = objectDefineProperty;\n  var defineBuiltInAccessor$3 = function (target, name, descriptor) {\n    return defineProperty$7.f(target, name, descriptor);\n  };\n  var wellKnownSymbolWrapped = {};\n  var wellKnownSymbol$g = wellKnownSymbol$n;\n  wellKnownSymbolWrapped.f = wellKnownSymbol$g;\n  var path$k = path$o;\n  var hasOwn$f = hasOwnProperty_1;\n  var wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;\n  var defineProperty$6 = objectDefineProperty.f;\n  var wellKnownSymbolDefine = function (NAME) {\n    var Symbol = path$k.Symbol || (path$k.Symbol = {});\n    if (!hasOwn$f(Symbol, NAME)) defineProperty$6(Symbol, NAME, {\n      value: wrappedWellKnownSymbolModule$1.f(NAME)\n    });\n  };\n  var call$e = functionCall;\n  var getBuiltIn$b = getBuiltIn$f;\n  var wellKnownSymbol$f = wellKnownSymbol$n;\n  var defineBuiltIn$5 = defineBuiltIn$6;\n  var symbolDefineToPrimitive = function () {\n    var Symbol = getBuiltIn$b('Symbol');\n    var SymbolPrototype = Symbol && Symbol.prototype;\n    var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n    var TO_PRIMITIVE = wellKnownSymbol$f('toPrimitive');\n    if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n      // `Symbol.prototype[@@toPrimitive]` method\n      // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n      // eslint-disable-next-line no-unused-vars -- required for .length\n      defineBuiltIn$5(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n        return call$e(valueOf, this);\n      }, {\n        arity: 1\n      });\n    }\n  };\n  var TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;\n  var classof$9 = classof$d;\n\n  // `Object.prototype.toString` method implementation\n  // https://tc39.es/ecma262/#sec-object.prototype.tostring\n  var objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString() {\n    return '[object ' + classof$9(this) + ']';\n  };\n  var TO_STRING_TAG_SUPPORT = toStringTagSupport;\n  var defineProperty$5 = objectDefineProperty.f;\n  var createNonEnumerableProperty$6 = createNonEnumerableProperty$9;\n  var hasOwn$e = hasOwnProperty_1;\n  var toString$6 = objectToString;\n  var wellKnownSymbol$e = wellKnownSymbol$n;\n  var TO_STRING_TAG$2 = wellKnownSymbol$e('toStringTag');\n  var setToStringTag$7 = function (it, TAG, STATIC, SET_METHOD) {\n    if (it) {\n      var target = STATIC ? it : it.prototype;\n      if (!hasOwn$e(target, TO_STRING_TAG$2)) {\n        defineProperty$5(target, TO_STRING_TAG$2, {\n          configurable: true,\n          value: TAG\n        });\n      }\n      if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n        createNonEnumerableProperty$6(target, 'toString', toString$6);\n      }\n    }\n  };\n  var global$g = global$p;\n  var isCallable$b = isCallable$m;\n  var WeakMap$1 = global$g.WeakMap;\n  var weakMapBasicDetection = isCallable$b(WeakMap$1) && /native code/.test(String(WeakMap$1));\n  var NATIVE_WEAK_MAP = weakMapBasicDetection;\n  var global$f = global$p;\n  var isObject$a = isObject$h;\n  var createNonEnumerableProperty$5 = createNonEnumerableProperty$9;\n  var hasOwn$d = hasOwnProperty_1;\n  var shared$4 = sharedStore;\n  var sharedKey$2 = sharedKey$4;\n  var hiddenKeys$2 = hiddenKeys$6;\n  var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\n  var TypeError$3 = global$f.TypeError;\n  var WeakMap = global$f.WeakMap;\n  var set$4, get, has;\n  var enforce = function (it) {\n    return has(it) ? get(it) : set$4(it, {});\n  };\n  var getterFor = function (TYPE) {\n    return function (it) {\n      var state;\n      if (!isObject$a(it) || (state = get(it)).type !== TYPE) {\n        throw new TypeError$3('Incompatible receiver, ' + TYPE + ' required');\n      }\n      return state;\n    };\n  };\n  if (NATIVE_WEAK_MAP || shared$4.state) {\n    var store = shared$4.state || (shared$4.state = new WeakMap());\n    /* eslint-disable no-self-assign -- prototype methods protection */\n    store.get = store.get;\n    store.has = store.has;\n    store.set = store.set;\n    /* eslint-enable no-self-assign -- prototype methods protection */\n    set$4 = function (it, metadata) {\n      if (store.has(it)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);\n      metadata.facade = it;\n      store.set(it, metadata);\n      return metadata;\n    };\n    get = function (it) {\n      return store.get(it) || {};\n    };\n    has = function (it) {\n      return store.has(it);\n    };\n  } else {\n    var STATE = sharedKey$2('state');\n    hiddenKeys$2[STATE] = true;\n    set$4 = function (it, metadata) {\n      if (hasOwn$d(it, STATE)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);\n      metadata.facade = it;\n      createNonEnumerableProperty$5(it, STATE, metadata);\n      return metadata;\n    };\n    get = function (it) {\n      return hasOwn$d(it, STATE) ? it[STATE] : {};\n    };\n    has = function (it) {\n      return hasOwn$d(it, STATE);\n    };\n  }\n  var internalState = {\n    set: set$4,\n    get: get,\n    has: has,\n    enforce: enforce,\n    getterFor: getterFor\n  };\n  var bind$g = functionBindContext;\n  var uncurryThis$f = functionUncurryThis;\n  var IndexedObject$2 = indexedObject;\n  var toObject$b = toObject$e;\n  var lengthOfArrayLike$9 = lengthOfArrayLike$d;\n  var arraySpeciesCreate$2 = arraySpeciesCreate$4;\n  var push$b = uncurryThis$f([].push);\n\n  // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\n  var createMethod$2 = function (TYPE) {\n    var IS_MAP = TYPE === 1;\n    var IS_FILTER = TYPE === 2;\n    var IS_SOME = TYPE === 3;\n    var IS_EVERY = TYPE === 4;\n    var IS_FIND_INDEX = TYPE === 6;\n    var IS_FILTER_REJECT = TYPE === 7;\n    var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;\n    return function ($this, callbackfn, that, specificCreate) {\n      var O = toObject$b($this);\n      var self = IndexedObject$2(O);\n      var boundFunction = bind$g(callbackfn, that);\n      var length = lengthOfArrayLike$9(self);\n      var index = 0;\n      var create = specificCreate || arraySpeciesCreate$2;\n      var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n      var value, result;\n      for (; length > index; index++) if (NO_HOLES || index in self) {\n        value = self[index];\n        result = boundFunction(value, index, O);\n        if (TYPE) {\n          if (IS_MAP) target[index] = result; // map\n          else if (result) switch (TYPE) {\n            case 3:\n              return true;\n            // some\n            case 5:\n              return value;\n            // find\n            case 6:\n              return index;\n            // findIndex\n            case 2:\n              push$b(target, value);\n            // filter\n          } else switch (TYPE) {\n            case 4:\n              return false;\n            // every\n            case 7:\n              push$b(target, value);\n            // filterReject\n          }\n        }\n      }\n      return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n    };\n  };\n  var arrayIteration = {\n    // `Array.prototype.forEach` method\n    // https://tc39.es/ecma262/#sec-array.prototype.foreach\n    forEach: createMethod$2(0),\n    // `Array.prototype.map` method\n    // https://tc39.es/ecma262/#sec-array.prototype.map\n    map: createMethod$2(1),\n    // `Array.prototype.filter` method\n    // https://tc39.es/ecma262/#sec-array.prototype.filter\n    filter: createMethod$2(2),\n    // `Array.prototype.some` method\n    // https://tc39.es/ecma262/#sec-array.prototype.some\n    some: createMethod$2(3),\n    // `Array.prototype.every` method\n    // https://tc39.es/ecma262/#sec-array.prototype.every\n    every: createMethod$2(4),\n    // `Array.prototype.find` method\n    // https://tc39.es/ecma262/#sec-array.prototype.find\n    find: createMethod$2(5),\n    // `Array.prototype.findIndex` method\n    // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n    findIndex: createMethod$2(6),\n    // `Array.prototype.filterReject` method\n    // https://github.com/tc39/proposal-array-filtering\n    filterReject: createMethod$2(7)\n  };\n  var $$N = _export;\n  var global$e = global$p;\n  var call$d = functionCall;\n  var uncurryThis$e = functionUncurryThis;\n  var DESCRIPTORS$a = descriptors;\n  var NATIVE_SYMBOL$3 = symbolConstructorDetection;\n  var fails$j = fails$u;\n  var hasOwn$c = hasOwnProperty_1;\n  var isPrototypeOf$j = objectIsPrototypeOf;\n  var anObject$9 = anObject$d;\n  var toIndexedObject$4 = toIndexedObject$a;\n  var toPropertyKey = toPropertyKey$4;\n  var $toString = toString$7;\n  var createPropertyDescriptor$3 = createPropertyDescriptor$7;\n  var nativeObjectCreate = objectCreate;\n  var objectKeys$1 = objectKeys$3;\n  var getOwnPropertyNamesModule$2 = objectGetOwnPropertyNames;\n  var getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;\n  var getOwnPropertySymbolsModule$3 = objectGetOwnPropertySymbols;\n  var getOwnPropertyDescriptorModule$2 = objectGetOwnPropertyDescriptor;\n  var definePropertyModule$1 = objectDefineProperty;\n  var definePropertiesModule = objectDefineProperties;\n  var propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;\n  var defineBuiltIn$4 = defineBuiltIn$6;\n  var defineBuiltInAccessor$2 = defineBuiltInAccessor$3;\n  var shared$3 = sharedExports;\n  var sharedKey$1 = sharedKey$4;\n  var hiddenKeys$1 = hiddenKeys$6;\n  var uid$1 = uid$4;\n  var wellKnownSymbol$d = wellKnownSymbol$n;\n  var wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;\n  var defineWellKnownSymbol$l = wellKnownSymbolDefine;\n  var defineSymbolToPrimitive$1 = symbolDefineToPrimitive;\n  var setToStringTag$6 = setToStringTag$7;\n  var InternalStateModule$5 = internalState;\n  var $forEach$1 = arrayIteration.forEach;\n  var HIDDEN = sharedKey$1('hidden');\n  var SYMBOL = 'Symbol';\n  var PROTOTYPE = 'prototype';\n  var setInternalState$5 = InternalStateModule$5.set;\n  var getInternalState$2 = InternalStateModule$5.getterFor(SYMBOL);\n  var ObjectPrototype$2 = Object[PROTOTYPE];\n  var $Symbol = global$e.Symbol;\n  var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\n  var RangeError = global$e.RangeError;\n  var TypeError$2 = global$e.TypeError;\n  var QObject = global$e.QObject;\n  var nativeGetOwnPropertyDescriptor$1 = getOwnPropertyDescriptorModule$2.f;\n  var nativeDefineProperty = definePropertyModule$1.f;\n  var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\n  var nativePropertyIsEnumerable = propertyIsEnumerableModule$1.f;\n  var push$a = uncurryThis$e([].push);\n  var AllSymbols = shared$3('symbols');\n  var ObjectPrototypeSymbols = shared$3('op-symbols');\n  var WellKnownSymbolsStore$1 = shared$3('wks');\n\n  // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\n  var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n  // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n  var fallbackDefineProperty = function (O, P, Attributes) {\n    var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$2, P);\n    if (ObjectPrototypeDescriptor) delete ObjectPrototype$2[P];\n    nativeDefineProperty(O, P, Attributes);\n    if (ObjectPrototypeDescriptor && O !== ObjectPrototype$2) {\n      nativeDefineProperty(ObjectPrototype$2, P, ObjectPrototypeDescriptor);\n    }\n  };\n  var setSymbolDescriptor = DESCRIPTORS$a && fails$j(function () {\n    return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n      get: function () {\n        return nativeDefineProperty(this, 'a', {\n          value: 7\n        }).a;\n      }\n    })).a !== 7;\n  }) ? fallbackDefineProperty : nativeDefineProperty;\n  var wrap = function (tag, description) {\n    var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n    setInternalState$5(symbol, {\n      type: SYMBOL,\n      tag: tag,\n      description: description\n    });\n    if (!DESCRIPTORS$a) symbol.description = description;\n    return symbol;\n  };\n  var $defineProperty = function defineProperty(O, P, Attributes) {\n    if (O === ObjectPrototype$2) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n    anObject$9(O);\n    var key = toPropertyKey(P);\n    anObject$9(Attributes);\n    if (hasOwn$c(AllSymbols, key)) {\n      if (!Attributes.enumerable) {\n        if (!hasOwn$c(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor$3(1, {}));\n        O[HIDDEN][key] = true;\n      } else {\n        if (hasOwn$c(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n        Attributes = nativeObjectCreate(Attributes, {\n          enumerable: createPropertyDescriptor$3(0, false)\n        });\n      }\n      return setSymbolDescriptor(O, key, Attributes);\n    }\n    return nativeDefineProperty(O, key, Attributes);\n  };\n  var $defineProperties = function defineProperties(O, Properties) {\n    anObject$9(O);\n    var properties = toIndexedObject$4(Properties);\n    var keys = objectKeys$1(properties).concat($getOwnPropertySymbols(properties));\n    $forEach$1(keys, function (key) {\n      if (!DESCRIPTORS$a || call$d($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);\n    });\n    return O;\n  };\n  var $create = function create(O, Properties) {\n    return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n  };\n  var $propertyIsEnumerable = function propertyIsEnumerable(V) {\n    var P = toPropertyKey(V);\n    var enumerable = call$d(nativePropertyIsEnumerable, this, P);\n    if (this === ObjectPrototype$2 && hasOwn$c(AllSymbols, P) && !hasOwn$c(ObjectPrototypeSymbols, P)) return false;\n    return enumerable || !hasOwn$c(this, P) || !hasOwn$c(AllSymbols, P) || hasOwn$c(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;\n  };\n  var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n    var it = toIndexedObject$4(O);\n    var key = toPropertyKey(P);\n    if (it === ObjectPrototype$2 && hasOwn$c(AllSymbols, key) && !hasOwn$c(ObjectPrototypeSymbols, key)) return;\n    var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);\n    if (descriptor && hasOwn$c(AllSymbols, key) && !(hasOwn$c(it, HIDDEN) && it[HIDDEN][key])) {\n      descriptor.enumerable = true;\n    }\n    return descriptor;\n  };\n  var $getOwnPropertyNames = function getOwnPropertyNames(O) {\n    var names = nativeGetOwnPropertyNames(toIndexedObject$4(O));\n    var result = [];\n    $forEach$1(names, function (key) {\n      if (!hasOwn$c(AllSymbols, key) && !hasOwn$c(hiddenKeys$1, key)) push$a(result, key);\n    });\n    return result;\n  };\n  var $getOwnPropertySymbols = function (O) {\n    var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$2;\n    var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$4(O));\n    var result = [];\n    $forEach$1(names, function (key) {\n      if (hasOwn$c(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$c(ObjectPrototype$2, key))) {\n        push$a(result, AllSymbols[key]);\n      }\n    });\n    return result;\n  };\n\n  // `Symbol` constructor\n  // https://tc39.es/ecma262/#sec-symbol-constructor\n  if (!NATIVE_SYMBOL$3) {\n    $Symbol = function Symbol() {\n      if (isPrototypeOf$j(SymbolPrototype, this)) throw new TypeError$2('Symbol is not a constructor');\n      var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n      var tag = uid$1(description);\n      var setter = function (value) {\n        var $this = this === undefined ? global$e : this;\n        if ($this === ObjectPrototype$2) call$d(setter, ObjectPrototypeSymbols, value);\n        if (hasOwn$c($this, HIDDEN) && hasOwn$c($this[HIDDEN], tag)) $this[HIDDEN][tag] = false;\n        var descriptor = createPropertyDescriptor$3(1, value);\n        try {\n          setSymbolDescriptor($this, tag, descriptor);\n        } catch (error) {\n          if (!(error instanceof RangeError)) throw error;\n          fallbackDefineProperty($this, tag, descriptor);\n        }\n      };\n      if (DESCRIPTORS$a && USE_SETTER) setSymbolDescriptor(ObjectPrototype$2, tag, {\n        configurable: true,\n        set: setter\n      });\n      return wrap(tag, description);\n    };\n    SymbolPrototype = $Symbol[PROTOTYPE];\n    defineBuiltIn$4(SymbolPrototype, 'toString', function toString() {\n      return getInternalState$2(this).tag;\n    });\n    defineBuiltIn$4($Symbol, 'withoutSetter', function (description) {\n      return wrap(uid$1(description), description);\n    });\n    propertyIsEnumerableModule$1.f = $propertyIsEnumerable;\n    definePropertyModule$1.f = $defineProperty;\n    definePropertiesModule.f = $defineProperties;\n    getOwnPropertyDescriptorModule$2.f = $getOwnPropertyDescriptor;\n    getOwnPropertyNamesModule$2.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n    getOwnPropertySymbolsModule$3.f = $getOwnPropertySymbols;\n    wrappedWellKnownSymbolModule.f = function (name) {\n      return wrap(wellKnownSymbol$d(name), name);\n    };\n    if (DESCRIPTORS$a) {\n      // https://github.com/tc39/proposal-Symbol-description\n      defineBuiltInAccessor$2(SymbolPrototype, 'description', {\n        configurable: true,\n        get: function description() {\n          return getInternalState$2(this).description;\n        }\n      });\n    }\n  }\n  $$N({\n    global: true,\n    constructor: true,\n    wrap: true,\n    forced: !NATIVE_SYMBOL$3,\n    sham: !NATIVE_SYMBOL$3\n  }, {\n    Symbol: $Symbol\n  });\n  $forEach$1(objectKeys$1(WellKnownSymbolsStore$1), function (name) {\n    defineWellKnownSymbol$l(name);\n  });\n  $$N({\n    target: SYMBOL,\n    stat: true,\n    forced: !NATIVE_SYMBOL$3\n  }, {\n    useSetter: function () {\n      USE_SETTER = true;\n    },\n    useSimple: function () {\n      USE_SETTER = false;\n    }\n  });\n  $$N({\n    target: 'Object',\n    stat: true,\n    forced: !NATIVE_SYMBOL$3,\n    sham: !DESCRIPTORS$a\n  }, {\n    // `Object.create` method\n    // https://tc39.es/ecma262/#sec-object.create\n    create: $create,\n    // `Object.defineProperty` method\n    // https://tc39.es/ecma262/#sec-object.defineproperty\n    defineProperty: $defineProperty,\n    // `Object.defineProperties` method\n    // https://tc39.es/ecma262/#sec-object.defineproperties\n    defineProperties: $defineProperties,\n    // `Object.getOwnPropertyDescriptor` method\n    // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n    getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n  });\n  $$N({\n    target: 'Object',\n    stat: true,\n    forced: !NATIVE_SYMBOL$3\n  }, {\n    // `Object.getOwnPropertyNames` method\n    // https://tc39.es/ecma262/#sec-object.getownpropertynames\n    getOwnPropertyNames: $getOwnPropertyNames\n  });\n\n  // `Symbol.prototype[@@toPrimitive]` method\n  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n  defineSymbolToPrimitive$1();\n\n  // `Symbol.prototype[@@toStringTag]` property\n  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\n  setToStringTag$6($Symbol, SYMBOL);\n  hiddenKeys$1[HIDDEN] = true;\n  var NATIVE_SYMBOL$2 = symbolConstructorDetection;\n\n  /* eslint-disable es/no-symbol -- safe */\n  var symbolRegistryDetection = NATIVE_SYMBOL$2 && !!Symbol['for'] && !!Symbol.keyFor;\n  var $$M = _export;\n  var getBuiltIn$a = getBuiltIn$f;\n  var hasOwn$b = hasOwnProperty_1;\n  var toString$5 = toString$7;\n  var shared$2 = sharedExports;\n  var NATIVE_SYMBOL_REGISTRY$1 = symbolRegistryDetection;\n  var StringToSymbolRegistry = shared$2('string-to-symbol-registry');\n  var SymbolToStringRegistry$1 = shared$2('symbol-to-string-registry');\n\n  // `Symbol.for` method\n  // https://tc39.es/ecma262/#sec-symbol.for\n  $$M({\n    target: 'Symbol',\n    stat: true,\n    forced: !NATIVE_SYMBOL_REGISTRY$1\n  }, {\n    'for': function (key) {\n      var string = toString$5(key);\n      if (hasOwn$b(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n      var symbol = getBuiltIn$a('Symbol')(string);\n      StringToSymbolRegistry[string] = symbol;\n      SymbolToStringRegistry$1[symbol] = string;\n      return symbol;\n    }\n  });\n  var $$L = _export;\n  var hasOwn$a = hasOwnProperty_1;\n  var isSymbol$2 = isSymbol$5;\n  var tryToString$4 = tryToString$6;\n  var shared$1 = sharedExports;\n  var NATIVE_SYMBOL_REGISTRY = symbolRegistryDetection;\n  var SymbolToStringRegistry = shared$1('symbol-to-string-registry');\n\n  // `Symbol.keyFor` method\n  // https://tc39.es/ecma262/#sec-symbol.keyfor\n  $$L({\n    target: 'Symbol',\n    stat: true,\n    forced: !NATIVE_SYMBOL_REGISTRY\n  }, {\n    keyFor: function keyFor(sym) {\n      if (!isSymbol$2(sym)) throw new TypeError(tryToString$4(sym) + ' is not a symbol');\n      if (hasOwn$a(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n    }\n  });\n  var uncurryThis$d = functionUncurryThis;\n  var arraySlice$5 = uncurryThis$d([].slice);\n  var uncurryThis$c = functionUncurryThis;\n  var isArray$b = isArray$e;\n  var isCallable$a = isCallable$m;\n  var classof$8 = classofRaw$2;\n  var toString$4 = toString$7;\n  var push$9 = uncurryThis$c([].push);\n  var getJsonReplacerFunction = function (replacer) {\n    if (isCallable$a(replacer)) return replacer;\n    if (!isArray$b(replacer)) return;\n    var rawLength = replacer.length;\n    var keys = [];\n    for (var i = 0; i < rawLength; i++) {\n      var element = replacer[i];\n      if (typeof element == 'string') push$9(keys, element);else if (typeof element == 'number' || classof$8(element) === 'Number' || classof$8(element) === 'String') push$9(keys, toString$4(element));\n    }\n    var keysLength = keys.length;\n    var root = true;\n    return function (key, value) {\n      if (root) {\n        root = false;\n        return value;\n      }\n      if (isArray$b(this)) return value;\n      for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n    };\n  };\n  var $$K = _export;\n  var getBuiltIn$9 = getBuiltIn$f;\n  var apply$4 = functionApply;\n  var call$c = functionCall;\n  var uncurryThis$b = functionUncurryThis;\n  var fails$i = fails$u;\n  var isCallable$9 = isCallable$m;\n  var isSymbol$1 = isSymbol$5;\n  var arraySlice$4 = arraySlice$5;\n  var getReplacerFunction = getJsonReplacerFunction;\n  var NATIVE_SYMBOL$1 = symbolConstructorDetection;\n  var $String$1 = String;\n  var $stringify = getBuiltIn$9('JSON', 'stringify');\n  var exec = uncurryThis$b(/./.exec);\n  var charAt$2 = uncurryThis$b(''.charAt);\n  var charCodeAt$1 = uncurryThis$b(''.charCodeAt);\n  var replace$1 = uncurryThis$b(''.replace);\n  var numberToString = uncurryThis$b(1.0.toString);\n  var tester = /[\\uD800-\\uDFFF]/g;\n  var low = /^[\\uD800-\\uDBFF]$/;\n  var hi = /^[\\uDC00-\\uDFFF]$/;\n  var WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL$1 || fails$i(function () {\n    var symbol = getBuiltIn$9('Symbol')('stringify detection');\n    // MS Edge converts symbol values to JSON as {}\n    return $stringify([symbol]) !== '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({\n      a: symbol\n    }) !== '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) !== '{}';\n  });\n\n  // https://github.com/tc39/proposal-well-formed-stringify\n  var ILL_FORMED_UNICODE = fails$i(function () {\n    return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"' || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n  });\n  var stringifyWithSymbolsFix = function (it, replacer) {\n    var args = arraySlice$4(arguments);\n    var $replacer = getReplacerFunction(replacer);\n    if (!isCallable$9($replacer) && (it === undefined || isSymbol$1(it))) return; // IE8 returns string on undefined\n    args[1] = function (key, value) {\n      // some old implementations (like WebKit) could pass numbers as keys\n      if (isCallable$9($replacer)) value = call$c($replacer, this, $String$1(key), value);\n      if (!isSymbol$1(value)) return value;\n    };\n    return apply$4($stringify, null, args);\n  };\n  var fixIllFormed = function (match, offset, string) {\n    var prev = charAt$2(string, offset - 1);\n    var next = charAt$2(string, offset + 1);\n    if (exec(low, match) && !exec(hi, next) || exec(hi, match) && !exec(low, prev)) {\n      return '\\\\u' + numberToString(charCodeAt$1(match, 0), 16);\n    }\n    return match;\n  };\n  if ($stringify) {\n    // `JSON.stringify` method\n    // https://tc39.es/ecma262/#sec-json.stringify\n    $$K({\n      target: 'JSON',\n      stat: true,\n      arity: 3,\n      forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE\n    }, {\n      // eslint-disable-next-line no-unused-vars -- required for `.length`\n      stringify: function stringify(it, replacer, space) {\n        var args = arraySlice$4(arguments);\n        var result = apply$4(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n        return ILL_FORMED_UNICODE && typeof result == 'string' ? replace$1(result, tester, fixIllFormed) : result;\n      }\n    });\n  }\n  var $$J = _export;\n  var NATIVE_SYMBOL = symbolConstructorDetection;\n  var fails$h = fails$u;\n  var getOwnPropertySymbolsModule$2 = objectGetOwnPropertySymbols;\n  var toObject$a = toObject$e;\n\n  // V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n  // https://bugs.chromium.org/p/v8/issues/detail?id=3443\n  var FORCED$5 = !NATIVE_SYMBOL || fails$h(function () {\n    getOwnPropertySymbolsModule$2.f(1);\n  });\n\n  // `Object.getOwnPropertySymbols` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n  $$J({\n    target: 'Object',\n    stat: true,\n    forced: FORCED$5\n  }, {\n    getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n      var $getOwnPropertySymbols = getOwnPropertySymbolsModule$2.f;\n      return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject$a(it)) : [];\n    }\n  });\n  var defineWellKnownSymbol$k = wellKnownSymbolDefine;\n\n  // `Symbol.asyncIterator` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.asynciterator\n  defineWellKnownSymbol$k('asyncIterator');\n  var defineWellKnownSymbol$j = wellKnownSymbolDefine;\n\n  // `Symbol.hasInstance` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.hasinstance\n  defineWellKnownSymbol$j('hasInstance');\n  var defineWellKnownSymbol$i = wellKnownSymbolDefine;\n\n  // `Symbol.isConcatSpreadable` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\n  defineWellKnownSymbol$i('isConcatSpreadable');\n  var defineWellKnownSymbol$h = wellKnownSymbolDefine;\n\n  // `Symbol.iterator` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.iterator\n  defineWellKnownSymbol$h('iterator');\n  var defineWellKnownSymbol$g = wellKnownSymbolDefine;\n\n  // `Symbol.match` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.match\n  defineWellKnownSymbol$g('match');\n  var defineWellKnownSymbol$f = wellKnownSymbolDefine;\n\n  // `Symbol.matchAll` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.matchall\n  defineWellKnownSymbol$f('matchAll');\n  var defineWellKnownSymbol$e = wellKnownSymbolDefine;\n\n  // `Symbol.replace` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.replace\n  defineWellKnownSymbol$e('replace');\n  var defineWellKnownSymbol$d = wellKnownSymbolDefine;\n\n  // `Symbol.search` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.search\n  defineWellKnownSymbol$d('search');\n  var defineWellKnownSymbol$c = wellKnownSymbolDefine;\n\n  // `Symbol.species` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.species\n  defineWellKnownSymbol$c('species');\n  var defineWellKnownSymbol$b = wellKnownSymbolDefine;\n\n  // `Symbol.split` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.split\n  defineWellKnownSymbol$b('split');\n  var defineWellKnownSymbol$a = wellKnownSymbolDefine;\n  var defineSymbolToPrimitive = symbolDefineToPrimitive;\n\n  // `Symbol.toPrimitive` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.toprimitive\n  defineWellKnownSymbol$a('toPrimitive');\n\n  // `Symbol.prototype[@@toPrimitive]` method\n  // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n  defineSymbolToPrimitive();\n  var getBuiltIn$8 = getBuiltIn$f;\n  var defineWellKnownSymbol$9 = wellKnownSymbolDefine;\n  var setToStringTag$5 = setToStringTag$7;\n\n  // `Symbol.toStringTag` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.tostringtag\n  defineWellKnownSymbol$9('toStringTag');\n\n  // `Symbol.prototype[@@toStringTag]` property\n  // https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\n  setToStringTag$5(getBuiltIn$8('Symbol'), 'Symbol');\n  var defineWellKnownSymbol$8 = wellKnownSymbolDefine;\n\n  // `Symbol.unscopables` well-known symbol\n  // https://tc39.es/ecma262/#sec-symbol.unscopables\n  defineWellKnownSymbol$8('unscopables');\n  var global$d = global$p;\n  var setToStringTag$4 = setToStringTag$7;\n\n  // JSON[@@toStringTag] property\n  // https://tc39.es/ecma262/#sec-json-@@tostringtag\n  setToStringTag$4(global$d.JSON, 'JSON', true);\n  var path$j = path$o;\n  var symbol$5 = path$j.Symbol;\n  var iterators = {};\n  var DESCRIPTORS$9 = descriptors;\n  var hasOwn$9 = hasOwnProperty_1;\n  var FunctionPrototype$2 = Function.prototype;\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var getDescriptor = DESCRIPTORS$9 && Object.getOwnPropertyDescriptor;\n  var EXISTS = hasOwn$9(FunctionPrototype$2, 'name');\n  // additional protection from minified / mangled / dropped function names\n  var PROPER = EXISTS && function something() {/* empty */}.name === 'something';\n  var CONFIGURABLE = EXISTS && (!DESCRIPTORS$9 || DESCRIPTORS$9 && getDescriptor(FunctionPrototype$2, 'name').configurable);\n  var functionName = {\n    EXISTS: EXISTS,\n    PROPER: PROPER,\n    CONFIGURABLE: CONFIGURABLE\n  };\n  var fails$g = fails$u;\n  var correctPrototypeGetter = !fails$g(function () {\n    function F() {/* empty */}\n    F.prototype.constructor = null;\n    // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n    return Object.getPrototypeOf(new F()) !== F.prototype;\n  });\n  var hasOwn$8 = hasOwnProperty_1;\n  var isCallable$8 = isCallable$m;\n  var toObject$9 = toObject$e;\n  var sharedKey = sharedKey$4;\n  var CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;\n  var IE_PROTO = sharedKey('IE_PROTO');\n  var $Object = Object;\n  var ObjectPrototype$1 = $Object.prototype;\n\n  // `Object.getPrototypeOf` method\n  // https://tc39.es/ecma262/#sec-object.getprototypeof\n  // eslint-disable-next-line es/no-object-getprototypeof -- safe\n  var objectGetPrototypeOf = CORRECT_PROTOTYPE_GETTER$1 ? $Object.getPrototypeOf : function (O) {\n    var object = toObject$9(O);\n    if (hasOwn$8(object, IE_PROTO)) return object[IE_PROTO];\n    var constructor = object.constructor;\n    if (isCallable$8(constructor) && object instanceof constructor) {\n      return constructor.prototype;\n    }\n    return object instanceof $Object ? ObjectPrototype$1 : null;\n  };\n  var fails$f = fails$u;\n  var isCallable$7 = isCallable$m;\n  var isObject$9 = isObject$h;\n  var create$b = objectCreate;\n  var getPrototypeOf$7 = objectGetPrototypeOf;\n  var defineBuiltIn$3 = defineBuiltIn$6;\n  var wellKnownSymbol$c = wellKnownSymbol$n;\n  var ITERATOR$4 = wellKnownSymbol$c('iterator');\n  var BUGGY_SAFARI_ITERATORS$1 = false;\n\n  // `%IteratorPrototype%` object\n  // https://tc39.es/ecma262/#sec-%iteratorprototype%-object\n  var IteratorPrototype$1, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n  /* eslint-disable es/no-array-prototype-keys -- safe */\n  if ([].keys) {\n    arrayIterator = [].keys();\n    // Safari 8 has buggy iterators w/o `next`\n    if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;else {\n      PrototypeOfArrayIteratorPrototype = getPrototypeOf$7(getPrototypeOf$7(arrayIterator));\n      if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$1 = PrototypeOfArrayIteratorPrototype;\n    }\n  }\n  var NEW_ITERATOR_PROTOTYPE = !isObject$9(IteratorPrototype$1) || fails$f(function () {\n    var test = {};\n    // FF44- legacy iterators case\n    return IteratorPrototype$1[ITERATOR$4].call(test) !== test;\n  });\n  if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$1 = {};else IteratorPrototype$1 = create$b(IteratorPrototype$1);\n\n  // `%IteratorPrototype%[@@iterator]()` method\n  // https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\n  if (!isCallable$7(IteratorPrototype$1[ITERATOR$4])) {\n    defineBuiltIn$3(IteratorPrototype$1, ITERATOR$4, function () {\n      return this;\n    });\n  }\n  var iteratorsCore = {\n    IteratorPrototype: IteratorPrototype$1,\n    BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1\n  };\n  var IteratorPrototype = iteratorsCore.IteratorPrototype;\n  var create$a = objectCreate;\n  var createPropertyDescriptor$2 = createPropertyDescriptor$7;\n  var setToStringTag$3 = setToStringTag$7;\n  var Iterators$5 = iterators;\n  var returnThis$1 = function () {\n    return this;\n  };\n  var iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n    var TO_STRING_TAG = NAME + ' Iterator';\n    IteratorConstructor.prototype = create$a(IteratorPrototype, {\n      next: createPropertyDescriptor$2(+!ENUMERABLE_NEXT, next)\n    });\n    setToStringTag$3(IteratorConstructor, TO_STRING_TAG, false, true);\n    Iterators$5[TO_STRING_TAG] = returnThis$1;\n    return IteratorConstructor;\n  };\n  var uncurryThis$a = functionUncurryThis;\n  var aCallable$b = aCallable$e;\n  var functionUncurryThisAccessor = function (object, key, method) {\n    try {\n      // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n      return uncurryThis$a(aCallable$b(Object.getOwnPropertyDescriptor(object, key)[method]));\n    } catch (error) {/* empty */}\n  };\n  var isCallable$6 = isCallable$m;\n  var $String = String;\n  var $TypeError$9 = TypeError;\n  var aPossiblePrototype$1 = function (argument) {\n    if (typeof argument == 'object' || isCallable$6(argument)) return argument;\n    throw new $TypeError$9(\"Can't set \" + $String(argument) + ' as a prototype');\n  };\n\n  /* eslint-disable no-proto -- safe */\n  var uncurryThisAccessor = functionUncurryThisAccessor;\n  var anObject$8 = anObject$d;\n  var aPossiblePrototype = aPossiblePrototype$1;\n\n  // `Object.setPrototypeOf` method\n  // https://tc39.es/ecma262/#sec-object.setprototypeof\n  // Works with __proto__ only. Old v8 can't work with null proto objects.\n  // eslint-disable-next-line es/no-object-setprototypeof -- safe\n  var objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n    var CORRECT_SETTER = false;\n    var test = {};\n    var setter;\n    try {\n      setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n      setter(test, []);\n      CORRECT_SETTER = test instanceof Array;\n    } catch (error) {/* empty */}\n    return function setPrototypeOf(O, proto) {\n      anObject$8(O);\n      aPossiblePrototype(proto);\n      if (CORRECT_SETTER) setter(O, proto);else O.__proto__ = proto;\n      return O;\n    };\n  }() : undefined);\n  var $$I = _export;\n  var call$b = functionCall;\n  var FunctionName = functionName;\n  var createIteratorConstructor = iteratorCreateConstructor;\n  var getPrototypeOf$6 = objectGetPrototypeOf;\n  var setToStringTag$2 = setToStringTag$7;\n  var defineBuiltIn$2 = defineBuiltIn$6;\n  var wellKnownSymbol$b = wellKnownSymbol$n;\n  var Iterators$4 = iterators;\n  var IteratorsCore = iteratorsCore;\n  var PROPER_FUNCTION_NAME = FunctionName.PROPER;\n  FunctionName.CONFIGURABLE;\n  IteratorsCore.IteratorPrototype;\n  var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\n  var ITERATOR$3 = wellKnownSymbol$b('iterator');\n  var KEYS = 'keys';\n  var VALUES = 'values';\n  var ENTRIES = 'entries';\n  var returnThis = function () {\n    return this;\n  };\n  var iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n    createIteratorConstructor(IteratorConstructor, NAME, next);\n    var getIterationMethod = function (KIND) {\n      if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n      if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];\n      switch (KIND) {\n        case KEYS:\n          return function keys() {\n            return new IteratorConstructor(this, KIND);\n          };\n        case VALUES:\n          return function values() {\n            return new IteratorConstructor(this, KIND);\n          };\n        case ENTRIES:\n          return function entries() {\n            return new IteratorConstructor(this, KIND);\n          };\n      }\n      return function () {\n        return new IteratorConstructor(this);\n      };\n    };\n    var TO_STRING_TAG = NAME + ' Iterator';\n    var INCORRECT_VALUES_NAME = false;\n    var IterablePrototype = Iterable.prototype;\n    var nativeIterator = IterablePrototype[ITERATOR$3] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];\n    var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n    var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n    var CurrentIteratorPrototype, methods, KEY;\n\n    // fix native\n    if (anyNativeIterator) {\n      CurrentIteratorPrototype = getPrototypeOf$6(anyNativeIterator.call(new Iterable()));\n      if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n        // Set @@toStringTag to native iterators\n        setToStringTag$2(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n        Iterators$4[TO_STRING_TAG] = returnThis;\n      }\n    }\n\n    // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n    if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n      {\n        INCORRECT_VALUES_NAME = true;\n        defaultIterator = function values() {\n          return call$b(nativeIterator, this);\n        };\n      }\n    }\n\n    // export additional methods\n    if (DEFAULT) {\n      methods = {\n        values: getIterationMethod(VALUES),\n        keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n        entries: getIterationMethod(ENTRIES)\n      };\n      if (FORCED) for (KEY in methods) {\n        if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n          defineBuiltIn$2(IterablePrototype, KEY, methods[KEY]);\n        }\n      } else $$I({\n        target: NAME,\n        proto: true,\n        forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME\n      }, methods);\n    }\n\n    // define iterator\n    if (FORCED && IterablePrototype[ITERATOR$3] !== defaultIterator) {\n      defineBuiltIn$2(IterablePrototype, ITERATOR$3, defaultIterator, {\n        name: DEFAULT\n      });\n    }\n    Iterators$4[NAME] = defaultIterator;\n    return methods;\n  };\n\n  // `CreateIterResultObject` abstract operation\n  // https://tc39.es/ecma262/#sec-createiterresultobject\n  var createIterResultObject$3 = function (value, done) {\n    return {\n      value: value,\n      done: done\n    };\n  };\n  var toIndexedObject$3 = toIndexedObject$a;\n  var Iterators$3 = iterators;\n  var InternalStateModule$4 = internalState;\n  objectDefineProperty.f;\n  var defineIterator$2 = iteratorDefine;\n  var createIterResultObject$2 = createIterResultObject$3;\n  var ARRAY_ITERATOR = 'Array Iterator';\n  var setInternalState$4 = InternalStateModule$4.set;\n  var getInternalState$1 = InternalStateModule$4.getterFor(ARRAY_ITERATOR);\n\n  // `Array.prototype.entries` method\n  // https://tc39.es/ecma262/#sec-array.prototype.entries\n  // `Array.prototype.keys` method\n  // https://tc39.es/ecma262/#sec-array.prototype.keys\n  // `Array.prototype.values` method\n  // https://tc39.es/ecma262/#sec-array.prototype.values\n  // `Array.prototype[@@iterator]` method\n  // https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n  // `CreateArrayIterator` internal method\n  // https://tc39.es/ecma262/#sec-createarrayiterator\n  defineIterator$2(Array, 'Array', function (iterated, kind) {\n    setInternalState$4(this, {\n      type: ARRAY_ITERATOR,\n      target: toIndexedObject$3(iterated),\n      // target\n      index: 0,\n      // next index\n      kind: kind // kind\n    });\n    // `%ArrayIteratorPrototype%.next` method\n    // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n  }, function () {\n    var state = getInternalState$1(this);\n    var target = state.target;\n    var index = state.index++;\n    if (!target || index >= target.length) {\n      state.target = undefined;\n      return createIterResultObject$2(undefined, true);\n    }\n    switch (state.kind) {\n      case 'keys':\n        return createIterResultObject$2(index, false);\n      case 'values':\n        return createIterResultObject$2(target[index], false);\n    }\n    return createIterResultObject$2([index, target[index]], false);\n  }, 'values');\n\n  // argumentsList[@@iterator] is %ArrayProto_values%\n  // https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n  // https://tc39.es/ecma262/#sec-createmappedargumentsobject\n  Iterators$3.Arguments = Iterators$3.Array;\n\n  // iterable DOM collections\n  // flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\n  var domIterables = {\n    CSSRuleList: 0,\n    CSSStyleDeclaration: 0,\n    CSSValueList: 0,\n    ClientRectList: 0,\n    DOMRectList: 0,\n    DOMStringList: 0,\n    DOMTokenList: 1,\n    DataTransferItemList: 0,\n    FileList: 0,\n    HTMLAllCollection: 0,\n    HTMLCollection: 0,\n    HTMLFormElement: 0,\n    HTMLSelectElement: 0,\n    MediaList: 0,\n    MimeTypeArray: 0,\n    NamedNodeMap: 0,\n    NodeList: 1,\n    PaintRequestList: 0,\n    Plugin: 0,\n    PluginArray: 0,\n    SVGLengthList: 0,\n    SVGNumberList: 0,\n    SVGPathSegList: 0,\n    SVGPointList: 0,\n    SVGStringList: 0,\n    SVGTransformList: 0,\n    SourceBufferList: 0,\n    StyleSheetList: 0,\n    TextTrackCueList: 0,\n    TextTrackList: 0,\n    TouchList: 0\n  };\n  var DOMIterables$4 = domIterables;\n  var global$c = global$p;\n  var classof$7 = classof$d;\n  var createNonEnumerableProperty$4 = createNonEnumerableProperty$9;\n  var Iterators$2 = iterators;\n  var wellKnownSymbol$a = wellKnownSymbol$n;\n  var TO_STRING_TAG$1 = wellKnownSymbol$a('toStringTag');\n  for (var COLLECTION_NAME in DOMIterables$4) {\n    var Collection = global$c[COLLECTION_NAME];\n    var CollectionPrototype = Collection && Collection.prototype;\n    if (CollectionPrototype && classof$7(CollectionPrototype) !== TO_STRING_TAG$1) {\n      createNonEnumerableProperty$4(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME);\n    }\n    Iterators$2[COLLECTION_NAME] = Iterators$2.Array;\n  }\n  var parent$15 = symbol$5;\n  var symbol$4 = parent$15;\n  var wellKnownSymbol$9 = wellKnownSymbol$n;\n  var defineProperty$4 = objectDefineProperty.f;\n  var METADATA$1 = wellKnownSymbol$9('metadata');\n  var FunctionPrototype$1 = Function.prototype;\n\n  // Function.prototype[@@metadata]\n  // https://github.com/tc39/proposal-decorator-metadata\n  if (FunctionPrototype$1[METADATA$1] === undefined) {\n    defineProperty$4(FunctionPrototype$1, METADATA$1, {\n      value: null\n    });\n  }\n  var defineWellKnownSymbol$7 = wellKnownSymbolDefine;\n\n  // `Symbol.asyncDispose` well-known symbol\n  // https://github.com/tc39/proposal-async-explicit-resource-management\n  defineWellKnownSymbol$7('asyncDispose');\n  var defineWellKnownSymbol$6 = wellKnownSymbolDefine;\n\n  // `Symbol.dispose` well-known symbol\n  // https://github.com/tc39/proposal-explicit-resource-management\n  defineWellKnownSymbol$6('dispose');\n  var defineWellKnownSymbol$5 = wellKnownSymbolDefine;\n\n  // `Symbol.metadata` well-known symbol\n  // https://github.com/tc39/proposal-decorators\n  defineWellKnownSymbol$5('metadata');\n  var parent$14 = symbol$4;\n  var symbol$3 = parent$14;\n  var getBuiltIn$7 = getBuiltIn$f;\n  var uncurryThis$9 = functionUncurryThis;\n  var Symbol$2 = getBuiltIn$7('Symbol');\n  var keyFor = Symbol$2.keyFor;\n  var thisSymbolValue$1 = uncurryThis$9(Symbol$2.prototype.valueOf);\n\n  // `Symbol.isRegisteredSymbol` method\n  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n  var symbolIsRegistered = Symbol$2.isRegisteredSymbol || function isRegisteredSymbol(value) {\n    try {\n      return keyFor(thisSymbolValue$1(value)) !== undefined;\n    } catch (error) {\n      return false;\n    }\n  };\n  var $$H = _export;\n  var isRegisteredSymbol$1 = symbolIsRegistered;\n\n  // `Symbol.isRegisteredSymbol` method\n  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n  $$H({\n    target: 'Symbol',\n    stat: true\n  }, {\n    isRegisteredSymbol: isRegisteredSymbol$1\n  });\n  var shared = sharedExports;\n  var getBuiltIn$6 = getBuiltIn$f;\n  var uncurryThis$8 = functionUncurryThis;\n  var isSymbol = isSymbol$5;\n  var wellKnownSymbol$8 = wellKnownSymbol$n;\n  var Symbol$1 = getBuiltIn$6('Symbol');\n  var $isWellKnownSymbol = Symbol$1.isWellKnownSymbol;\n  var getOwnPropertyNames = getBuiltIn$6('Object', 'getOwnPropertyNames');\n  var thisSymbolValue = uncurryThis$8(Symbol$1.prototype.valueOf);\n  var WellKnownSymbolsStore = shared('wks');\n  for (var i = 0, symbolKeys = getOwnPropertyNames(Symbol$1), symbolKeysLength = symbolKeys.length; i < symbolKeysLength; i++) {\n    // some old engines throws on access to some keys like `arguments` or `caller`\n    try {\n      var symbolKey = symbolKeys[i];\n      if (isSymbol(Symbol$1[symbolKey])) wellKnownSymbol$8(symbolKey);\n    } catch (error) {/* empty */}\n  }\n\n  // `Symbol.isWellKnownSymbol` method\n  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n  // We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n  var symbolIsWellKnown = function isWellKnownSymbol(value) {\n    if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;\n    try {\n      var symbol = thisSymbolValue(value);\n      for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {\n        // eslint-disable-next-line eqeqeq -- polyfilled symbols case\n        if (WellKnownSymbolsStore[keys[j]] == symbol) return true;\n      }\n    } catch (error) {/* empty */}\n    return false;\n  };\n  var $$G = _export;\n  var isWellKnownSymbol$1 = symbolIsWellKnown;\n\n  // `Symbol.isWellKnownSymbol` method\n  // https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n  // We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n  $$G({\n    target: 'Symbol',\n    stat: true,\n    forced: true\n  }, {\n    isWellKnownSymbol: isWellKnownSymbol$1\n  });\n  var defineWellKnownSymbol$4 = wellKnownSymbolDefine;\n\n  // `Symbol.matcher` well-known symbol\n  // https://github.com/tc39/proposal-pattern-matching\n  defineWellKnownSymbol$4('matcher');\n  var defineWellKnownSymbol$3 = wellKnownSymbolDefine;\n\n  // `Symbol.observable` well-known symbol\n  // https://github.com/tc39/proposal-observable\n  defineWellKnownSymbol$3('observable');\n  var $$F = _export;\n  var isRegisteredSymbol = symbolIsRegistered;\n\n  // `Symbol.isRegistered` method\n  // obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n  $$F({\n    target: 'Symbol',\n    stat: true,\n    name: 'isRegisteredSymbol'\n  }, {\n    isRegistered: isRegisteredSymbol\n  });\n  var $$E = _export;\n  var isWellKnownSymbol = symbolIsWellKnown;\n\n  // `Symbol.isWellKnown` method\n  // obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n  // We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n  $$E({\n    target: 'Symbol',\n    stat: true,\n    name: 'isWellKnownSymbol',\n    forced: true\n  }, {\n    isWellKnown: isWellKnownSymbol\n  });\n\n  // TODO: Remove from `core-js@4`\n  var defineWellKnownSymbol$2 = wellKnownSymbolDefine;\n\n  // `Symbol.metadataKey` well-known symbol\n  // https://github.com/tc39/proposal-decorator-metadata\n  defineWellKnownSymbol$2('metadataKey');\n\n  // TODO: remove from `core-js@4`\n  var defineWellKnownSymbol$1 = wellKnownSymbolDefine;\n\n  // `Symbol.patternMatch` well-known symbol\n  // https://github.com/tc39/proposal-pattern-matching\n  defineWellKnownSymbol$1('patternMatch');\n\n  // TODO: remove from `core-js@4`\n  var defineWellKnownSymbol = wellKnownSymbolDefine;\n  defineWellKnownSymbol('replaceAll');\n  var parent$13 = symbol$3;\n\n  // TODO: Remove from `core-js@4`\n\n  var symbol$2 = parent$13;\n  var symbol$1 = symbol$2;\n  var _Symbol$1 = /*@__PURE__*/getDefaultExportFromCjs(symbol$1);\n  var uncurryThis$7 = functionUncurryThis;\n  var toIntegerOrInfinity$1 = toIntegerOrInfinity$4;\n  var toString$3 = toString$7;\n  var requireObjectCoercible = requireObjectCoercible$3;\n  var charAt$1 = uncurryThis$7(''.charAt);\n  var charCodeAt = uncurryThis$7(''.charCodeAt);\n  var stringSlice = uncurryThis$7(''.slice);\n  var createMethod$1 = function (CONVERT_TO_STRING) {\n    return function ($this, pos) {\n      var S = toString$3(requireObjectCoercible($this));\n      var position = toIntegerOrInfinity$1(pos);\n      var size = S.length;\n      var first, second;\n      if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n      first = charCodeAt(S, position);\n      return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? charAt$1(S, position) : first : CONVERT_TO_STRING ? stringSlice(S, position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n    };\n  };\n  var stringMultibyte = {\n    // `String.prototype.codePointAt` method\n    // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n    codeAt: createMethod$1(false),\n    // `String.prototype.at` method\n    // https://github.com/mathiasbynens/String.prototype.at\n    charAt: createMethod$1(true)\n  };\n  var charAt = stringMultibyte.charAt;\n  var toString$2 = toString$7;\n  var InternalStateModule$3 = internalState;\n  var defineIterator$1 = iteratorDefine;\n  var createIterResultObject$1 = createIterResultObject$3;\n  var STRING_ITERATOR = 'String Iterator';\n  var setInternalState$3 = InternalStateModule$3.set;\n  var getInternalState = InternalStateModule$3.getterFor(STRING_ITERATOR);\n\n  // `String.prototype[@@iterator]` method\n  // https://tc39.es/ecma262/#sec-string.prototype-@@iterator\n  defineIterator$1(String, 'String', function (iterated) {\n    setInternalState$3(this, {\n      type: STRING_ITERATOR,\n      string: toString$2(iterated),\n      index: 0\n    });\n    // `%StringIteratorPrototype%.next` method\n    // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n  }, function next() {\n    var state = getInternalState(this);\n    var string = state.string;\n    var index = state.index;\n    var point;\n    if (index >= string.length) return createIterResultObject$1(undefined, true);\n    point = charAt(string, index);\n    state.index += point.length;\n    return createIterResultObject$1(point, false);\n  });\n  var WrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;\n  var iterator$5 = WrappedWellKnownSymbolModule$1.f('iterator');\n  var parent$12 = iterator$5;\n  var iterator$4 = parent$12;\n  var parent$11 = iterator$4;\n  var iterator$3 = parent$11;\n  var parent$10 = iterator$3;\n  var iterator$2 = parent$10;\n  var iterator$1 = iterator$2;\n  var _Symbol$iterator$1 = /*@__PURE__*/getDefaultExportFromCjs(iterator$1);\n  function _typeof$1(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof$1 = \"function\" == typeof _Symbol$1 && \"symbol\" == typeof _Symbol$iterator$1 ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof _Symbol$1 && o.constructor === _Symbol$1 && o !== _Symbol$1.prototype ? \"symbol\" : typeof o;\n    }, _typeof$1(o);\n  }\n  var WrappedWellKnownSymbolModule = wellKnownSymbolWrapped;\n  var toPrimitive$4 = WrappedWellKnownSymbolModule.f('toPrimitive');\n  var parent$$ = toPrimitive$4;\n  var toPrimitive$3 = parent$$;\n  var parent$_ = toPrimitive$3;\n  var toPrimitive$2 = parent$_;\n  var parent$Z = toPrimitive$2;\n  var toPrimitive$1 = parent$Z;\n  var toPrimitive = toPrimitive$1;\n  var _Symbol$toPrimitive = /*@__PURE__*/getDefaultExportFromCjs(toPrimitive);\n  function _toPrimitive(input, hint) {\n    if (_typeof$1(input) !== \"object\" || input === null) return input;\n    var prim = input[_Symbol$toPrimitive];\n    if (prim !== undefined) {\n      var res = prim.call(input, hint || \"default\");\n      if (_typeof$1(res) !== \"object\") return res;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (hint === \"string\" ? String : Number)(input);\n  }\n  function _toPropertyKey(arg) {\n    var key = _toPrimitive(arg, \"string\");\n    return _typeof$1(key) === \"symbol\" ? key : String(key);\n  }\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      _Object$defineProperty$1(target, _toPropertyKey(descriptor.key), descriptor);\n    }\n  }\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    _Object$defineProperty$1(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n  function _defineProperty(obj, key, value) {\n    key = _toPropertyKey(key);\n    if (key in obj) {\n      _Object$defineProperty$1(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    } else {\n      obj[key] = value;\n    }\n    return obj;\n  }\n  var uncurryThis$6 = functionUncurryThis;\n  var aCallable$a = aCallable$e;\n  var isObject$8 = isObject$h;\n  var hasOwn$7 = hasOwnProperty_1;\n  var arraySlice$3 = arraySlice$5;\n  var NATIVE_BIND = functionBindNative;\n  var $Function = Function;\n  var concat$6 = uncurryThis$6([].concat);\n  var join = uncurryThis$6([].join);\n  var factories = {};\n  var construct$3 = function (C, argsLength, args) {\n    if (!hasOwn$7(factories, argsLength)) {\n      var list = [];\n      var i = 0;\n      for (; i < argsLength; i++) list[i] = 'a[' + i + ']';\n      factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');\n    }\n    return factories[argsLength](C, args);\n  };\n\n  // `Function.prototype.bind` method implementation\n  // https://tc39.es/ecma262/#sec-function.prototype.bind\n  // eslint-disable-next-line es/no-function-prototype-bind -- detection\n  var functionBind = NATIVE_BIND ? $Function.bind : function bind(that /* , ...args */) {\n    var F = aCallable$a(this);\n    var Prototype = F.prototype;\n    var partArgs = arraySlice$3(arguments, 1);\n    var boundFunction = function bound(/* args... */\n    ) {\n      var args = concat$6(partArgs, arraySlice$3(arguments));\n      return this instanceof boundFunction ? construct$3(F, args.length, args) : F.apply(that, args);\n    };\n    if (isObject$8(Prototype)) boundFunction.prototype = Prototype;\n    return boundFunction;\n  };\n\n  // TODO: Remove from `core-js@4`\n  var $$D = _export;\n  var bind$f = functionBind;\n\n  // `Function.prototype.bind` method\n  // https://tc39.es/ecma262/#sec-function.prototype.bind\n  // eslint-disable-next-line es/no-function-prototype-bind -- detection\n  $$D({\n    target: 'Function',\n    proto: true,\n    forced: Function.bind !== bind$f\n  }, {\n    bind: bind$f\n  });\n  var global$b = global$p;\n  var path$i = path$o;\n  var getBuiltInPrototypeMethod$g = function (CONSTRUCTOR, METHOD) {\n    var Namespace = path$i[CONSTRUCTOR + 'Prototype'];\n    var pureMethod = Namespace && Namespace[METHOD];\n    if (pureMethod) return pureMethod;\n    var NativeConstructor = global$b[CONSTRUCTOR];\n    var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n    return NativePrototype && NativePrototype[METHOD];\n  };\n  var getBuiltInPrototypeMethod$f = getBuiltInPrototypeMethod$g;\n  var bind$e = getBuiltInPrototypeMethod$f('Function', 'bind');\n  var isPrototypeOf$i = objectIsPrototypeOf;\n  var method$f = bind$e;\n  var FunctionPrototype = Function.prototype;\n  var bind$d = function (it) {\n    var own = it.bind;\n    return it === FunctionPrototype || isPrototypeOf$i(FunctionPrototype, it) && own === FunctionPrototype.bind ? method$f : own;\n  };\n  var parent$Y = bind$d;\n  var bind$c = parent$Y;\n  var bind$b = bind$c;\n  var _bindInstanceProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(bind$b);\n  var aCallable$9 = aCallable$e;\n  var toObject$8 = toObject$e;\n  var IndexedObject$1 = indexedObject;\n  var lengthOfArrayLike$8 = lengthOfArrayLike$d;\n  var $TypeError$8 = TypeError;\n\n  // `Array.prototype.{ reduce, reduceRight }` methods implementation\n  var createMethod = function (IS_RIGHT) {\n    return function (that, callbackfn, argumentsLength, memo) {\n      aCallable$9(callbackfn);\n      var O = toObject$8(that);\n      var self = IndexedObject$1(O);\n      var length = lengthOfArrayLike$8(O);\n      var index = IS_RIGHT ? length - 1 : 0;\n      var i = IS_RIGHT ? -1 : 1;\n      if (argumentsLength < 2) while (true) {\n        if (index in self) {\n          memo = self[index];\n          index += i;\n          break;\n        }\n        index += i;\n        if (IS_RIGHT ? index < 0 : length <= index) {\n          throw new $TypeError$8('Reduce of empty array with no initial value');\n        }\n      }\n      for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n        memo = callbackfn(memo, self[index], index, O);\n      }\n      return memo;\n    };\n  };\n  var arrayReduce = {\n    // `Array.prototype.reduce` method\n    // https://tc39.es/ecma262/#sec-array.prototype.reduce\n    left: createMethod(false),\n    // `Array.prototype.reduceRight` method\n    // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n    right: createMethod(true)\n  };\n  var fails$e = fails$u;\n  var arrayMethodIsStrict$4 = function (METHOD_NAME, argument) {\n    var method = [][METHOD_NAME];\n    return !!method && fails$e(function () {\n      // eslint-disable-next-line no-useless-call -- required for testing\n      method.call(null, argument || function () {\n        return 1;\n      }, 1);\n    });\n  };\n  var global$a = global$p;\n  var classof$6 = classofRaw$2;\n  var engineIsNode = classof$6(global$a.process) === 'process';\n  var $$C = _export;\n  var $reduce = arrayReduce.left;\n  var arrayMethodIsStrict$3 = arrayMethodIsStrict$4;\n  var CHROME_VERSION = engineV8Version;\n  var IS_NODE$4 = engineIsNode;\n\n  // Chrome 80-82 has a critical bug\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\n  var CHROME_BUG = !IS_NODE$4 && CHROME_VERSION > 79 && CHROME_VERSION < 83;\n  var FORCED$4 = CHROME_BUG || !arrayMethodIsStrict$3('reduce');\n\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  $$C({\n    target: 'Array',\n    proto: true,\n    forced: FORCED$4\n  }, {\n    reduce: function reduce(callbackfn /* , initialValue */) {\n      var length = arguments.length;\n      return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n    }\n  });\n  var getBuiltInPrototypeMethod$e = getBuiltInPrototypeMethod$g;\n  var reduce$3 = getBuiltInPrototypeMethod$e('Array', 'reduce');\n  var isPrototypeOf$h = objectIsPrototypeOf;\n  var method$e = reduce$3;\n  var ArrayPrototype$f = Array.prototype;\n  var reduce$2 = function (it) {\n    var own = it.reduce;\n    return it === ArrayPrototype$f || isPrototypeOf$h(ArrayPrototype$f, it) && own === ArrayPrototype$f.reduce ? method$e : own;\n  };\n  var parent$X = reduce$2;\n  var reduce$1 = parent$X;\n  var reduce = reduce$1;\n  var _reduceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(reduce);\n  var $$B = _export;\n  var $filter = arrayIteration.filter;\n  var arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$5;\n  var HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport$3('filter');\n\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  // with adding support of @@species\n  $$B({\n    target: 'Array',\n    proto: true,\n    forced: !HAS_SPECIES_SUPPORT$3\n  }, {\n    filter: function filter(callbackfn /* , thisArg */) {\n      return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    }\n  });\n  var getBuiltInPrototypeMethod$d = getBuiltInPrototypeMethod$g;\n  var filter$3 = getBuiltInPrototypeMethod$d('Array', 'filter');\n  var isPrototypeOf$g = objectIsPrototypeOf;\n  var method$d = filter$3;\n  var ArrayPrototype$e = Array.prototype;\n  var filter$2 = function (it) {\n    var own = it.filter;\n    return it === ArrayPrototype$e || isPrototypeOf$g(ArrayPrototype$e, it) && own === ArrayPrototype$e.filter ? method$d : own;\n  };\n  var parent$W = filter$2;\n  var filter$1 = parent$W;\n  var filter = filter$1;\n  var _filterInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(filter);\n  var $$A = _export;\n  var $map = arrayIteration.map;\n  var arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$5;\n  var HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$2('map');\n\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  // with adding support of @@species\n  $$A({\n    target: 'Array',\n    proto: true,\n    forced: !HAS_SPECIES_SUPPORT$2\n  }, {\n    map: function map(callbackfn /* , thisArg */) {\n      return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    }\n  });\n  var getBuiltInPrototypeMethod$c = getBuiltInPrototypeMethod$g;\n  var map$6 = getBuiltInPrototypeMethod$c('Array', 'map');\n  var isPrototypeOf$f = objectIsPrototypeOf;\n  var method$c = map$6;\n  var ArrayPrototype$d = Array.prototype;\n  var map$5 = function (it) {\n    var own = it.map;\n    return it === ArrayPrototype$d || isPrototypeOf$f(ArrayPrototype$d, it) && own === ArrayPrototype$d.map ? method$c : own;\n  };\n  var parent$V = map$5;\n  var map$4 = parent$V;\n  var map$3 = map$4;\n  var _mapInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(map$3);\n  var isArray$a = isArray$e;\n  var lengthOfArrayLike$7 = lengthOfArrayLike$d;\n  var doesNotExceedSafeInteger$2 = doesNotExceedSafeInteger$4;\n  var bind$a = functionBindContext;\n\n  // `FlattenIntoArray` abstract operation\n  // https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\n  var flattenIntoArray$1 = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n    var targetIndex = start;\n    var sourceIndex = 0;\n    var mapFn = mapper ? bind$a(mapper, thisArg) : false;\n    var element, elementLen;\n    while (sourceIndex < sourceLen) {\n      if (sourceIndex in source) {\n        element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n        if (depth > 0 && isArray$a(element)) {\n          elementLen = lengthOfArrayLike$7(element);\n          targetIndex = flattenIntoArray$1(target, original, element, elementLen, targetIndex, depth - 1) - 1;\n        } else {\n          doesNotExceedSafeInteger$2(targetIndex + 1);\n          target[targetIndex] = element;\n        }\n        targetIndex++;\n      }\n      sourceIndex++;\n    }\n    return targetIndex;\n  };\n  var flattenIntoArray_1 = flattenIntoArray$1;\n  var $$z = _export;\n  var flattenIntoArray = flattenIntoArray_1;\n  var aCallable$8 = aCallable$e;\n  var toObject$7 = toObject$e;\n  var lengthOfArrayLike$6 = lengthOfArrayLike$d;\n  var arraySpeciesCreate$1 = arraySpeciesCreate$4;\n\n  // `Array.prototype.flatMap` method\n  // https://tc39.es/ecma262/#sec-array.prototype.flatmap\n  $$z({\n    target: 'Array',\n    proto: true\n  }, {\n    flatMap: function flatMap(callbackfn /* , thisArg */) {\n      var O = toObject$7(this);\n      var sourceLen = lengthOfArrayLike$6(O);\n      var A;\n      aCallable$8(callbackfn);\n      A = arraySpeciesCreate$1(O, 0);\n      A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n      return A;\n    }\n  });\n  var getBuiltInPrototypeMethod$b = getBuiltInPrototypeMethod$g;\n  var flatMap$3 = getBuiltInPrototypeMethod$b('Array', 'flatMap');\n  var isPrototypeOf$e = objectIsPrototypeOf;\n  var method$b = flatMap$3;\n  var ArrayPrototype$c = Array.prototype;\n  var flatMap$2 = function (it) {\n    var own = it.flatMap;\n    return it === ArrayPrototype$c || isPrototypeOf$e(ArrayPrototype$c, it) && own === ArrayPrototype$c.flatMap ? method$b : own;\n  };\n  var parent$U = flatMap$2;\n  var flatMap$1 = parent$U;\n  var flatMap = flatMap$1;\n  var _flatMapInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(flatMap);\n\n  /**\r\n   * Create new data pipe.\r\n   * @param from - The source data set or data view.\r\n   * @remarks\r\n   * Example usage:\r\n   * ```typescript\r\n   * interface AppItem {\r\n   *   whoami: string;\r\n   *   appData: unknown;\r\n   *   visData: VisItem;\r\n   * }\r\n   * interface VisItem {\r\n   *   id: number;\r\n   *   label: string;\r\n   *   color: string;\r\n   *   x: number;\r\n   *   y: number;\r\n   * }\r\n   *\r\n   * const ds1 = new DataSet<AppItem, \"whoami\">([], { fieldId: \"whoami\" });\r\n   * const ds2 = new DataSet<VisItem, \"id\">();\r\n   *\r\n   * const pipe = createNewDataPipeFrom(ds1)\r\n   *   .filter((item): boolean => item.enabled === true)\r\n   *   .map<VisItem, \"id\">((item): VisItem => item.visData)\r\n   *   .to(ds2);\r\n   *\r\n   * pipe.start();\r\n   * ```\r\n   * @returns A factory whose methods can be used to configure the pipe.\r\n   */\n  function createNewDataPipeFrom(from) {\n    return new DataPipeUnderConstruction(from);\n  }\n  /**\r\n   * Internal implementation of the pipe. This should be accessible only through\r\n   * `createNewDataPipeFrom` from the outside.\r\n   * @typeParam SI - Source item type.\r\n   * @typeParam SP - Source item type's id property name.\r\n   * @typeParam TI - Target item type.\r\n   * @typeParam TP - Target item type's id property name.\r\n   */\n  var SimpleDataPipe = /*#__PURE__*/function () {\n    /**\r\n     * Create a new data pipe.\r\n     * @param _source - The data set or data view that will be observed.\r\n     * @param _transformers - An array of transforming functions to be used to\r\n     * filter or transform the items in the pipe.\r\n     * @param _target - The data set or data view that will receive the items.\r\n     */\n    function SimpleDataPipe(_source, _transformers, _target) {\n      var _context, _context2, _context3;\n      _classCallCheck(this, SimpleDataPipe);\n      /**\r\n       * Bound listeners for use with `DataInterface['on' | 'off']`.\r\n       */\n      _defineProperty(this, \"_listeners\", {\n        add: _bindInstanceProperty$1(_context = this._add).call(_context, this),\n        remove: _bindInstanceProperty$1(_context2 = this._remove).call(_context2, this),\n        update: _bindInstanceProperty$1(_context3 = this._update).call(_context3, this)\n      });\n      this._source = _source;\n      this._transformers = _transformers;\n      this._target = _target;\n    }\n    /** @inheritDoc */\n    _createClass(SimpleDataPipe, [{\n      key: \"all\",\n      value: function all() {\n        this._target.update(this._transformItems(this._source.get()));\n        return this;\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"start\",\n      value: function start() {\n        this._source.on(\"add\", this._listeners.add);\n        this._source.on(\"remove\", this._listeners.remove);\n        this._source.on(\"update\", this._listeners.update);\n        return this;\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"stop\",\n      value: function stop() {\n        this._source.off(\"add\", this._listeners.add);\n        this._source.off(\"remove\", this._listeners.remove);\n        this._source.off(\"update\", this._listeners.update);\n        return this;\n      }\n      /**\r\n       * Apply the transformers to the items.\r\n       * @param items - The items to be transformed.\r\n       * @returns The transformed items.\r\n       */\n    }, {\n      key: \"_transformItems\",\n      value: function _transformItems(items) {\n        var _context4;\n        return _reduceInstanceProperty(_context4 = this._transformers).call(_context4, function (items, transform) {\n          return transform(items);\n        }, items);\n      }\n      /**\r\n       * Handle an add event.\r\n       * @param _name - Ignored.\r\n       * @param payload - The payload containing the ids of the added items.\r\n       */\n    }, {\n      key: \"_add\",\n      value: function _add(_name, payload) {\n        if (payload == null) {\n          return;\n        }\n        this._target.add(this._transformItems(this._source.get(payload.items)));\n      }\n      /**\r\n       * Handle an update event.\r\n       * @param _name - Ignored.\r\n       * @param payload - The payload containing the ids of the updated items.\r\n       */\n    }, {\n      key: \"_update\",\n      value: function _update(_name, payload) {\n        if (payload == null) {\n          return;\n        }\n        this._target.update(this._transformItems(this._source.get(payload.items)));\n      }\n      /**\r\n       * Handle a remove event.\r\n       * @param _name - Ignored.\r\n       * @param payload - The payload containing the data of the removed items.\r\n       */\n    }, {\n      key: \"_remove\",\n      value: function _remove(_name, payload) {\n        if (payload == null) {\n          return;\n        }\n        this._target.remove(this._transformItems(payload.oldData));\n      }\n    }]);\n    return SimpleDataPipe;\n  }();\n  /**\r\n   * Internal implementation of the pipe factory. This should be accessible\r\n   * only through `createNewDataPipeFrom` from the outside.\r\n   * @typeParam TI - Target item type.\r\n   * @typeParam TP - Target item type's id property name.\r\n   */\n  var DataPipeUnderConstruction = /*#__PURE__*/function () {\n    /**\r\n     * Create a new data pipe factory. This is an internal constructor that\r\n     * should never be called from outside of this file.\r\n     * @param _source - The source data set or data view for this pipe.\r\n     */\n    function DataPipeUnderConstruction(_source) {\n      _classCallCheck(this, DataPipeUnderConstruction);\n      /**\r\n       * Array transformers used to transform items within the pipe. This is typed\r\n       * as any for the sake of simplicity.\r\n       */\n      _defineProperty(this, \"_transformers\", []);\n      this._source = _source;\n    }\n    /**\r\n     * Filter the items.\r\n     * @param callback - A filtering function that returns true if given item\r\n     * should be piped and false if not.\r\n     * @returns This factory for further configuration.\r\n     */\n    _createClass(DataPipeUnderConstruction, [{\n      key: \"filter\",\n      value: function filter(callback) {\n        this._transformers.push(function (input) {\n          return _filterInstanceProperty(input).call(input, callback);\n        });\n        return this;\n      }\n      /**\r\n       * Map each source item to a new type.\r\n       * @param callback - A mapping function that takes a source item and returns\r\n       * corresponding mapped item.\r\n       * @typeParam TI - Target item type.\r\n       * @typeParam TP - Target item type's id property name.\r\n       * @returns This factory for further configuration.\r\n       */\n    }, {\n      key: \"map\",\n      value: function map(callback) {\n        this._transformers.push(function (input) {\n          return _mapInstanceProperty(input).call(input, callback);\n        });\n        return this;\n      }\n      /**\r\n       * Map each source item to zero or more items of a new type.\r\n       * @param callback - A mapping function that takes a source item and returns\r\n       * an array of corresponding mapped items.\r\n       * @typeParam TI - Target item type.\r\n       * @typeParam TP - Target item type's id property name.\r\n       * @returns This factory for further configuration.\r\n       */\n    }, {\n      key: \"flatMap\",\n      value: function flatMap(callback) {\n        this._transformers.push(function (input) {\n          return _flatMapInstanceProperty(input).call(input, callback);\n        });\n        return this;\n      }\n      /**\r\n       * Connect this pipe to given data set.\r\n       * @param target - The data set that will receive the items from this pipe.\r\n       * @returns The pipe connected between given data sets and performing\r\n       * configured transformation on the processed items.\r\n       */\n    }, {\n      key: \"to\",\n      value: function to(target) {\n        return new SimpleDataPipe(this._source, this._transformers, target);\n      }\n    }]);\n    return DataPipeUnderConstruction;\n  }();\n  var call$a = functionCall;\n  var anObject$7 = anObject$d;\n  var getMethod$1 = getMethod$3;\n  var iteratorClose$2 = function (iterator, kind, value) {\n    var innerResult, innerError;\n    anObject$7(iterator);\n    try {\n      innerResult = getMethod$1(iterator, 'return');\n      if (!innerResult) {\n        if (kind === 'throw') throw value;\n        return value;\n      }\n      innerResult = call$a(innerResult, iterator);\n    } catch (error) {\n      innerError = true;\n      innerResult = error;\n    }\n    if (kind === 'throw') throw value;\n    if (innerError) throw innerResult;\n    anObject$7(innerResult);\n    return value;\n  };\n  var anObject$6 = anObject$d;\n  var iteratorClose$1 = iteratorClose$2;\n\n  // call something on iterator step with safe closing on error\n  var callWithSafeIterationClosing$1 = function (iterator, fn, value, ENTRIES) {\n    try {\n      return ENTRIES ? fn(anObject$6(value)[0], value[1]) : fn(value);\n    } catch (error) {\n      iteratorClose$1(iterator, 'throw', error);\n    }\n  };\n  var wellKnownSymbol$7 = wellKnownSymbol$n;\n  var Iterators$1 = iterators;\n  var ITERATOR$2 = wellKnownSymbol$7('iterator');\n  var ArrayPrototype$b = Array.prototype;\n\n  // check on default Array iterator\n  var isArrayIteratorMethod$2 = function (it) {\n    return it !== undefined && (Iterators$1.Array === it || ArrayPrototype$b[ITERATOR$2] === it);\n  };\n  var classof$5 = classof$d;\n  var getMethod = getMethod$3;\n  var isNullOrUndefined$3 = isNullOrUndefined$6;\n  var Iterators = iterators;\n  var wellKnownSymbol$6 = wellKnownSymbol$n;\n  var ITERATOR$1 = wellKnownSymbol$6('iterator');\n  var getIteratorMethod$9 = function (it) {\n    if (!isNullOrUndefined$3(it)) return getMethod(it, ITERATOR$1) || getMethod(it, '@@iterator') || Iterators[classof$5(it)];\n  };\n  var call$9 = functionCall;\n  var aCallable$7 = aCallable$e;\n  var anObject$5 = anObject$d;\n  var tryToString$3 = tryToString$6;\n  var getIteratorMethod$8 = getIteratorMethod$9;\n  var $TypeError$7 = TypeError;\n  var getIterator$8 = function (argument, usingIterator) {\n    var iteratorMethod = arguments.length < 2 ? getIteratorMethod$8(argument) : usingIterator;\n    if (aCallable$7(iteratorMethod)) return anObject$5(call$9(iteratorMethod, argument));\n    throw new $TypeError$7(tryToString$3(argument) + ' is not iterable');\n  };\n  var bind$9 = functionBindContext;\n  var call$8 = functionCall;\n  var toObject$6 = toObject$e;\n  var callWithSafeIterationClosing = callWithSafeIterationClosing$1;\n  var isArrayIteratorMethod$1 = isArrayIteratorMethod$2;\n  var isConstructor$2 = isConstructor$4;\n  var lengthOfArrayLike$5 = lengthOfArrayLike$d;\n  var createProperty$3 = createProperty$6;\n  var getIterator$7 = getIterator$8;\n  var getIteratorMethod$7 = getIteratorMethod$9;\n  var $Array$1 = Array;\n\n  // `Array.from` method implementation\n  // https://tc39.es/ecma262/#sec-array.from\n  var arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n    var O = toObject$6(arrayLike);\n    var IS_CONSTRUCTOR = isConstructor$2(this);\n    var argumentsLength = arguments.length;\n    var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n    var mapping = mapfn !== undefined;\n    if (mapping) mapfn = bind$9(mapfn, argumentsLength > 2 ? arguments[2] : undefined);\n    var iteratorMethod = getIteratorMethod$7(O);\n    var index = 0;\n    var length, result, step, iterator, next, value;\n    // if the target is not iterable or it's an array with the default iterator - use a simple case\n    if (iteratorMethod && !(this === $Array$1 && isArrayIteratorMethod$1(iteratorMethod))) {\n      iterator = getIterator$7(O, iteratorMethod);\n      next = iterator.next;\n      result = IS_CONSTRUCTOR ? new this() : [];\n      for (; !(step = call$8(next, iterator)).done; index++) {\n        value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n        createProperty$3(result, index, value);\n      }\n    } else {\n      length = lengthOfArrayLike$5(O);\n      result = IS_CONSTRUCTOR ? new this(length) : $Array$1(length);\n      for (; length > index; index++) {\n        value = mapping ? mapfn(O[index], index) : O[index];\n        createProperty$3(result, index, value);\n      }\n    }\n    result.length = index;\n    return result;\n  };\n  var wellKnownSymbol$5 = wellKnownSymbol$n;\n  var ITERATOR = wellKnownSymbol$5('iterator');\n  var SAFE_CLOSING = false;\n  try {\n    var called = 0;\n    var iteratorWithReturn = {\n      next: function () {\n        return {\n          done: !!called++\n        };\n      },\n      'return': function () {\n        SAFE_CLOSING = true;\n      }\n    };\n    iteratorWithReturn[ITERATOR] = function () {\n      return this;\n    };\n    // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n    Array.from(iteratorWithReturn, function () {\n      throw 2;\n    });\n  } catch (error) {/* empty */}\n  var checkCorrectnessOfIteration$2 = function (exec, SKIP_CLOSING) {\n    try {\n      if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n    } catch (error) {\n      return false;\n    } // workaround of old WebKit + `eval` bug\n    var ITERATION_SUPPORT = false;\n    try {\n      var object = {};\n      object[ITERATOR] = function () {\n        return {\n          next: function () {\n            return {\n              done: ITERATION_SUPPORT = true\n            };\n          }\n        };\n      };\n      exec(object);\n    } catch (error) {/* empty */}\n    return ITERATION_SUPPORT;\n  };\n  var $$y = _export;\n  var from$6 = arrayFrom;\n  var checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$2;\n  var INCORRECT_ITERATION = !checkCorrectnessOfIteration$1(function (iterable) {\n    // eslint-disable-next-line es/no-array-from -- required for testing\n    Array.from(iterable);\n  });\n\n  // `Array.from` method\n  // https://tc39.es/ecma262/#sec-array.from\n  $$y({\n    target: 'Array',\n    stat: true,\n    forced: INCORRECT_ITERATION\n  }, {\n    from: from$6\n  });\n  var path$h = path$o;\n  var from$5 = path$h.Array.from;\n  var parent$T = from$5;\n  var from$4 = parent$T;\n  var from$3 = from$4;\n  var _Array$from$1 = /*@__PURE__*/getDefaultExportFromCjs(from$3);\n  var getIteratorMethod$6 = getIteratorMethod$9;\n  var getIteratorMethod_1 = getIteratorMethod$6;\n  var parent$S = getIteratorMethod_1;\n  var getIteratorMethod$5 = parent$S;\n  var parent$R = getIteratorMethod$5;\n  var getIteratorMethod$4 = parent$R;\n  var parent$Q = getIteratorMethod$4;\n  var getIteratorMethod$3 = parent$Q;\n  var getIteratorMethod$2 = getIteratorMethod$3;\n  var _getIteratorMethod$1 = /*@__PURE__*/getDefaultExportFromCjs(getIteratorMethod$2);\n  var getIteratorMethod$1 = getIteratorMethod$2;\n  var _getIteratorMethod = /*@__PURE__*/getDefaultExportFromCjs(getIteratorMethod$1);\n  var $$x = _export;\n  var isArray$9 = isArray$e;\n\n  // `Array.isArray` method\n  // https://tc39.es/ecma262/#sec-array.isarray\n  $$x({\n    target: 'Array',\n    stat: true\n  }, {\n    isArray: isArray$9\n  });\n  var path$g = path$o;\n  var isArray$8 = path$g.Array.isArray;\n  var parent$P = isArray$8;\n  var isArray$7 = parent$P;\n  var parent$O = isArray$7;\n  var isArray$6 = parent$O;\n  var parent$N = isArray$6;\n  var isArray$5 = parent$N;\n  var isArray$4 = isArray$5;\n  var _Array$isArray$1 = /*@__PURE__*/getDefaultExportFromCjs(isArray$4);\n  function _arrayWithHoles(arr) {\n    if (_Array$isArray$1(arr)) return arr;\n  }\n  var DESCRIPTORS$8 = descriptors;\n  var isArray$3 = isArray$e;\n  var $TypeError$6 = TypeError;\n  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n  var getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;\n\n  // Safari < 13 does not throw an error in this case\n  var SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS$8 && !function () {\n    // makes no sense without proper strict mode support\n    if (this !== undefined) return true;\n    try {\n      // eslint-disable-next-line es/no-object-defineproperty -- safe\n      Object.defineProperty([], 'length', {\n        writable: false\n      }).length = 1;\n    } catch (error) {\n      return error instanceof TypeError;\n    }\n  }();\n  var arraySetLength = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n    if (isArray$3(O) && !getOwnPropertyDescriptor$5(O, 'length').writable) {\n      throw new $TypeError$6('Cannot set read only .length');\n    }\n    return O.length = length;\n  } : function (O, length) {\n    return O.length = length;\n  };\n  var $$w = _export;\n  var toObject$5 = toObject$e;\n  var lengthOfArrayLike$4 = lengthOfArrayLike$d;\n  var setArrayLength$1 = arraySetLength;\n  var doesNotExceedSafeInteger$1 = doesNotExceedSafeInteger$4;\n  var fails$d = fails$u;\n  var INCORRECT_TO_LENGTH = fails$d(function () {\n    return [].push.call({\n      length: 0x100000000\n    }, 1) !== 4294967297;\n  });\n\n  // V8 and Safari <= 15.4, FF < 23 throws InternalError\n  // https://bugs.chromium.org/p/v8/issues/detail?id=12681\n  var properErrorOnNonWritableLength = function () {\n    try {\n      // eslint-disable-next-line es/no-object-defineproperty -- safe\n      Object.defineProperty([], 'length', {\n        writable: false\n      }).push();\n    } catch (error) {\n      return error instanceof TypeError;\n    }\n  };\n  var FORCED$3 = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n  // `Array.prototype.push` method\n  // https://tc39.es/ecma262/#sec-array.prototype.push\n  $$w({\n    target: 'Array',\n    proto: true,\n    arity: 1,\n    forced: FORCED$3\n  }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    push: function push(item) {\n      var O = toObject$5(this);\n      var len = lengthOfArrayLike$4(O);\n      var argCount = arguments.length;\n      doesNotExceedSafeInteger$1(len + argCount);\n      for (var i = 0; i < argCount; i++) {\n        O[len] = arguments[i];\n        len++;\n      }\n      setArrayLength$1(O, len);\n      return len;\n    }\n  });\n  var getBuiltInPrototypeMethod$a = getBuiltInPrototypeMethod$g;\n  var push$8 = getBuiltInPrototypeMethod$a('Array', 'push');\n  var isPrototypeOf$d = objectIsPrototypeOf;\n  var method$a = push$8;\n  var ArrayPrototype$a = Array.prototype;\n  var push$7 = function (it) {\n    var own = it.push;\n    return it === ArrayPrototype$a || isPrototypeOf$d(ArrayPrototype$a, it) && own === ArrayPrototype$a.push ? method$a : own;\n  };\n  var parent$M = push$7;\n  var push$6 = parent$M;\n  var parent$L = push$6;\n  var push$5 = parent$L;\n  var parent$K = push$5;\n  var push$4 = parent$K;\n  var push$3 = push$4;\n  var _pushInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(push$3);\n  function _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof _Symbol$1 && _getIteratorMethod$1(r) || r[\"@@iterator\"];\n    if (null != t) {\n      var e,\n        n,\n        i,\n        u,\n        a = [],\n        f = !0,\n        o = !1;\n      try {\n        if (i = (t = t.call(r)).next, 0 === l) {\n          if (Object(t) !== t) return;\n          f = !1;\n        } else for (; !(f = (e = i.call(t)).done) && (_pushInstanceProperty(a).call(a, e.value), a.length !== l); f = !0);\n      } catch (r) {\n        o = !0, n = r;\n      } finally {\n        try {\n          if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n        } finally {\n          if (o) throw n;\n        }\n      }\n      return a;\n    }\n  }\n  var $$v = _export;\n  var isArray$2 = isArray$e;\n  var isConstructor$1 = isConstructor$4;\n  var isObject$7 = isObject$h;\n  var toAbsoluteIndex$1 = toAbsoluteIndex$4;\n  var lengthOfArrayLike$3 = lengthOfArrayLike$d;\n  var toIndexedObject$2 = toIndexedObject$a;\n  var createProperty$2 = createProperty$6;\n  var wellKnownSymbol$4 = wellKnownSymbol$n;\n  var arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$5;\n  var nativeSlice = arraySlice$5;\n  var HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$1('slice');\n  var SPECIES$3 = wellKnownSymbol$4('species');\n  var $Array = Array;\n  var max$1 = Math.max;\n\n  // `Array.prototype.slice` method\n  // https://tc39.es/ecma262/#sec-array.prototype.slice\n  // fallback for not array-like ES3 strings and DOM objects\n  $$v({\n    target: 'Array',\n    proto: true,\n    forced: !HAS_SPECIES_SUPPORT$1\n  }, {\n    slice: function slice(start, end) {\n      var O = toIndexedObject$2(this);\n      var length = lengthOfArrayLike$3(O);\n      var k = toAbsoluteIndex$1(start, length);\n      var fin = toAbsoluteIndex$1(end === undefined ? length : end, length);\n      // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n      var Constructor, result, n;\n      if (isArray$2(O)) {\n        Constructor = O.constructor;\n        // cross-realm fallback\n        if (isConstructor$1(Constructor) && (Constructor === $Array || isArray$2(Constructor.prototype))) {\n          Constructor = undefined;\n        } else if (isObject$7(Constructor)) {\n          Constructor = Constructor[SPECIES$3];\n          if (Constructor === null) Constructor = undefined;\n        }\n        if (Constructor === $Array || Constructor === undefined) {\n          return nativeSlice(O, k, fin);\n        }\n      }\n      result = new (Constructor === undefined ? $Array : Constructor)(max$1(fin - k, 0));\n      for (n = 0; k < fin; k++, n++) if (k in O) createProperty$2(result, n, O[k]);\n      result.length = n;\n      return result;\n    }\n  });\n  var getBuiltInPrototypeMethod$9 = getBuiltInPrototypeMethod$g;\n  var slice$6 = getBuiltInPrototypeMethod$9('Array', 'slice');\n  var isPrototypeOf$c = objectIsPrototypeOf;\n  var method$9 = slice$6;\n  var ArrayPrototype$9 = Array.prototype;\n  var slice$5 = function (it) {\n    var own = it.slice;\n    return it === ArrayPrototype$9 || isPrototypeOf$c(ArrayPrototype$9, it) && own === ArrayPrototype$9.slice ? method$9 : own;\n  };\n  var parent$J = slice$5;\n  var slice$4 = parent$J;\n  var parent$I = slice$4;\n  var slice$3 = parent$I;\n  var parent$H = slice$3;\n  var slice$2 = parent$H;\n  var slice$1 = slice$2;\n  var _sliceInstanceProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(slice$1);\n  var parent$G = from$4;\n  var from$2 = parent$G;\n  var parent$F = from$2;\n  var from$1 = parent$F;\n  var from = from$1;\n  var _Array$from = /*@__PURE__*/getDefaultExportFromCjs(from);\n  function _arrayLikeToArray$4(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _unsupportedIterableToArray$4(o, minLen) {\n    var _context;\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray$4(o, minLen);\n    var n = _sliceInstanceProperty$1(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen);\n  }\n  function _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _slicedToArray(arr, i) {\n    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$4(arr, i) || _nonIterableRest();\n  }\n  function _arrayWithoutHoles(arr) {\n    if (_Array$isArray$1(arr)) return _arrayLikeToArray$4(arr);\n  }\n  function _iterableToArray(iter) {\n    if (typeof _Symbol$1 !== \"undefined\" && _getIteratorMethod$1(iter) != null || iter[\"@@iterator\"] != null) return _Array$from(iter);\n  }\n  function _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  function _toConsumableArray(arr) {\n    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$4(arr) || _nonIterableSpread();\n  }\n  var symbol = symbol$4;\n  var _Symbol = /*@__PURE__*/getDefaultExportFromCjs(symbol);\n  var getBuiltInPrototypeMethod$8 = getBuiltInPrototypeMethod$g;\n  var concat$5 = getBuiltInPrototypeMethod$8('Array', 'concat');\n  var isPrototypeOf$b = objectIsPrototypeOf;\n  var method$8 = concat$5;\n  var ArrayPrototype$8 = Array.prototype;\n  var concat$4 = function (it) {\n    var own = it.concat;\n    return it === ArrayPrototype$8 || isPrototypeOf$b(ArrayPrototype$8, it) && own === ArrayPrototype$8.concat ? method$8 : own;\n  };\n  var parent$E = concat$4;\n  var concat$3 = parent$E;\n  var concat$2 = concat$3;\n  var _concatInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(concat$2);\n  var slice = slice$4;\n  var _sliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(slice);\n  var getBuiltIn$5 = getBuiltIn$f;\n  var uncurryThis$5 = functionUncurryThis;\n  var getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;\n  var getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;\n  var anObject$4 = anObject$d;\n  var concat$1 = uncurryThis$5([].concat);\n\n  // all object keys, includes non-enumerable and symbols\n  var ownKeys$7 = getBuiltIn$5('Reflect', 'ownKeys') || function ownKeys(it) {\n    var keys = getOwnPropertyNamesModule$1.f(anObject$4(it));\n    var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;\n    return getOwnPropertySymbols ? concat$1(keys, getOwnPropertySymbols(it)) : keys;\n  };\n  var $$u = _export;\n  var ownKeys$6 = ownKeys$7;\n\n  // `Reflect.ownKeys` method\n  // https://tc39.es/ecma262/#sec-reflect.ownkeys\n  $$u({\n    target: 'Reflect',\n    stat: true\n  }, {\n    ownKeys: ownKeys$6\n  });\n  var path$f = path$o;\n  var ownKeys$5 = path$f.Reflect.ownKeys;\n  var parent$D = ownKeys$5;\n  var ownKeys$4 = parent$D;\n  var ownKeys$3 = ownKeys$4;\n  var _Reflect$ownKeys = /*@__PURE__*/getDefaultExportFromCjs(ownKeys$3);\n  var isArray$1 = isArray$7;\n  var _Array$isArray = /*@__PURE__*/getDefaultExportFromCjs(isArray$1);\n  var $$t = _export;\n  var toObject$4 = toObject$e;\n  var nativeKeys = objectKeys$3;\n  var fails$c = fails$u;\n  var FAILS_ON_PRIMITIVES$2 = fails$c(function () {\n    nativeKeys(1);\n  });\n\n  // `Object.keys` method\n  // https://tc39.es/ecma262/#sec-object.keys\n  $$t({\n    target: 'Object',\n    stat: true,\n    forced: FAILS_ON_PRIMITIVES$2\n  }, {\n    keys: function keys(it) {\n      return nativeKeys(toObject$4(it));\n    }\n  });\n  var path$e = path$o;\n  var keys$6 = path$e.Object.keys;\n  var parent$C = keys$6;\n  var keys$5 = parent$C;\n  var keys$4 = keys$5;\n  var _Object$keys = /*@__PURE__*/getDefaultExportFromCjs(keys$4);\n  var $forEach = arrayIteration.forEach;\n  var arrayMethodIsStrict$2 = arrayMethodIsStrict$4;\n  var STRICT_METHOD$2 = arrayMethodIsStrict$2('forEach');\n\n  // `Array.prototype.forEach` method implementation\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  var arrayForEach = !STRICT_METHOD$2 ? function forEach(callbackfn /* , thisArg */) {\n    return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    // eslint-disable-next-line es/no-array-prototype-foreach -- safe\n  } : [].forEach;\n  var $$s = _export;\n  var forEach$8 = arrayForEach;\n\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  // eslint-disable-next-line es/no-array-prototype-foreach -- safe\n  $$s({\n    target: 'Array',\n    proto: true,\n    forced: [].forEach !== forEach$8\n  }, {\n    forEach: forEach$8\n  });\n  var getBuiltInPrototypeMethod$7 = getBuiltInPrototypeMethod$g;\n  var forEach$7 = getBuiltInPrototypeMethod$7('Array', 'forEach');\n  var parent$B = forEach$7;\n  var forEach$6 = parent$B;\n  var classof$4 = classof$d;\n  var hasOwn$6 = hasOwnProperty_1;\n  var isPrototypeOf$a = objectIsPrototypeOf;\n  var method$7 = forEach$6;\n  var ArrayPrototype$7 = Array.prototype;\n  var DOMIterables$3 = {\n    DOMTokenList: true,\n    NodeList: true\n  };\n  var forEach$5 = function (it) {\n    var own = it.forEach;\n    return it === ArrayPrototype$7 || isPrototypeOf$a(ArrayPrototype$7, it) && own === ArrayPrototype$7.forEach || hasOwn$6(DOMIterables$3, classof$4(it)) ? method$7 : own;\n  };\n  var forEach$4 = forEach$5;\n  var _forEachInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(forEach$4);\n  var $$r = _export;\n  var uncurryThis$4 = functionUncurryThis;\n  var isArray = isArray$e;\n  var nativeReverse = uncurryThis$4([].reverse);\n  var test$1 = [1, 2];\n\n  // `Array.prototype.reverse` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reverse\n  // fix for Safari 12.0 bug\n  // https://bugs.webkit.org/show_bug.cgi?id=188794\n  $$r({\n    target: 'Array',\n    proto: true,\n    forced: String(test$1) === String(test$1.reverse())\n  }, {\n    reverse: function reverse() {\n      // eslint-disable-next-line no-self-assign -- dirty hack\n      if (isArray(this)) this.length = this.length;\n      return nativeReverse(this);\n    }\n  });\n  var getBuiltInPrototypeMethod$6 = getBuiltInPrototypeMethod$g;\n  var reverse$6 = getBuiltInPrototypeMethod$6('Array', 'reverse');\n  var isPrototypeOf$9 = objectIsPrototypeOf;\n  var method$6 = reverse$6;\n  var ArrayPrototype$6 = Array.prototype;\n  var reverse$5 = function (it) {\n    var own = it.reverse;\n    return it === ArrayPrototype$6 || isPrototypeOf$9(ArrayPrototype$6, it) && own === ArrayPrototype$6.reverse ? method$6 : own;\n  };\n  var parent$A = reverse$5;\n  var reverse$4 = parent$A;\n  var reverse$3 = reverse$4;\n  var _reverseInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(reverse$3);\n  var tryToString$2 = tryToString$6;\n  var $TypeError$5 = TypeError;\n  var deletePropertyOrThrow$2 = function (O, P) {\n    if (!delete O[P]) throw new $TypeError$5('Cannot delete property ' + tryToString$2(P) + ' of ' + tryToString$2(O));\n  };\n  var $$q = _export;\n  var toObject$3 = toObject$e;\n  var toAbsoluteIndex = toAbsoluteIndex$4;\n  var toIntegerOrInfinity = toIntegerOrInfinity$4;\n  var lengthOfArrayLike$2 = lengthOfArrayLike$d;\n  var setArrayLength = arraySetLength;\n  var doesNotExceedSafeInteger = doesNotExceedSafeInteger$4;\n  var arraySpeciesCreate = arraySpeciesCreate$4;\n  var createProperty$1 = createProperty$6;\n  var deletePropertyOrThrow$1 = deletePropertyOrThrow$2;\n  var arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$5;\n  var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');\n  var max = Math.max;\n  var min = Math.min;\n\n  // `Array.prototype.splice` method\n  // https://tc39.es/ecma262/#sec-array.prototype.splice\n  // with adding support of @@species\n  $$q({\n    target: 'Array',\n    proto: true,\n    forced: !HAS_SPECIES_SUPPORT\n  }, {\n    splice: function splice(start, deleteCount /* , ...items */) {\n      var O = toObject$3(this);\n      var len = lengthOfArrayLike$2(O);\n      var actualStart = toAbsoluteIndex(start, len);\n      var argumentsLength = arguments.length;\n      var insertCount, actualDeleteCount, A, k, from, to;\n      if (argumentsLength === 0) {\n        insertCount = actualDeleteCount = 0;\n      } else if (argumentsLength === 1) {\n        insertCount = 0;\n        actualDeleteCount = len - actualStart;\n      } else {\n        insertCount = argumentsLength - 2;\n        actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);\n      }\n      doesNotExceedSafeInteger(len + insertCount - actualDeleteCount);\n      A = arraySpeciesCreate(O, actualDeleteCount);\n      for (k = 0; k < actualDeleteCount; k++) {\n        from = actualStart + k;\n        if (from in O) createProperty$1(A, k, O[from]);\n      }\n      A.length = actualDeleteCount;\n      if (insertCount < actualDeleteCount) {\n        for (k = actualStart; k < len - actualDeleteCount; k++) {\n          from = k + actualDeleteCount;\n          to = k + insertCount;\n          if (from in O) O[to] = O[from];else deletePropertyOrThrow$1(O, to);\n        }\n        for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow$1(O, k - 1);\n      } else if (insertCount > actualDeleteCount) {\n        for (k = len - actualDeleteCount; k > actualStart; k--) {\n          from = k + actualDeleteCount - 1;\n          to = k + insertCount - 1;\n          if (from in O) O[to] = O[from];else deletePropertyOrThrow$1(O, to);\n        }\n      }\n      for (k = 0; k < insertCount; k++) {\n        O[k + actualStart] = arguments[k + 2];\n      }\n      setArrayLength(O, len - actualDeleteCount + insertCount);\n      return A;\n    }\n  });\n  var getBuiltInPrototypeMethod$5 = getBuiltInPrototypeMethod$g;\n  var splice$3 = getBuiltInPrototypeMethod$5('Array', 'splice');\n  var isPrototypeOf$8 = objectIsPrototypeOf;\n  var method$5 = splice$3;\n  var ArrayPrototype$5 = Array.prototype;\n  var splice$2 = function (it) {\n    var own = it.splice;\n    return it === ArrayPrototype$5 || isPrototypeOf$8(ArrayPrototype$5, it) && own === ArrayPrototype$5.splice ? method$5 : own;\n  };\n  var parent$z = splice$2;\n  var splice$1 = parent$z;\n  var splice = splice$1;\n  var _spliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(splice);\n  var DESCRIPTORS$7 = descriptors;\n  var uncurryThis$3 = functionUncurryThis;\n  var call$7 = functionCall;\n  var fails$b = fails$u;\n  var objectKeys = objectKeys$3;\n  var getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;\n  var propertyIsEnumerableModule = objectPropertyIsEnumerable;\n  var toObject$2 = toObject$e;\n  var IndexedObject = indexedObject;\n\n  // eslint-disable-next-line es/no-object-assign -- safe\n  var $assign = Object.assign;\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  var defineProperty$3 = Object.defineProperty;\n  var concat = uncurryThis$3([].concat);\n\n  // `Object.assign` method\n  // https://tc39.es/ecma262/#sec-object.assign\n  var objectAssign = !$assign || fails$b(function () {\n    // should have correct order of operations (Edge bug)\n    if (DESCRIPTORS$7 && $assign({\n      b: 1\n    }, $assign(defineProperty$3({}, 'a', {\n      enumerable: true,\n      get: function () {\n        defineProperty$3(this, 'b', {\n          value: 3,\n          enumerable: false\n        });\n      }\n    }), {\n      b: 2\n    })).b !== 1) return true;\n    // should work with symbols and should have deterministic property order (V8 bug)\n    var A = {};\n    var B = {};\n    // eslint-disable-next-line es/no-symbol -- safe\n    var symbol = Symbol('assign detection');\n    var alphabet = 'abcdefghijklmnopqrst';\n    A[symbol] = 7;\n    alphabet.split('').forEach(function (chr) {\n      B[chr] = chr;\n    });\n    return $assign({}, A)[symbol] !== 7 || objectKeys($assign({}, B)).join('') !== alphabet;\n  }) ? function assign(target, source) {\n    // eslint-disable-line no-unused-vars -- required for `.length`\n    var T = toObject$2(target);\n    var argumentsLength = arguments.length;\n    var index = 1;\n    var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n    var propertyIsEnumerable = propertyIsEnumerableModule.f;\n    while (argumentsLength > index) {\n      var S = IndexedObject(arguments[index++]);\n      var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);\n      var length = keys.length;\n      var j = 0;\n      var key;\n      while (length > j) {\n        key = keys[j++];\n        if (!DESCRIPTORS$7 || call$7(propertyIsEnumerable, S, key)) T[key] = S[key];\n      }\n    }\n    return T;\n  } : $assign;\n  var $$p = _export;\n  var assign$5 = objectAssign;\n\n  // `Object.assign` method\n  // https://tc39.es/ecma262/#sec-object.assign\n  // eslint-disable-next-line es/no-object-assign -- required for testing\n  $$p({\n    target: 'Object',\n    stat: true,\n    arity: 2,\n    forced: Object.assign !== assign$5\n  }, {\n    assign: assign$5\n  });\n  var path$d = path$o;\n  var assign$4 = path$d.Object.assign;\n  var parent$y = assign$4;\n  var assign$3 = parent$y;\n  var assign$2 = assign$3;\n  var _Object$assign = /*@__PURE__*/getDefaultExportFromCjs(assign$2);\n  var $$o = _export;\n  var fails$a = fails$u;\n  var toObject$1 = toObject$e;\n  var nativeGetPrototypeOf = objectGetPrototypeOf;\n  var CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;\n  var FAILS_ON_PRIMITIVES$1 = fails$a(function () {\n    nativeGetPrototypeOf(1);\n  });\n\n  // `Object.getPrototypeOf` method\n  // https://tc39.es/ecma262/#sec-object.getprototypeof\n  $$o({\n    target: 'Object',\n    stat: true,\n    forced: FAILS_ON_PRIMITIVES$1,\n    sham: !CORRECT_PROTOTYPE_GETTER\n  }, {\n    getPrototypeOf: function getPrototypeOf(it) {\n      return nativeGetPrototypeOf(toObject$1(it));\n    }\n  });\n  var path$c = path$o;\n  var getPrototypeOf$5 = path$c.Object.getPrototypeOf;\n  var parent$x = getPrototypeOf$5;\n  var getPrototypeOf$4 = parent$x;\n\n  // TODO: Remove from `core-js@4`\n  var $$n = _export;\n  var DESCRIPTORS$6 = descriptors;\n  var create$9 = objectCreate;\n\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  $$n({\n    target: 'Object',\n    stat: true,\n    sham: !DESCRIPTORS$6\n  }, {\n    create: create$9\n  });\n  var path$b = path$o;\n  var Object$3 = path$b.Object;\n  var create$8 = function create(P, D) {\n    return Object$3.create(P, D);\n  };\n  var parent$w = create$8;\n  var create$7 = parent$w;\n  var create$6 = create$7;\n  var _Object$create$1 = /*@__PURE__*/getDefaultExportFromCjs(create$6);\n  var path$a = path$o;\n  var apply$3 = functionApply;\n\n  // eslint-disable-next-line es/no-json -- safe\n  if (!path$a.JSON) path$a.JSON = {\n    stringify: JSON.stringify\n  };\n\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  var stringify$2 = function stringify(it, replacer, space) {\n    return apply$3(path$a.JSON.stringify, null, arguments);\n  };\n  var parent$v = stringify$2;\n  var stringify$1 = parent$v;\n  var stringify = stringify$1;\n  var _JSON$stringify = /*@__PURE__*/getDefaultExportFromCjs(stringify);\n\n  /* global Bun -- Deno case */\n  var engineIsBun = typeof Bun == 'function' && Bun && typeof Bun.version == 'string';\n  var $TypeError$4 = TypeError;\n  var validateArgumentsLength$2 = function (passed, required) {\n    if (passed < required) throw new $TypeError$4('Not enough arguments');\n    return passed;\n  };\n  var global$9 = global$p;\n  var apply$2 = functionApply;\n  var isCallable$5 = isCallable$m;\n  var ENGINE_IS_BUN = engineIsBun;\n  var USER_AGENT = engineUserAgent;\n  var arraySlice$2 = arraySlice$5;\n  var validateArgumentsLength$1 = validateArgumentsLength$2;\n  var Function$2 = global$9.Function;\n  // dirty IE9- and Bun 0.3.0- checks\n  var WRAP = /MSIE .\\./.test(USER_AGENT) || ENGINE_IS_BUN && function () {\n    var version = global$9.Bun.version.split('.');\n    return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');\n  }();\n\n  // IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n  // https://github.com/oven-sh/bun/issues/1633\n  var schedulersFix$2 = function (scheduler, hasTimeArg) {\n    var firstParamIndex = hasTimeArg ? 2 : 1;\n    return WRAP ? function (handler, timeout /* , ...arguments */) {\n      var boundArgs = validateArgumentsLength$1(arguments.length, 1) > firstParamIndex;\n      var fn = isCallable$5(handler) ? handler : Function$2(handler);\n      var params = boundArgs ? arraySlice$2(arguments, firstParamIndex) : [];\n      var callback = boundArgs ? function () {\n        apply$2(fn, this, params);\n      } : fn;\n      return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);\n    } : scheduler;\n  };\n  var $$m = _export;\n  var global$8 = global$p;\n  var schedulersFix$1 = schedulersFix$2;\n  var setInterval = schedulersFix$1(global$8.setInterval, true);\n\n  // Bun / IE9- setInterval additional parameters fix\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n  $$m({\n    global: true,\n    bind: true,\n    forced: global$8.setInterval !== setInterval\n  }, {\n    setInterval: setInterval\n  });\n  var $$l = _export;\n  var global$7 = global$p;\n  var schedulersFix = schedulersFix$2;\n  var setTimeout$3 = schedulersFix(global$7.setTimeout, true);\n\n  // Bun / IE9- setTimeout additional parameters fix\n  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout\n  $$l({\n    global: true,\n    bind: true,\n    forced: global$7.setTimeout !== setTimeout$3\n  }, {\n    setTimeout: setTimeout$3\n  });\n  var path$9 = path$o;\n  var setTimeout$2 = path$9.setTimeout;\n  var setTimeout$1 = setTimeout$2;\n  var _setTimeout = /*@__PURE__*/getDefaultExportFromCjs(setTimeout$1);\n  var componentEmitter = {\n    exports: {}\n  };\n  (function (module) {\n    function Emitter(object) {\n      if (object) {\n        return mixin(object);\n      }\n      this._callbacks = new Map();\n    }\n    function mixin(object) {\n      Object.assign(object, Emitter.prototype);\n      object._callbacks = new Map();\n      return object;\n    }\n    Emitter.prototype.on = function (event, listener) {\n      const callbacks = this._callbacks.get(event) ?? [];\n      callbacks.push(listener);\n      this._callbacks.set(event, callbacks);\n      return this;\n    };\n    Emitter.prototype.once = function (event, listener) {\n      var _this5 = this;\n      const on = function () {\n        _this5.off(event, on);\n        for (var _len0 = arguments.length, arguments_ = new Array(_len0), _key3 = 0; _key3 < _len0; _key3++) {\n          arguments_[_key3] = arguments[_key3];\n        }\n        listener.apply(_this5, arguments_);\n      };\n      on.fn = listener;\n      this.on(event, on);\n      return this;\n    };\n    Emitter.prototype.off = function (event, listener) {\n      if (event === undefined && listener === undefined) {\n        this._callbacks.clear();\n        return this;\n      }\n      if (listener === undefined) {\n        this._callbacks.delete(event);\n        return this;\n      }\n      const callbacks = this._callbacks.get(event);\n      if (callbacks) {\n        for (const [index, callback] of callbacks.entries()) {\n          if (callback === listener || callback.fn === listener) {\n            callbacks.splice(index, 1);\n            break;\n          }\n        }\n        if (callbacks.length === 0) {\n          this._callbacks.delete(event);\n        } else {\n          this._callbacks.set(event, callbacks);\n        }\n      }\n      return this;\n    };\n    Emitter.prototype.emit = function (event) {\n      const callbacks = this._callbacks.get(event);\n      if (callbacks) {\n        // Create a copy of the callbacks array to avoid issues if it's modified during iteration\n        const callbacksCopy = [...callbacks];\n        for (var _len1 = arguments.length, arguments_ = new Array(_len1 > 1 ? _len1 - 1 : 0), _key4 = 1; _key4 < _len1; _key4++) {\n          arguments_[_key4 - 1] = arguments[_key4];\n        }\n        for (const callback of callbacksCopy) {\n          callback.apply(this, arguments_);\n        }\n      }\n      return this;\n    };\n    Emitter.prototype.listeners = function (event) {\n      return this._callbacks.get(event) ?? [];\n    };\n    Emitter.prototype.listenerCount = function (event) {\n      if (event) {\n        return this.listeners(event).length;\n      }\n      let totalCount = 0;\n      for (const callbacks of this._callbacks.values()) {\n        totalCount += callbacks.length;\n      }\n      return totalCount;\n    };\n    Emitter.prototype.hasListeners = function (event) {\n      return this.listenerCount(event) > 0;\n    };\n\n    // Aliases\n    Emitter.prototype.addEventListener = Emitter.prototype.on;\n    Emitter.prototype.removeListener = Emitter.prototype.off;\n    Emitter.prototype.removeEventListener = Emitter.prototype.off;\n    Emitter.prototype.removeAllListeners = Emitter.prototype.off;\n    {\n      module.exports = Emitter;\n    }\n  })(componentEmitter);\n  var componentEmitterExports = componentEmitter.exports;\n  var Emitter = /*@__PURE__*/getDefaultExportFromCjs(componentEmitterExports);\n\n  /*! Hammer.JS - v2.0.17-rc - 2019-12-16\n   * http://naver.github.io/egjs\n   *\n   * Forked By Naver egjs\n   * Copyright (c) hammerjs\n   * Licensed under the MIT license */\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n      return target;\n    };\n    return _extends.apply(this, arguments);\n  }\n  function _inheritsLoose(subClass, superClass) {\n    subClass.prototype = Object.create(superClass.prototype);\n    subClass.prototype.constructor = subClass;\n    subClass.__proto__ = superClass;\n  }\n  function _assertThisInitialized$1(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n\n  /**\n   * @private\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} target\n   * @param {...Object} objects_to_assign\n   * @returns {Object} target\n   */\n  var assign;\n  if (typeof Object.assign !== 'function') {\n    assign = function assign(target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n      var output = Object(target);\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (source.hasOwnProperty(nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n      return output;\n    };\n  } else {\n    assign = Object.assign;\n  }\n  var assign$1 = assign;\n  var VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\n  var TEST_ELEMENT = typeof document === \"undefined\" ? {\n    style: {}\n  } : document.createElement('div');\n  var TYPE_FUNCTION = 'function';\n  var round = Math.round,\n    abs = Math.abs;\n  var now = Date.now;\n\n  /**\n   * @private\n   * get the prefixed property\n   * @param {Object} obj\n   * @param {String} property\n   * @returns {String|Undefined} prefixed\n   */\n\n  function prefixed(obj, property) {\n    var prefix;\n    var prop;\n    var camelProp = property[0].toUpperCase() + property.slice(1);\n    var i = 0;\n    while (i < VENDOR_PREFIXES.length) {\n      prefix = VENDOR_PREFIXES[i];\n      prop = prefix ? prefix + camelProp : property;\n      if (prop in obj) {\n        return prop;\n      }\n      i++;\n    }\n    return undefined;\n  }\n\n  /* eslint-disable no-new-func, no-nested-ternary */\n  var win;\n  if (typeof window === \"undefined\") {\n    // window is undefined in node.js\n    win = {};\n  } else {\n    win = window;\n  }\n  var PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\n  var NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\n  function getTouchActionProps() {\n    if (!NATIVE_TOUCH_ACTION) {\n      return false;\n    }\n    var touchMap = {};\n    var cssSupports = win.CSS && win.CSS.supports;\n    ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n      // If css.supports is not supported but there is native touch-action assume it supports\n      // all values. This is the case for IE 10 and 11.\n      return touchMap[val] = cssSupports ? win.CSS.supports('touch-action', val) : true;\n    });\n    return touchMap;\n  }\n  var TOUCH_ACTION_COMPUTE = 'compute';\n  var TOUCH_ACTION_AUTO = 'auto';\n  var TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\n  var TOUCH_ACTION_NONE = 'none';\n  var TOUCH_ACTION_PAN_X = 'pan-x';\n  var TOUCH_ACTION_PAN_Y = 'pan-y';\n  var TOUCH_ACTION_MAP = getTouchActionProps();\n  var MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\n  var SUPPORT_TOUCH = 'ontouchstart' in win;\n  var SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;\n  var SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\n  var INPUT_TYPE_TOUCH = 'touch';\n  var INPUT_TYPE_PEN = 'pen';\n  var INPUT_TYPE_MOUSE = 'mouse';\n  var INPUT_TYPE_KINECT = 'kinect';\n  var COMPUTE_INTERVAL = 25;\n  var INPUT_START = 1;\n  var INPUT_MOVE = 2;\n  var INPUT_END = 4;\n  var INPUT_CANCEL = 8;\n  var DIRECTION_NONE = 1;\n  var DIRECTION_LEFT = 2;\n  var DIRECTION_RIGHT = 4;\n  var DIRECTION_UP = 8;\n  var DIRECTION_DOWN = 16;\n  var DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\n  var DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\n  var DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\n  var PROPS_XY = ['x', 'y'];\n  var PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n  /**\n   * @private\n   * walk objects and arrays\n   * @param {Object} obj\n   * @param {Function} iterator\n   * @param {Object} context\n   */\n  function each(obj, iterator, context) {\n    var i;\n    if (!obj) {\n      return;\n    }\n    if (obj.forEach) {\n      obj.forEach(iterator, context);\n    } else if (obj.length !== undefined) {\n      i = 0;\n      while (i < obj.length) {\n        iterator.call(context, obj[i], i, obj);\n        i++;\n      }\n    } else {\n      for (i in obj) {\n        obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * let a boolean value also be a function that must return a boolean\n   * this first item in args will be used as the context\n   * @param {Boolean|Function} val\n   * @param {Array} [args]\n   * @returns {Boolean}\n   */\n\n  function boolOrFn(val, args) {\n    if (typeof val === TYPE_FUNCTION) {\n      return val.apply(args ? args[0] || undefined : undefined, args);\n    }\n    return val;\n  }\n\n  /**\n   * @private\n   * small indexOf wrapper\n   * @param {String} str\n   * @param {String} find\n   * @returns {Boolean} found\n   */\n  function inStr(str, find) {\n    return str.indexOf(find) > -1;\n  }\n\n  /**\n   * @private\n   * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n   * @param {String} actions\n   * @returns {*}\n   */\n\n  function cleanTouchActions(actions) {\n    // none\n    if (inStr(actions, TOUCH_ACTION_NONE)) {\n      return TOUCH_ACTION_NONE;\n    }\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n    // for different directions, e.g. horizontal pan but vertical swipe?)\n    // we need none (as otherwise with pan-x pan-y combined none of these\n    // recognizers will work, since the browser would handle all panning\n\n    if (hasPanX && hasPanY) {\n      return TOUCH_ACTION_NONE;\n    } // pan-x OR pan-y\n\n    if (hasPanX || hasPanY) {\n      return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n    } // manipulation\n\n    if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n      return TOUCH_ACTION_MANIPULATION;\n    }\n    return TOUCH_ACTION_AUTO;\n  }\n\n  /**\n   * @private\n   * Touch Action\n   * sets the touchAction property or uses the js alternative\n   * @param {Manager} manager\n   * @param {String} value\n   * @constructor\n   */\n\n  var TouchAction = /*#__PURE__*/\n  function () {\n    function TouchAction(manager, value) {\n      this.manager = manager;\n      this.set(value);\n    }\n    /**\n     * @private\n     * set the touchAction value on the element or enable the polyfill\n     * @param {String} value\n     */\n\n    var _proto = TouchAction.prototype;\n    _proto.set = function set(value) {\n      // find out the touch-action by the event handlers\n      if (value === TOUCH_ACTION_COMPUTE) {\n        value = this.compute();\n      }\n      if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n        this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n      }\n      this.actions = value.toLowerCase().trim();\n    };\n    /**\n     * @private\n     * just re-set the touchAction value\n     */\n\n    _proto.update = function update() {\n      this.set(this.manager.options.touchAction);\n    };\n    /**\n     * @private\n     * compute the value for the touchAction property based on the recognizer's settings\n     * @returns {String} value\n     */\n\n    _proto.compute = function compute() {\n      var actions = [];\n      each(this.manager.recognizers, function (recognizer) {\n        if (boolOrFn(recognizer.options.enable, [recognizer])) {\n          actions = actions.concat(recognizer.getTouchAction());\n        }\n      });\n      return cleanTouchActions(actions.join(' '));\n    };\n    /**\n     * @private\n     * this method is called on each input cycle and provides the preventing of the browser behavior\n     * @param {Object} input\n     */\n\n    _proto.preventDefaults = function preventDefaults(input) {\n      var srcEvent = input.srcEvent;\n      var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n      if (this.manager.session.prevented) {\n        srcEvent.preventDefault();\n        return;\n      }\n      var actions = this.actions;\n      var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n      var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n      var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n      if (hasNone) {\n        // do not prevent defaults if this is a tap gesture\n        var isTapPointer = input.pointers.length === 1;\n        var isTapMovement = input.distance < 2;\n        var isTapTouchTime = input.deltaTime < 250;\n        if (isTapPointer && isTapMovement && isTapTouchTime) {\n          return;\n        }\n      }\n      if (hasPanX && hasPanY) {\n        // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n        return;\n      }\n      if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n        return this.preventSrc(srcEvent);\n      }\n    };\n    /**\n     * @private\n     * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n     * @param {Object} srcEvent\n     */\n\n    _proto.preventSrc = function preventSrc(srcEvent) {\n      this.manager.session.prevented = true;\n      srcEvent.preventDefault();\n    };\n    return TouchAction;\n  }();\n\n  /**\n   * @private\n   * find if a node is in the given parent\n   * @method hasParent\n   * @param {HTMLElement} node\n   * @param {HTMLElement} parent\n   * @return {Boolean} found\n   */\n  function hasParent(node, parent) {\n    while (node) {\n      if (node === parent) {\n        return true;\n      }\n      node = node.parentNode;\n    }\n    return false;\n  }\n\n  /**\n   * @private\n   * get the center of all the pointers\n   * @param {Array} pointers\n   * @return {Object} center contains `x` and `y` properties\n   */\n\n  function getCenter(pointers) {\n    var pointersLength = pointers.length; // no need to loop when only one touch\n\n    if (pointersLength === 1) {\n      return {\n        x: round(pointers[0].clientX),\n        y: round(pointers[0].clientY)\n      };\n    }\n    var x = 0;\n    var y = 0;\n    var i = 0;\n    while (i < pointersLength) {\n      x += pointers[i].clientX;\n      y += pointers[i].clientY;\n      i++;\n    }\n    return {\n      x: round(x / pointersLength),\n      y: round(y / pointersLength)\n    };\n  }\n\n  /**\n   * @private\n   * create a simple clone from the input used for storage of firstInput and firstMultiple\n   * @param {Object} input\n   * @returns {Object} clonedInputData\n   */\n\n  function simpleCloneInputData(input) {\n    // make a simple copy of the pointers because we will get a reference if we don't\n    // we only need clientXY for the calculations\n    var pointers = [];\n    var i = 0;\n    while (i < input.pointers.length) {\n      pointers[i] = {\n        clientX: round(input.pointers[i].clientX),\n        clientY: round(input.pointers[i].clientY)\n      };\n      i++;\n    }\n    return {\n      timeStamp: now(),\n      pointers: pointers,\n      center: getCenter(pointers),\n      deltaX: input.deltaX,\n      deltaY: input.deltaY\n    };\n  }\n\n  /**\n   * @private\n   * calculate the absolute distance between two points\n   * @param {Object} p1 {x, y}\n   * @param {Object} p2 {x, y}\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} distance\n   */\n\n  function getDistance(p1, p2, props) {\n    if (!props) {\n      props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]];\n    var y = p2[props[1]] - p1[props[1]];\n    return Math.sqrt(x * x + y * y);\n  }\n\n  /**\n   * @private\n   * calculate the angle between two coordinates\n   * @param {Object} p1\n   * @param {Object} p2\n   * @param {Array} [props] containing x and y keys\n   * @return {Number} angle\n   */\n\n  function getAngle(p1, p2, props) {\n    if (!props) {\n      props = PROPS_XY;\n    }\n    var x = p2[props[0]] - p1[props[0]];\n    var y = p2[props[1]] - p1[props[1]];\n    return Math.atan2(y, x) * 180 / Math.PI;\n  }\n\n  /**\n   * @private\n   * get the direction between two points\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Number} direction\n   */\n\n  function getDirection(x, y) {\n    if (x === y) {\n      return DIRECTION_NONE;\n    }\n    if (abs(x) >= abs(y)) {\n      return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n    }\n    return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n  }\n  function computeDeltaXY(session, input) {\n    var center = input.center; // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n    // jscs throwing error on defalut destructured values and without defaults tests fail\n\n    var offset = session.offsetDelta || {};\n    var prevDelta = session.prevDelta || {};\n    var prevInput = session.prevInput || {};\n    if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n      prevDelta = session.prevDelta = {\n        x: prevInput.deltaX || 0,\n        y: prevInput.deltaY || 0\n      };\n      offset = session.offsetDelta = {\n        x: center.x,\n        y: center.y\n      };\n    }\n    input.deltaX = prevDelta.x + (center.x - offset.x);\n    input.deltaY = prevDelta.y + (center.y - offset.y);\n  }\n\n  /**\n   * @private\n   * calculate the velocity between two points. unit is in px per ms.\n   * @param {Number} deltaTime\n   * @param {Number} x\n   * @param {Number} y\n   * @return {Object} velocity `x` and `y`\n   */\n  function getVelocity(deltaTime, x, y) {\n    return {\n      x: x / deltaTime || 0,\n      y: y / deltaTime || 0\n    };\n  }\n\n  /**\n   * @private\n   * calculate the scale factor between two pointersets\n   * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} scale\n   */\n\n  function getScale(start, end) {\n    return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n  }\n\n  /**\n   * @private\n   * calculate the rotation degrees between two pointersets\n   * @param {Array} start array of pointers\n   * @param {Array} end array of pointers\n   * @return {Number} rotation\n   */\n\n  function getRotation(start, end) {\n    return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n  }\n\n  /**\n   * @private\n   * velocity is calculated every x ms\n   * @param {Object} session\n   * @param {Object} input\n   */\n\n  function computeIntervalInputData(session, input) {\n    var last = session.lastInterval || input;\n    var deltaTime = input.timeStamp - last.timeStamp;\n    var velocity;\n    var velocityX;\n    var velocityY;\n    var direction;\n    if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n      var deltaX = input.deltaX - last.deltaX;\n      var deltaY = input.deltaY - last.deltaY;\n      var v = getVelocity(deltaTime, deltaX, deltaY);\n      velocityX = v.x;\n      velocityY = v.y;\n      velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n      direction = getDirection(deltaX, deltaY);\n      session.lastInterval = input;\n    } else {\n      // use latest velocity info if it doesn't overtake a minimum period\n      velocity = last.velocity;\n      velocityX = last.velocityX;\n      velocityY = last.velocityY;\n      direction = last.direction;\n    }\n    input.velocity = velocity;\n    input.velocityX = velocityX;\n    input.velocityY = velocityY;\n    input.direction = direction;\n  }\n\n  /**\n  * @private\n   * extend the data with some usable properties like scale, rotate, velocity etc\n   * @param {Object} manager\n   * @param {Object} input\n   */\n\n  function computeInputData(manager, input) {\n    var session = manager.session;\n    var pointers = input.pointers;\n    var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n    if (!session.firstInput) {\n      session.firstInput = simpleCloneInputData(input);\n    } // to compute scale and rotation we need to store the multiple touches\n\n    if (pointersLength > 1 && !session.firstMultiple) {\n      session.firstMultiple = simpleCloneInputData(input);\n    } else if (pointersLength === 1) {\n      session.firstMultiple = false;\n    }\n    var firstInput = session.firstInput,\n      firstMultiple = session.firstMultiple;\n    var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n    var center = input.center = getCenter(pointers);\n    input.timeStamp = now();\n    input.deltaTime = input.timeStamp - firstInput.timeStamp;\n    input.angle = getAngle(offsetCenter, center);\n    input.distance = getDistance(offsetCenter, center);\n    computeDeltaXY(session, input);\n    input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n    var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n    input.overallVelocityX = overallVelocity.x;\n    input.overallVelocityY = overallVelocity.y;\n    input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n    input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n    input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n    input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n    computeIntervalInputData(session, input); // find the correct target\n\n    var target = manager.element;\n    var srcEvent = input.srcEvent;\n    var srcEventTarget;\n    if (srcEvent.composedPath) {\n      srcEventTarget = srcEvent.composedPath()[0];\n    } else if (srcEvent.path) {\n      srcEventTarget = srcEvent.path[0];\n    } else {\n      srcEventTarget = srcEvent.target;\n    }\n    if (hasParent(srcEventTarget, target)) {\n      target = srcEventTarget;\n    }\n    input.target = target;\n  }\n\n  /**\n   * @private\n   * handle input events\n   * @param {Manager} manager\n   * @param {String} eventType\n   * @param {Object} input\n   */\n\n  function inputHandler(manager, eventType, input) {\n    var pointersLen = input.pointers.length;\n    var changedPointersLen = input.changedPointers.length;\n    var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n    var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n    input.isFirst = !!isFirst;\n    input.isFinal = !!isFinal;\n    if (isFirst) {\n      manager.session = {};\n    } // source event is the normalized value of the domEvents\n    // like 'touchstart, mouseup, pointerdown'\n\n    input.eventType = eventType; // compute scale, rotation etc\n\n    computeInputData(manager, input); // emit secret event\n\n    manager.emit('hammer.input', input);\n    manager.recognize(input);\n    manager.session.prevInput = input;\n  }\n\n  /**\n   * @private\n   * split string on whitespace\n   * @param {String} str\n   * @returns {Array} words\n   */\n  function splitStr(str) {\n    return str.trim().split(/\\s+/g);\n  }\n\n  /**\n   * @private\n   * addEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n\n  function addEventListeners(target, types, handler) {\n    each(splitStr(types), function (type) {\n      target.addEventListener(type, handler, false);\n    });\n  }\n\n  /**\n   * @private\n   * removeEventListener with multiple events at once\n   * @param {EventTarget} target\n   * @param {String} types\n   * @param {Function} handler\n   */\n\n  function removeEventListeners(target, types, handler) {\n    each(splitStr(types), function (type) {\n      target.removeEventListener(type, handler, false);\n    });\n  }\n\n  /**\n   * @private\n   * get the window object of an element\n   * @param {HTMLElement} element\n   * @returns {DocumentView|Window}\n   */\n  function getWindowForElement(element) {\n    var doc = element.ownerDocument || element;\n    return doc.defaultView || doc.parentWindow || window;\n  }\n\n  /**\n   * @private\n   * create new input type manager\n   * @param {Manager} manager\n   * @param {Function} callback\n   * @returns {Input}\n   * @constructor\n   */\n\n  var Input = /*#__PURE__*/\n  function () {\n    function Input(manager, callback) {\n      var self = this;\n      this.manager = manager;\n      this.callback = callback;\n      this.element = manager.element;\n      this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n      // so when disabled the input events are completely bypassed.\n\n      this.domHandler = function (ev) {\n        if (boolOrFn(manager.options.enable, [manager])) {\n          self.handler(ev);\n        }\n      };\n      this.init();\n    }\n    /**\n     * @private\n     * should handle the inputEvent data and trigger the callback\n     * @virtual\n     */\n\n    var _proto = Input.prototype;\n    _proto.handler = function handler() {};\n    /**\n     * @private\n     * bind the events\n     */\n\n    _proto.init = function init() {\n      this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    };\n    /**\n     * @private\n     * unbind the events\n     */\n\n    _proto.destroy = function destroy() {\n      this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n      this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n      this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n    };\n    return Input;\n  }();\n\n  /**\n   * @private\n   * find if a array contains the object using indexOf or a simple polyFill\n   * @param {Array} src\n   * @param {String} find\n   * @param {String} [findByKey]\n   * @return {Boolean|Number} false when not found, or the index\n   */\n  function inArray(src, find, findByKey) {\n    if (src.indexOf && !findByKey) {\n      return src.indexOf(find);\n    } else {\n      var i = 0;\n      while (i < src.length) {\n        if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n          // do not use === here, test fails\n          return i;\n        }\n        i++;\n      }\n      return -1;\n    }\n  }\n  var POINTER_INPUT_MAP = {\n    pointerdown: INPUT_START,\n    pointermove: INPUT_MOVE,\n    pointerup: INPUT_END,\n    pointercancel: INPUT_CANCEL,\n    pointerout: INPUT_CANCEL\n  }; // in IE10 the pointer types is defined as an enum\n\n  var IE10_POINTER_TYPE_ENUM = {\n    2: INPUT_TYPE_TOUCH,\n    3: INPUT_TYPE_PEN,\n    4: INPUT_TYPE_MOUSE,\n    5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n  };\n  var POINTER_ELEMENT_EVENTS = 'pointerdown';\n  var POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\n  if (win.MSPointerEvent && !win.PointerEvent) {\n    POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n    POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n  }\n  /**\n   * @private\n   * Pointer events input\n   * @constructor\n   * @extends Input\n   */\n\n  var PointerEventInput = /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(PointerEventInput, _Input);\n    function PointerEventInput() {\n      var _this;\n      var proto = PointerEventInput.prototype;\n      proto.evEl = POINTER_ELEMENT_EVENTS;\n      proto.evWin = POINTER_WINDOW_EVENTS;\n      _this = _Input.apply(this, arguments) || this;\n      _this.store = _this.manager.session.pointerEvents = [];\n      return _this;\n    }\n    /**\n     * @private\n     * handle mouse events\n     * @param {Object} ev\n     */\n\n    var _proto = PointerEventInput.prototype;\n    _proto.handler = function handler(ev) {\n      var store = this.store;\n      var removePointer = false;\n      var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n      var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n      var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n      var isTouch = pointerType === INPUT_TYPE_TOUCH; // get index of the event in the store\n\n      var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n      if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n        if (storeIndex < 0) {\n          store.push(ev);\n          storeIndex = store.length - 1;\n        }\n      } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n        removePointer = true;\n      } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n      if (storeIndex < 0) {\n        return;\n      } // update the event in the store\n\n      store[storeIndex] = ev;\n      this.callback(this.manager, eventType, {\n        pointers: store,\n        changedPointers: [ev],\n        pointerType: pointerType,\n        srcEvent: ev\n      });\n      if (removePointer) {\n        // remove from the store\n        store.splice(storeIndex, 1);\n      }\n    };\n    return PointerEventInput;\n  }(Input);\n\n  /**\n   * @private\n   * convert array-like objects to real arrays\n   * @param {Object} obj\n   * @returns {Array}\n   */\n  function toArray(obj) {\n    return Array.prototype.slice.call(obj, 0);\n  }\n\n  /**\n   * @private\n   * unique array with objects based on a key (like 'id') or just by the array's value\n   * @param {Array} src [{id:1},{id:2},{id:1}]\n   * @param {String} [key]\n   * @param {Boolean} [sort=False]\n   * @returns {Array} [{id:1},{id:2}]\n   */\n\n  function uniqueArray(src, key, sort) {\n    var results = [];\n    var values = [];\n    var i = 0;\n    while (i < src.length) {\n      var val = key ? src[i][key] : src[i];\n      if (inArray(values, val) < 0) {\n        results.push(src[i]);\n      }\n      values[i] = val;\n      i++;\n    }\n    if (sort) {\n      if (!key) {\n        results = results.sort();\n      } else {\n        results = results.sort(function (a, b) {\n          return a[key] > b[key];\n        });\n      }\n    }\n    return results;\n  }\n  var TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n  };\n  var TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n  /**\n   * @private\n   * Multi-user touch events input\n   * @constructor\n   * @extends Input\n   */\n\n  var TouchInput = /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(TouchInput, _Input);\n    function TouchInput() {\n      var _this;\n      TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;\n      _this = _Input.apply(this, arguments) || this;\n      _this.targetIds = {}; // this.evTarget = TOUCH_TARGET_EVENTS;\n\n      return _this;\n    }\n    var _proto = TouchInput.prototype;\n    _proto.handler = function handler(ev) {\n      var type = TOUCH_INPUT_MAP[ev.type];\n      var touches = getTouches.call(this, ev, type);\n      if (!touches) {\n        return;\n      }\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    };\n    return TouchInput;\n  }(Input);\n  function getTouches(ev, type) {\n    var allTouches = toArray(ev.touches);\n    var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n    if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n      targetIds[allTouches[0].identifier] = true;\n      return [allTouches, allTouches];\n    }\n    var i;\n    var targetTouches;\n    var changedTouches = toArray(ev.changedTouches);\n    var changedTargetTouches = [];\n    var target = this.target; // get target touches from touches\n\n    targetTouches = allTouches.filter(function (touch) {\n      return hasParent(touch.target, target);\n    }); // collect touches\n\n    if (type === INPUT_START) {\n      i = 0;\n      while (i < targetTouches.length) {\n        targetIds[targetTouches[i].identifier] = true;\n        i++;\n      }\n    } // filter changed touches to only contain touches that exist in the collected target ids\n\n    i = 0;\n    while (i < changedTouches.length) {\n      if (targetIds[changedTouches[i].identifier]) {\n        changedTargetTouches.push(changedTouches[i]);\n      } // cleanup removed touches\n\n      if (type & (INPUT_END | INPUT_CANCEL)) {\n        delete targetIds[changedTouches[i].identifier];\n      }\n      i++;\n    }\n    if (!changedTargetTouches.length) {\n      return;\n    }\n    return [\n    // merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n    uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n  }\n  var MOUSE_INPUT_MAP = {\n    mousedown: INPUT_START,\n    mousemove: INPUT_MOVE,\n    mouseup: INPUT_END\n  };\n  var MOUSE_ELEMENT_EVENTS = 'mousedown';\n  var MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n  /**\n   * @private\n   * Mouse events input\n   * @constructor\n   * @extends Input\n   */\n\n  var MouseInput = /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(MouseInput, _Input);\n    function MouseInput() {\n      var _this;\n      var proto = MouseInput.prototype;\n      proto.evEl = MOUSE_ELEMENT_EVENTS;\n      proto.evWin = MOUSE_WINDOW_EVENTS;\n      _this = _Input.apply(this, arguments) || this;\n      _this.pressed = false; // mousedown state\n\n      return _this;\n    }\n    /**\n     * @private\n     * handle mouse events\n     * @param {Object} ev\n     */\n\n    var _proto = MouseInput.prototype;\n    _proto.handler = function handler(ev) {\n      var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n      if (eventType & INPUT_START && ev.button === 0) {\n        this.pressed = true;\n      }\n      if (eventType & INPUT_MOVE && ev.which !== 1) {\n        eventType = INPUT_END;\n      } // mouse must be down\n\n      if (!this.pressed) {\n        return;\n      }\n      if (eventType & INPUT_END) {\n        this.pressed = false;\n      }\n      this.callback(this.manager, eventType, {\n        pointers: [ev],\n        changedPointers: [ev],\n        pointerType: INPUT_TYPE_MOUSE,\n        srcEvent: ev\n      });\n    };\n    return MouseInput;\n  }(Input);\n\n  /**\n   * @private\n   * Combined touch and mouse input\n   *\n   * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n   * This because touch devices also emit mouse events while doing a touch.\n   *\n   * @constructor\n   * @extends Input\n   */\n\n  var DEDUP_TIMEOUT = 2500;\n  var DEDUP_DISTANCE = 25;\n  function setLastTouch(eventData) {\n    var _eventData$changedPoi = eventData.changedPointers,\n      touch = _eventData$changedPoi[0];\n    if (touch.identifier === this.primaryTouch) {\n      var lastTouch = {\n        x: touch.clientX,\n        y: touch.clientY\n      };\n      var lts = this.lastTouches;\n      this.lastTouches.push(lastTouch);\n      var removeLastTouch = function removeLastTouch() {\n        var i = lts.indexOf(lastTouch);\n        if (i > -1) {\n          lts.splice(i, 1);\n        }\n      };\n      setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n    }\n  }\n  function recordTouches(eventType, eventData) {\n    if (eventType & INPUT_START) {\n      this.primaryTouch = eventData.changedPointers[0].identifier;\n      setLastTouch.call(this, eventData);\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      setLastTouch.call(this, eventData);\n    }\n  }\n  function isSyntheticEvent(eventData) {\n    var x = eventData.srcEvent.clientX;\n    var y = eventData.srcEvent.clientY;\n    for (var i = 0; i < this.lastTouches.length; i++) {\n      var t = this.lastTouches[i];\n      var dx = Math.abs(x - t.x);\n      var dy = Math.abs(y - t.y);\n      if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n        return true;\n      }\n    }\n    return false;\n  }\n  var TouchMouseInput = /*#__PURE__*/\n  function () {\n    var TouchMouseInput = /*#__PURE__*/\n    function (_Input) {\n      _inheritsLoose(TouchMouseInput, _Input);\n      function TouchMouseInput(_manager, callback) {\n        var _this;\n        _this = _Input.call(this, _manager, callback) || this;\n        _this.handler = function (manager, inputEvent, inputData) {\n          var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n          var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n          if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n            return;\n          } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n          if (isTouch) {\n            recordTouches.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputEvent, inputData);\n          } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputData)) {\n            return;\n          }\n          _this.callback(manager, inputEvent, inputData);\n        };\n        _this.touch = new TouchInput(_this.manager, _this.handler);\n        _this.mouse = new MouseInput(_this.manager, _this.handler);\n        _this.primaryTouch = null;\n        _this.lastTouches = [];\n        return _this;\n      }\n      /**\n       * @private\n       * handle mouse and touch events\n       * @param {Hammer} manager\n       * @param {String} inputEvent\n       * @param {Object} inputData\n       */\n\n      var _proto = TouchMouseInput.prototype;\n\n      /**\n       * @private\n       * remove the event listeners\n       */\n      _proto.destroy = function destroy() {\n        this.touch.destroy();\n        this.mouse.destroy();\n      };\n      return TouchMouseInput;\n    }(Input);\n    return TouchMouseInput;\n  }();\n\n  /**\n   * @private\n   * create new input type manager\n   * called by the Manager constructor\n   * @param {Hammer} manager\n   * @returns {Input}\n   */\n\n  function createInputInstance(manager) {\n    var Type; // let inputClass = manager.options.inputClass;\n\n    var inputClass = manager.options.inputClass;\n    if (inputClass) {\n      Type = inputClass;\n    } else if (SUPPORT_POINTER_EVENTS) {\n      Type = PointerEventInput;\n    } else if (SUPPORT_ONLY_TOUCH) {\n      Type = TouchInput;\n    } else if (!SUPPORT_TOUCH) {\n      Type = MouseInput;\n    } else {\n      Type = TouchMouseInput;\n    }\n    return new Type(manager, inputHandler);\n  }\n\n  /**\n   * @private\n   * if the argument is an array, we want to execute the fn on each entry\n   * if it aint an array we don't want to do a thing.\n   * this is used by all the methods that accept a single and array argument.\n   * @param {*|Array} arg\n   * @param {String} fn\n   * @param {Object} [context]\n   * @returns {Boolean}\n   */\n\n  function invokeArrayArg(arg, fn, context) {\n    if (Array.isArray(arg)) {\n      each(arg, context[fn], context);\n      return true;\n    }\n    return false;\n  }\n  var STATE_POSSIBLE = 1;\n  var STATE_BEGAN = 2;\n  var STATE_CHANGED = 4;\n  var STATE_ENDED = 8;\n  var STATE_RECOGNIZED = STATE_ENDED;\n  var STATE_CANCELLED = 16;\n  var STATE_FAILED = 32;\n\n  /**\n   * @private\n   * get a unique id\n   * @returns {number} uniqueId\n   */\n  var _uniqueId = 1;\n  function uniqueId() {\n    return _uniqueId++;\n  }\n\n  /**\n   * @private\n   * get a recognizer by name if it is bound to a manager\n   * @param {Recognizer|String} otherRecognizer\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer}\n   */\n  function getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n    var manager = recognizer.manager;\n    if (manager) {\n      return manager.get(otherRecognizer);\n    }\n    return otherRecognizer;\n  }\n\n  /**\n   * @private\n   * get a usable string, used as event postfix\n   * @param {constant} state\n   * @returns {String} state\n   */\n\n  function stateStr(state) {\n    if (state & STATE_CANCELLED) {\n      return 'cancel';\n    } else if (state & STATE_ENDED) {\n      return 'end';\n    } else if (state & STATE_CHANGED) {\n      return 'move';\n    } else if (state & STATE_BEGAN) {\n      return 'start';\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   * Recognizer flow explained; *\n   * All recognizers have the initial state of POSSIBLE when a input session starts.\n   * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n   * Example session for mouse-input: mousedown -> mousemove -> mouseup\n   *\n   * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n   * which determines with state it should be.\n   *\n   * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n   * POSSIBLE to give it another change on the next cycle.\n   *\n   *               Possible\n   *                  |\n   *            +-----+---------------+\n   *            |                     |\n   *      +-----+-----+               |\n   *      |           |               |\n   *   Failed      Cancelled          |\n   *                          +-------+------+\n   *                          |              |\n   *                      Recognized       Began\n   *                                         |\n   *                                      Changed\n   *                                         |\n   *                                  Ended/Recognized\n   */\n\n  /**\n   * @private\n   * Recognizer\n   * Every recognizer needs to extend from this class.\n   * @constructor\n   * @param {Object} options\n   */\n\n  var Recognizer = /*#__PURE__*/\n  function () {\n    function Recognizer(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      this.options = _extends({\n        enable: true\n      }, options);\n      this.id = uniqueId();\n      this.manager = null; // default is enable true\n\n      this.state = STATE_POSSIBLE;\n      this.simultaneous = {};\n      this.requireFail = [];\n    }\n    /**\n     * @private\n     * set options\n     * @param {Object} options\n     * @return {Recognizer}\n     */\n\n    var _proto = Recognizer.prototype;\n    _proto.set = function set(options) {\n      assign$1(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n      this.manager && this.manager.touchAction.update();\n      return this;\n    };\n    /**\n     * @private\n     * recognize simultaneous with an other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n    _proto.recognizeWith = function recognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n        return this;\n      }\n      var simultaneous = this.simultaneous;\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      if (!simultaneous[otherRecognizer.id]) {\n        simultaneous[otherRecognizer.id] = otherRecognizer;\n        otherRecognizer.recognizeWith(this);\n      }\n      return this;\n    };\n    /**\n     * @private\n     * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n    _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n        return this;\n      }\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      delete this.simultaneous[otherRecognizer.id];\n      return this;\n    };\n    /**\n     * @private\n     * recognizer can only run when an other is failing\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n    _proto.requireFailure = function requireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n        return this;\n      }\n      var requireFail = this.requireFail;\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      if (inArray(requireFail, otherRecognizer) === -1) {\n        requireFail.push(otherRecognizer);\n        otherRecognizer.requireFailure(this);\n      }\n      return this;\n    };\n    /**\n     * @private\n     * drop the requireFailure link. it does not remove the link on the other recognizer.\n     * @param {Recognizer} otherRecognizer\n     * @returns {Recognizer} this\n     */\n\n    _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {\n      if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n        return this;\n      }\n      otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n      var index = inArray(this.requireFail, otherRecognizer);\n      if (index > -1) {\n        this.requireFail.splice(index, 1);\n      }\n      return this;\n    };\n    /**\n     * @private\n     * has require failures boolean\n     * @returns {boolean}\n     */\n\n    _proto.hasRequireFailures = function hasRequireFailures() {\n      return this.requireFail.length > 0;\n    };\n    /**\n     * @private\n     * if the recognizer can recognize simultaneous with an other recognizer\n     * @param {Recognizer} otherRecognizer\n     * @returns {Boolean}\n     */\n\n    _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {\n      return !!this.simultaneous[otherRecognizer.id];\n    };\n    /**\n     * @private\n     * You should use `tryEmit` instead of `emit` directly to check\n     * that all the needed recognizers has failed before emitting.\n     * @param {Object} input\n     */\n\n    _proto.emit = function emit(input) {\n      var self = this;\n      var state = this.state;\n      function emit(event) {\n        self.manager.emit(event, input);\n      } // 'panstart' and 'panmove'\n\n      if (state < STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n      emit(self.options.event); // simple 'eventName' events\n\n      if (input.additionalEvent) {\n        // additional event(panleft, panright, pinchin, pinchout...)\n        emit(input.additionalEvent);\n      } // panend and pancancel\n\n      if (state >= STATE_ENDED) {\n        emit(self.options.event + stateStr(state));\n      }\n    };\n    /**\n     * @private\n     * Check that all the require failure recognizers has failed,\n     * if true, it emits a gesture event,\n     * otherwise, setup the state to FAILED.\n     * @param {Object} input\n     */\n\n    _proto.tryEmit = function tryEmit(input) {\n      if (this.canEmit()) {\n        return this.emit(input);\n      } // it's failing anyway\n\n      this.state = STATE_FAILED;\n    };\n    /**\n     * @private\n     * can we emit?\n     * @returns {boolean}\n     */\n\n    _proto.canEmit = function canEmit() {\n      var i = 0;\n      while (i < this.requireFail.length) {\n        if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n          return false;\n        }\n        i++;\n      }\n      return true;\n    };\n    /**\n     * @private\n     * update the recognizer\n     * @param {Object} inputData\n     */\n\n    _proto.recognize = function recognize(inputData) {\n      // make a new copy of the inputData\n      // so we can change the inputData without messing up the other recognizers\n      var inputDataClone = assign$1({}, inputData); // is is enabled and allow recognizing?\n\n      if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n        this.reset();\n        this.state = STATE_FAILED;\n        return;\n      } // reset when we've reached the end\n\n      if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n        this.state = STATE_POSSIBLE;\n      }\n      this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n      // so trigger an event\n\n      if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n        this.tryEmit(inputDataClone);\n      }\n    };\n    /**\n     * @private\n     * return the state of the recognizer\n     * the actual recognizing happens in this method\n     * @virtual\n     * @param {Object} inputData\n     * @returns {constant} STATE\n     */\n\n    /* jshint ignore:start */\n\n    _proto.process = function process(inputData) {};\n    /* jshint ignore:end */\n\n    /**\n     * @private\n     * return the preferred touch-action\n     * @virtual\n     * @returns {Array}\n     */\n\n    _proto.getTouchAction = function getTouchAction() {};\n    /**\n     * @private\n     * called when the gesture isn't allowed to recognize\n     * like when another is being recognized or it is disabled\n     * @virtual\n     */\n\n    _proto.reset = function reset() {};\n    return Recognizer;\n  }();\n\n  /**\n   * @private\n   * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n   * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n   * a single tap.\n   *\n   * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n   * multi-taps being recognized.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  var TapRecognizer = /*#__PURE__*/\n  function (_Recognizer) {\n    _inheritsLoose(TapRecognizer, _Recognizer);\n    function TapRecognizer(options) {\n      var _this;\n      if (options === void 0) {\n        options = {};\n      }\n      _this = _Recognizer.call(this, _extends({\n        event: 'tap',\n        pointers: 1,\n        taps: 1,\n        interval: 300,\n        // max time between the multi-tap taps\n        time: 250,\n        // max time of the pointer to be down (like finger on the screen)\n        threshold: 9,\n        // a minimal movement is ok, but keep it low\n        posThreshold: 10\n      }, options)) || this; // previous time and center,\n      // used for tap counting\n\n      _this.pTime = false;\n      _this.pCenter = false;\n      _this._timer = null;\n      _this._input = null;\n      _this.count = 0;\n      return _this;\n    }\n    var _proto = TapRecognizer.prototype;\n    _proto.getTouchAction = function getTouchAction() {\n      return [TOUCH_ACTION_MANIPULATION];\n    };\n    _proto.process = function process(input) {\n      var _this2 = this;\n      var options = this.options;\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTouchTime = input.deltaTime < options.time;\n      this.reset();\n      if (input.eventType & INPUT_START && this.count === 0) {\n        return this.failTimeout();\n      } // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n\n      if (validMovement && validTouchTime && validPointers) {\n        if (input.eventType !== INPUT_END) {\n          return this.failTimeout();\n        }\n        var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n        var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n        this.pTime = input.timeStamp;\n        this.pCenter = input.center;\n        if (!validMultiTap || !validInterval) {\n          this.count = 1;\n        } else {\n          this.count += 1;\n        }\n        this._input = input; // if tap count matches we have recognized it,\n        // else it has began recognizing...\n\n        var tapCount = this.count % options.taps;\n        if (tapCount === 0) {\n          // no failing requirements, immediately trigger the tap event\n          // or wait as long as the multitap interval to trigger\n          if (!this.hasRequireFailures()) {\n            return STATE_RECOGNIZED;\n          } else {\n            this._timer = setTimeout(function () {\n              _this2.state = STATE_RECOGNIZED;\n              _this2.tryEmit();\n            }, options.interval);\n            return STATE_BEGAN;\n          }\n        }\n      }\n      return STATE_FAILED;\n    };\n    _proto.failTimeout = function failTimeout() {\n      var _this3 = this;\n      this._timer = setTimeout(function () {\n        _this3.state = STATE_FAILED;\n      }, this.options.interval);\n      return STATE_FAILED;\n    };\n    _proto.reset = function reset() {\n      clearTimeout(this._timer);\n    };\n    _proto.emit = function emit() {\n      if (this.state === STATE_RECOGNIZED) {\n        this._input.tapCount = this.count;\n        this.manager.emit(this.options.event, this._input);\n      }\n    };\n    return TapRecognizer;\n  }(Recognizer);\n\n  /**\n   * @private\n   * This recognizer is just used as a base for the simple attribute recognizers.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  var AttrRecognizer = /*#__PURE__*/\n  function (_Recognizer) {\n    _inheritsLoose(AttrRecognizer, _Recognizer);\n    function AttrRecognizer(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _Recognizer.call(this, _extends({\n        pointers: 1\n      }, options)) || this;\n    }\n    /**\n     * @private\n     * Used to check if it the recognizer receives valid input, like input.distance > 10.\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {Boolean} recognized\n     */\n\n    var _proto = AttrRecognizer.prototype;\n    _proto.attrTest = function attrTest(input) {\n      var optionPointers = this.options.pointers;\n      return optionPointers === 0 || input.pointers.length === optionPointers;\n    };\n    /**\n     * @private\n     * Process the input and return the state for the recognizer\n     * @memberof AttrRecognizer\n     * @param {Object} input\n     * @returns {*} State\n     */\n\n    _proto.process = function process(input) {\n      var state = this.state;\n      var eventType = input.eventType;\n      var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n      var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n      if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n        return state | STATE_CANCELLED;\n      } else if (isRecognized || isValid) {\n        if (eventType & INPUT_END) {\n          return state | STATE_ENDED;\n        } else if (!(state & STATE_BEGAN)) {\n          return STATE_BEGAN;\n        }\n        return state | STATE_CHANGED;\n      }\n      return STATE_FAILED;\n    };\n    return AttrRecognizer;\n  }(Recognizer);\n\n  /**\n   * @private\n   * direction cons to string\n   * @param {constant} direction\n   * @returns {String}\n   */\n\n  function directionStr(direction) {\n    if (direction === DIRECTION_DOWN) {\n      return 'down';\n    } else if (direction === DIRECTION_UP) {\n      return 'up';\n    } else if (direction === DIRECTION_LEFT) {\n      return 'left';\n    } else if (direction === DIRECTION_RIGHT) {\n      return 'right';\n    }\n    return '';\n  }\n\n  /**\n   * @private\n   * Pan\n   * Recognized when the pointer is down and moved in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  var PanRecognizer = /*#__PURE__*/\n  function (_AttrRecognizer) {\n    _inheritsLoose(PanRecognizer, _AttrRecognizer);\n    function PanRecognizer(options) {\n      var _this;\n      if (options === void 0) {\n        options = {};\n      }\n      _this = _AttrRecognizer.call(this, _extends({\n        event: 'pan',\n        threshold: 10,\n        pointers: 1,\n        direction: DIRECTION_ALL\n      }, options)) || this;\n      _this.pX = null;\n      _this.pY = null;\n      return _this;\n    }\n    var _proto = PanRecognizer.prototype;\n    _proto.getTouchAction = function getTouchAction() {\n      var direction = this.options.direction;\n      var actions = [];\n      if (direction & DIRECTION_HORIZONTAL) {\n        actions.push(TOUCH_ACTION_PAN_Y);\n      }\n      if (direction & DIRECTION_VERTICAL) {\n        actions.push(TOUCH_ACTION_PAN_X);\n      }\n      return actions;\n    };\n    _proto.directionTest = function directionTest(input) {\n      var options = this.options;\n      var hasMoved = true;\n      var distance = input.distance;\n      var direction = input.direction;\n      var x = input.deltaX;\n      var y = input.deltaY; // lock to axis?\n\n      if (!(direction & options.direction)) {\n        if (options.direction & DIRECTION_HORIZONTAL) {\n          direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n          hasMoved = x !== this.pX;\n          distance = Math.abs(input.deltaX);\n        } else {\n          direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n          hasMoved = y !== this.pY;\n          distance = Math.abs(input.deltaY);\n        }\n      }\n      input.direction = direction;\n      return hasMoved && distance > options.threshold && direction & options.direction;\n    };\n    _proto.attrTest = function attrTest(input) {\n      return AttrRecognizer.prototype.attrTest.call(this, input) && (\n      // replace with a super call\n      this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n    };\n    _proto.emit = function emit(input) {\n      this.pX = input.deltaX;\n      this.pY = input.deltaY;\n      var direction = directionStr(input.direction);\n      if (direction) {\n        input.additionalEvent = this.options.event + direction;\n      }\n      _AttrRecognizer.prototype.emit.call(this, input);\n    };\n    return PanRecognizer;\n  }(AttrRecognizer);\n\n  /**\n   * @private\n   * Swipe\n   * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  var SwipeRecognizer = /*#__PURE__*/\n  function (_AttrRecognizer) {\n    _inheritsLoose(SwipeRecognizer, _AttrRecognizer);\n    function SwipeRecognizer(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _AttrRecognizer.call(this, _extends({\n        event: 'swipe',\n        threshold: 10,\n        velocity: 0.3,\n        direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n        pointers: 1\n      }, options)) || this;\n    }\n    var _proto = SwipeRecognizer.prototype;\n    _proto.getTouchAction = function getTouchAction() {\n      return PanRecognizer.prototype.getTouchAction.call(this);\n    };\n    _proto.attrTest = function attrTest(input) {\n      var direction = this.options.direction;\n      var velocity;\n      if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n        velocity = input.overallVelocity;\n      } else if (direction & DIRECTION_HORIZONTAL) {\n        velocity = input.overallVelocityX;\n      } else if (direction & DIRECTION_VERTICAL) {\n        velocity = input.overallVelocityY;\n      }\n      return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n    };\n    _proto.emit = function emit(input) {\n      var direction = directionStr(input.offsetDirection);\n      if (direction) {\n        this.manager.emit(this.options.event + direction, input);\n      }\n      this.manager.emit(this.options.event, input);\n    };\n    return SwipeRecognizer;\n  }(AttrRecognizer);\n\n  /**\n   * @private\n   * Pinch\n   * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  var PinchRecognizer = /*#__PURE__*/\n  function (_AttrRecognizer) {\n    _inheritsLoose(PinchRecognizer, _AttrRecognizer);\n    function PinchRecognizer(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _AttrRecognizer.call(this, _extends({\n        event: 'pinch',\n        threshold: 0,\n        pointers: 2\n      }, options)) || this;\n    }\n    var _proto = PinchRecognizer.prototype;\n    _proto.getTouchAction = function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    };\n    _proto.attrTest = function attrTest(input) {\n      return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n    };\n    _proto.emit = function emit(input) {\n      if (input.scale !== 1) {\n        var inOut = input.scale < 1 ? 'in' : 'out';\n        input.additionalEvent = this.options.event + inOut;\n      }\n      _AttrRecognizer.prototype.emit.call(this, input);\n    };\n    return PinchRecognizer;\n  }(AttrRecognizer);\n\n  /**\n   * @private\n   * Rotate\n   * Recognized when two or more pointer are moving in a circular motion.\n   * @constructor\n   * @extends AttrRecognizer\n   */\n\n  var RotateRecognizer = /*#__PURE__*/\n  function (_AttrRecognizer) {\n    _inheritsLoose(RotateRecognizer, _AttrRecognizer);\n    function RotateRecognizer(options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return _AttrRecognizer.call(this, _extends({\n        event: 'rotate',\n        threshold: 0,\n        pointers: 2\n      }, options)) || this;\n    }\n    var _proto = RotateRecognizer.prototype;\n    _proto.getTouchAction = function getTouchAction() {\n      return [TOUCH_ACTION_NONE];\n    };\n    _proto.attrTest = function attrTest(input) {\n      return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n    };\n    return RotateRecognizer;\n  }(AttrRecognizer);\n\n  /**\n   * @private\n   * Press\n   * Recognized when the pointer is down for x ms without any movement.\n   * @constructor\n   * @extends Recognizer\n   */\n\n  var PressRecognizer = /*#__PURE__*/\n  function (_Recognizer) {\n    _inheritsLoose(PressRecognizer, _Recognizer);\n    function PressRecognizer(options) {\n      var _this;\n      if (options === void 0) {\n        options = {};\n      }\n      _this = _Recognizer.call(this, _extends({\n        event: 'press',\n        pointers: 1,\n        time: 251,\n        // minimal time of the pointer to be pressed\n        threshold: 9\n      }, options)) || this;\n      _this._timer = null;\n      _this._input = null;\n      return _this;\n    }\n    var _proto = PressRecognizer.prototype;\n    _proto.getTouchAction = function getTouchAction() {\n      return [TOUCH_ACTION_AUTO];\n    };\n    _proto.process = function process(input) {\n      var _this2 = this;\n      var options = this.options;\n      var validPointers = input.pointers.length === options.pointers;\n      var validMovement = input.distance < options.threshold;\n      var validTime = input.deltaTime > options.time;\n      this._input = input; // we only allow little movement\n      // and we've reached an end event, so a tap is possible\n\n      if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n        this.reset();\n      } else if (input.eventType & INPUT_START) {\n        this.reset();\n        this._timer = setTimeout(function () {\n          _this2.state = STATE_RECOGNIZED;\n          _this2.tryEmit();\n        }, options.time);\n      } else if (input.eventType & INPUT_END) {\n        return STATE_RECOGNIZED;\n      }\n      return STATE_FAILED;\n    };\n    _proto.reset = function reset() {\n      clearTimeout(this._timer);\n    };\n    _proto.emit = function emit(input) {\n      if (this.state !== STATE_RECOGNIZED) {\n        return;\n      }\n      if (input && input.eventType & INPUT_END) {\n        this.manager.emit(this.options.event + \"up\", input);\n      } else {\n        this._input.timeStamp = now();\n        this.manager.emit(this.options.event, this._input);\n      }\n    };\n    return PressRecognizer;\n  }(Recognizer);\n  var defaults = {\n    /**\n     * @private\n     * set if DOM events are being triggered.\n     * But this is slower and unused by simple implementations, so disabled by default.\n     * @type {Boolean}\n     * @default false\n     */\n    domEvents: false,\n    /**\n     * @private\n     * The value for the touchAction property/fallback.\n     * When set to `compute` it will magically set the correct value based on the added recognizers.\n     * @type {String}\n     * @default compute\n     */\n    touchAction: TOUCH_ACTION_COMPUTE,\n    /**\n     * @private\n     * @type {Boolean}\n     * @default true\n     */\n    enable: true,\n    /**\n     * @private\n     * EXPERIMENTAL FEATURE -- can be removed/changed\n     * Change the parent input target element.\n     * If Null, then it is being set the to main element.\n     * @type {Null|EventTarget}\n     * @default null\n     */\n    inputTarget: null,\n    /**\n     * @private\n     * force an input class\n     * @type {Null|Function}\n     * @default null\n     */\n    inputClass: null,\n    /**\n     * @private\n     * Some CSS properties can be used to improve the working of Hammer.\n     * Add them to this method and they will be set when creating a new Manager.\n     * @namespace\n     */\n    cssProps: {\n      /**\n       * @private\n       * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n       * @type {String}\n       * @default 'none'\n       */\n      userSelect: \"none\",\n      /**\n       * @private\n       * Disable the Windows Phone grippers when pressing an element.\n       * @type {String}\n       * @default 'none'\n       */\n      touchSelect: \"none\",\n      /**\n       * @private\n       * Disables the default callout shown when you touch and hold a touch target.\n       * On iOS, when you touch and hold a touch target such as a link, Safari displays\n       * a callout containing information about the link. This property allows you to disable that callout.\n       * @type {String}\n       * @default 'none'\n       */\n      touchCallout: \"none\",\n      /**\n       * @private\n       * Specifies whether zooming is enabled. Used by IE10>\n       * @type {String}\n       * @default 'none'\n       */\n      contentZooming: \"none\",\n      /**\n       * @private\n       * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n       * @type {String}\n       * @default 'none'\n       */\n      userDrag: \"none\",\n      /**\n       * @private\n       * Overrides the highlight color shown when the user taps a link or a JavaScript\n       * clickable element in iOS. This property obeys the alpha value, if specified.\n       * @type {String}\n       * @default 'rgba(0,0,0,0)'\n       */\n      tapHighlightColor: \"rgba(0,0,0,0)\"\n    }\n  };\n  /**\n   * @private\n   * Default recognizer setup when calling `Hammer()`\n   * When creating a new Manager these will be skipped.\n   * This is separated with other defaults because of tree-shaking.\n   * @type {Array}\n   */\n\n  var preset = [[RotateRecognizer, {\n    enable: false\n  }], [PinchRecognizer, {\n    enable: false\n  }, ['rotate']], [SwipeRecognizer, {\n    direction: DIRECTION_HORIZONTAL\n  }], [PanRecognizer, {\n    direction: DIRECTION_HORIZONTAL\n  }, ['swipe']], [TapRecognizer], [TapRecognizer, {\n    event: 'doubletap',\n    taps: 2\n  }, ['tap']], [PressRecognizer]];\n  var STOP = 1;\n  var FORCED_STOP = 2;\n  /**\n   * @private\n   * add/remove the css properties as defined in manager.options.cssProps\n   * @param {Manager} manager\n   * @param {Boolean} add\n   */\n\n  function toggleCssProps(manager, add) {\n    var element = manager.element;\n    if (!element.style) {\n      return;\n    }\n    var prop;\n    each(manager.options.cssProps, function (value, name) {\n      prop = prefixed(element.style, name);\n      if (add) {\n        manager.oldCssProps[prop] = element.style[prop];\n        element.style[prop] = value;\n      } else {\n        element.style[prop] = manager.oldCssProps[prop] || \"\";\n      }\n    });\n    if (!add) {\n      manager.oldCssProps = {};\n    }\n  }\n  /**\n   * @private\n   * trigger dom event\n   * @param {String} event\n   * @param {Object} data\n   */\n\n  function triggerDomEvent(event, data) {\n    var gestureEvent = document.createEvent(\"Event\");\n    gestureEvent.initEvent(event, true, true);\n    gestureEvent.gesture = data;\n    data.target.dispatchEvent(gestureEvent);\n  }\n  /**\n  * @private\n   * Manager\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n\n  var Manager = /*#__PURE__*/\n  function () {\n    function Manager(element, options) {\n      var _this = this;\n      this.options = assign$1({}, defaults, options || {});\n      this.options.inputTarget = this.options.inputTarget || element;\n      this.handlers = {};\n      this.session = {};\n      this.recognizers = [];\n      this.oldCssProps = {};\n      this.element = element;\n      this.input = createInputInstance(this);\n      this.touchAction = new TouchAction(this, this.options.touchAction);\n      toggleCssProps(this, true);\n      each(this.options.recognizers, function (item) {\n        var recognizer = _this.add(new item[0](item[1]));\n        item[2] && recognizer.recognizeWith(item[2]);\n        item[3] && recognizer.requireFailure(item[3]);\n      }, this);\n    }\n    /**\n     * @private\n     * set options\n     * @param {Object} options\n     * @returns {Manager}\n     */\n\n    var _proto = Manager.prototype;\n    _proto.set = function set(options) {\n      assign$1(this.options, options); // Options that need a little more setup\n\n      if (options.touchAction) {\n        this.touchAction.update();\n      }\n      if (options.inputTarget) {\n        // Clean up existing event listeners and reinitialize\n        this.input.destroy();\n        this.input.target = options.inputTarget;\n        this.input.init();\n      }\n      return this;\n    };\n    /**\n     * @private\n     * stop recognizing for this session.\n     * This session will be discarded, when a new [input]start event is fired.\n     * When forced, the recognizer cycle is stopped immediately.\n     * @param {Boolean} [force]\n     */\n\n    _proto.stop = function stop(force) {\n      this.session.stopped = force ? FORCED_STOP : STOP;\n    };\n    /**\n     * @private\n     * run the recognizers!\n     * called by the inputHandler function on every movement of the pointers (touches)\n     * it walks through all the recognizers and tries to detect the gesture that is being made\n     * @param {Object} inputData\n     */\n\n    _proto.recognize = function recognize(inputData) {\n      var session = this.session;\n      if (session.stopped) {\n        return;\n      } // run the touch-action polyfill\n\n      this.touchAction.preventDefaults(inputData);\n      var recognizer;\n      var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n      // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n      // if no recognizer is detecting a thing, it is set to `null`\n\n      var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n      // or when we're in a new session\n\n      if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n        session.curRecognizer = null;\n        curRecognizer = null;\n      }\n      var i = 0;\n      while (i < recognizers.length) {\n        recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n        // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n        // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n        //      that is being recognized.\n        // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n        //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n        if (session.stopped !== FORCED_STOP && (\n        // 1\n        !curRecognizer || recognizer === curRecognizer ||\n        // 2\n        recognizer.canRecognizeWith(curRecognizer))) {\n          // 3\n          recognizer.recognize(inputData);\n        } else {\n          recognizer.reset();\n        } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n        // current active recognizer. but only if we don't already have an active recognizer\n\n        if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n          session.curRecognizer = recognizer;\n          curRecognizer = recognizer;\n        }\n        i++;\n      }\n    };\n    /**\n     * @private\n     * get a recognizer by its event name.\n     * @param {Recognizer|String} recognizer\n     * @returns {Recognizer|Null}\n     */\n\n    _proto.get = function get(recognizer) {\n      if (recognizer instanceof Recognizer) {\n        return recognizer;\n      }\n      var recognizers = this.recognizers;\n      for (var i = 0; i < recognizers.length; i++) {\n        if (recognizers[i].options.event === recognizer) {\n          return recognizers[i];\n        }\n      }\n      return null;\n    };\n    /**\n     * @private add a recognizer to the manager\n     * existing recognizers with the same event name will be removed\n     * @param {Recognizer} recognizer\n     * @returns {Recognizer|Manager}\n     */\n\n    _proto.add = function add(recognizer) {\n      if (invokeArrayArg(recognizer, \"add\", this)) {\n        return this;\n      } // remove existing\n\n      var existing = this.get(recognizer.options.event);\n      if (existing) {\n        this.remove(existing);\n      }\n      this.recognizers.push(recognizer);\n      recognizer.manager = this;\n      this.touchAction.update();\n      return recognizer;\n    };\n    /**\n     * @private\n     * remove a recognizer by name or instance\n     * @param {Recognizer|String} recognizer\n     * @returns {Manager}\n     */\n\n    _proto.remove = function remove(recognizer) {\n      if (invokeArrayArg(recognizer, \"remove\", this)) {\n        return this;\n      }\n      var targetRecognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n      if (recognizer) {\n        var recognizers = this.recognizers;\n        var index = inArray(recognizers, targetRecognizer);\n        if (index !== -1) {\n          recognizers.splice(index, 1);\n          this.touchAction.update();\n        }\n      }\n      return this;\n    };\n    /**\n     * @private\n     * bind event\n     * @param {String} events\n     * @param {Function} handler\n     * @returns {EventEmitter} this\n     */\n\n    _proto.on = function on(events, handler) {\n      if (events === undefined || handler === undefined) {\n        return this;\n      }\n      var handlers = this.handlers;\n      each(splitStr(events), function (event) {\n        handlers[event] = handlers[event] || [];\n        handlers[event].push(handler);\n      });\n      return this;\n    };\n    /**\n     * @private unbind event, leave emit blank to remove all handlers\n     * @param {String} events\n     * @param {Function} [handler]\n     * @returns {EventEmitter} this\n     */\n\n    _proto.off = function off(events, handler) {\n      if (events === undefined) {\n        return this;\n      }\n      var handlers = this.handlers;\n      each(splitStr(events), function (event) {\n        if (!handler) {\n          delete handlers[event];\n        } else {\n          handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n        }\n      });\n      return this;\n    };\n    /**\n     * @private emit event to the listeners\n     * @param {String} event\n     * @param {Object} data\n     */\n\n    _proto.emit = function emit(event, data) {\n      // we also want to trigger dom events\n      if (this.options.domEvents) {\n        triggerDomEvent(event, data);\n      } // no handlers, so skip it all\n\n      var handlers = this.handlers[event] && this.handlers[event].slice();\n      if (!handlers || !handlers.length) {\n        return;\n      }\n      data.type = event;\n      data.preventDefault = function () {\n        data.srcEvent.preventDefault();\n      };\n      var i = 0;\n      while (i < handlers.length) {\n        handlers[i](data);\n        i++;\n      }\n    };\n    /**\n     * @private\n     * destroy the manager and unbinds all events\n     * it doesn't unbind dom events, that is the user own responsibility\n     */\n\n    _proto.destroy = function destroy() {\n      this.element && toggleCssProps(this, false);\n      this.handlers = {};\n      this.session = {};\n      this.input.destroy();\n      this.element = null;\n    };\n    return Manager;\n  }();\n  var SINGLE_TOUCH_INPUT_MAP = {\n    touchstart: INPUT_START,\n    touchmove: INPUT_MOVE,\n    touchend: INPUT_END,\n    touchcancel: INPUT_CANCEL\n  };\n  var SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\n  var SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n  /**\n   * @private\n   * Touch events input\n   * @constructor\n   * @extends Input\n   */\n\n  var SingleTouchInput = /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(SingleTouchInput, _Input);\n    function SingleTouchInput() {\n      var _this;\n      var proto = SingleTouchInput.prototype;\n      proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n      proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n      _this = _Input.apply(this, arguments) || this;\n      _this.started = false;\n      return _this;\n    }\n    var _proto = SingleTouchInput.prototype;\n    _proto.handler = function handler(ev) {\n      var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n      if (type === INPUT_START) {\n        this.started = true;\n      }\n      if (!this.started) {\n        return;\n      }\n      var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n      if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n        this.started = false;\n      }\n      this.callback(this.manager, type, {\n        pointers: touches[0],\n        changedPointers: touches[1],\n        pointerType: INPUT_TYPE_TOUCH,\n        srcEvent: ev\n      });\n    };\n    return SingleTouchInput;\n  }(Input);\n  function normalizeSingleTouches(ev, type) {\n    var all = toArray(ev.touches);\n    var changed = toArray(ev.changedTouches);\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      all = uniqueArray(all.concat(changed), 'identifier', true);\n    }\n    return [all, changed];\n  }\n\n  /**\n   * @private\n   * wrap a method with a deprecation warning and stack trace\n   * @param {Function} method\n   * @param {String} name\n   * @param {String} message\n   * @returns {Function} A new function wrapping the supplied method.\n   */\n  function deprecate(method, name, message) {\n    var deprecationMessage = \"DEPRECATED METHOD: \" + name + \"\\n\" + message + \" AT \\n\";\n    return function () {\n      var e = new Error('get-stack-trace');\n      var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n      var log = window.console && (window.console.warn || window.console.log);\n      if (log) {\n        log.call(window.console, deprecationMessage, stack);\n      }\n      return method.apply(this, arguments);\n    };\n  }\n\n  /**\n   * @private\n   * extend object.\n   * means that properties in dest will be overwritten by the ones in src.\n   * @param {Object} dest\n   * @param {Object} src\n   * @param {Boolean} [merge=false]\n   * @returns {Object} dest\n   */\n\n  var extend = deprecate(function (dest, src, merge) {\n    var keys = Object.keys(src);\n    var i = 0;\n    while (i < keys.length) {\n      if (!merge || merge && dest[keys[i]] === undefined) {\n        dest[keys[i]] = src[keys[i]];\n      }\n      i++;\n    }\n    return dest;\n  }, 'extend', 'Use `assign`.');\n\n  /**\n   * @private\n   * merge the values from src in the dest.\n   * means that properties that exist in dest will not be overwritten by src\n   * @param {Object} dest\n   * @param {Object} src\n   * @returns {Object} dest\n   */\n\n  var merge$1 = deprecate(function (dest, src) {\n    return extend(dest, src, true);\n  }, 'merge', 'Use `assign`.');\n\n  /**\n   * @private\n   * simple class inheritance\n   * @param {Function} child\n   * @param {Function} base\n   * @param {Object} [properties]\n   */\n\n  function inherit(child, base, properties) {\n    var baseP = base.prototype;\n    var childP;\n    childP = child.prototype = Object.create(baseP);\n    childP.constructor = child;\n    childP._super = baseP;\n    if (properties) {\n      assign$1(childP, properties);\n    }\n  }\n\n  /**\n   * @private\n   * simple function bind\n   * @param {Function} fn\n   * @param {Object} context\n   * @returns {Function}\n   */\n  function bindFn(fn, context) {\n    return function boundFn() {\n      return fn.apply(context, arguments);\n    };\n  }\n\n  /**\n   * @private\n   * Simple way to create a manager with a default set of recognizers.\n   * @param {HTMLElement} element\n   * @param {Object} [options]\n   * @constructor\n   */\n\n  var Hammer = /*#__PURE__*/\n  function () {\n    var Hammer =\n    /**\n      * @private\n      * @const {string}\n      */\n    function Hammer(element, options) {\n      if (options === void 0) {\n        options = {};\n      }\n      return new Manager(element, _extends({\n        recognizers: preset.concat()\n      }, options));\n    };\n    Hammer.VERSION = \"2.0.17-rc\";\n    Hammer.DIRECTION_ALL = DIRECTION_ALL;\n    Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n    Hammer.DIRECTION_LEFT = DIRECTION_LEFT;\n    Hammer.DIRECTION_RIGHT = DIRECTION_RIGHT;\n    Hammer.DIRECTION_UP = DIRECTION_UP;\n    Hammer.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n    Hammer.DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n    Hammer.DIRECTION_NONE = DIRECTION_NONE;\n    Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n    Hammer.INPUT_START = INPUT_START;\n    Hammer.INPUT_MOVE = INPUT_MOVE;\n    Hammer.INPUT_END = INPUT_END;\n    Hammer.INPUT_CANCEL = INPUT_CANCEL;\n    Hammer.STATE_POSSIBLE = STATE_POSSIBLE;\n    Hammer.STATE_BEGAN = STATE_BEGAN;\n    Hammer.STATE_CHANGED = STATE_CHANGED;\n    Hammer.STATE_ENDED = STATE_ENDED;\n    Hammer.STATE_RECOGNIZED = STATE_RECOGNIZED;\n    Hammer.STATE_CANCELLED = STATE_CANCELLED;\n    Hammer.STATE_FAILED = STATE_FAILED;\n    Hammer.Manager = Manager;\n    Hammer.Input = Input;\n    Hammer.TouchAction = TouchAction;\n    Hammer.TouchInput = TouchInput;\n    Hammer.MouseInput = MouseInput;\n    Hammer.PointerEventInput = PointerEventInput;\n    Hammer.TouchMouseInput = TouchMouseInput;\n    Hammer.SingleTouchInput = SingleTouchInput;\n    Hammer.Recognizer = Recognizer;\n    Hammer.AttrRecognizer = AttrRecognizer;\n    Hammer.Tap = TapRecognizer;\n    Hammer.Pan = PanRecognizer;\n    Hammer.Swipe = SwipeRecognizer;\n    Hammer.Pinch = PinchRecognizer;\n    Hammer.Rotate = RotateRecognizer;\n    Hammer.Press = PressRecognizer;\n    Hammer.on = addEventListeners;\n    Hammer.off = removeEventListeners;\n    Hammer.each = each;\n    Hammer.merge = merge$1;\n    Hammer.extend = extend;\n    Hammer.bindFn = bindFn;\n    Hammer.assign = assign$1;\n    Hammer.inherit = inherit;\n    Hammer.bindFn = bindFn;\n    Hammer.prefixed = prefixed;\n    Hammer.toArray = toArray;\n    Hammer.inArray = inArray;\n    Hammer.uniqueArray = uniqueArray;\n    Hammer.splitStr = splitStr;\n    Hammer.boolOrFn = boolOrFn;\n    Hammer.hasParent = hasParent;\n    Hammer.addEventListeners = addEventListeners;\n    Hammer.removeEventListeners = removeEventListeners;\n    Hammer.defaults = assign$1({}, defaults, {\n      preset: preset\n    });\n    return Hammer;\n  }();\n  var RealHammer = Hammer;\n  function _createForOfIteratorHelper$3(o, allowArrayLike) {\n    var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n    if (!it) {\n      if (_Array$isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e) {\n            throw _e;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = it.call(o);\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e2) {\n        didErr = true;\n        err = _e2;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray$3(o, minLen) {\n    var _context15;\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen);\n    var n = _sliceInstanceProperty(_context15 = Object.prototype.toString.call(o)).call(_context15, 8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return _Array$from$1(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen);\n  }\n  function _arrayLikeToArray$3(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n\n  /**\r\n   * Use this symbol to delete properies in deepObjectAssign.\r\n   */\n  var DELETE = _Symbol(\"DELETE\");\n  /**\r\n   * Pure version of deepObjectAssign, it doesn't modify any of it's arguments.\r\n   *\r\n   * @param base - The base object that fullfils the whole interface T.\r\n   * @param updates - Updates that may change or delete props.\r\n   * @returns A brand new instance with all the supplied objects deeply merged.\r\n   */\n  function pureDeepObjectAssign(base) {\n    var _context;\n    for (var _len = arguments.length, updates = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      updates[_key - 1] = arguments[_key];\n    }\n    return deepObjectAssign.apply(void 0, _concatInstanceProperty(_context = [{}, base]).call(_context, updates));\n  }\n  /**\r\n   * Deep version of object assign with additional deleting by the DELETE symbol.\r\n   *\r\n   * @param values - Objects to be deeply merged.\r\n   * @returns The first object from values.\r\n   */\n  function deepObjectAssign() {\n    var merged = deepObjectAssignNonentry.apply(void 0, arguments);\n    stripDelete(merged);\n    return merged;\n  }\n  /**\r\n   * Deep version of object assign with additional deleting by the DELETE symbol.\r\n   *\r\n   * @remarks\r\n   * This doesn't strip the DELETE symbols so they may end up in the final object.\r\n   * @param values - Objects to be deeply merged.\r\n   * @returns The first object from values.\r\n   */\n  function deepObjectAssignNonentry() {\n    for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      values[_key2] = arguments[_key2];\n    }\n    if (values.length < 2) {\n      return values[0];\n    } else if (values.length > 2) {\n      var _context2;\n      return deepObjectAssignNonentry.apply(void 0, _concatInstanceProperty(_context2 = [deepObjectAssign(values[0], values[1])]).call(_context2, _toConsumableArray(_sliceInstanceProperty(values).call(values, 2))));\n    }\n    var a = values[0];\n    var b = values[1];\n    if (a instanceof Date && b instanceof Date) {\n      a.setTime(b.getTime());\n      return a;\n    }\n    var _iterator = _createForOfIteratorHelper$3(_Reflect$ownKeys(b)),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var prop = _step.value;\n        if (!Object.prototype.propertyIsEnumerable.call(b, prop)) ;else if (b[prop] === DELETE) {\n          delete a[prop];\n        } else if (a[prop] !== null && b[prop] !== null && typeof a[prop] === \"object\" && typeof b[prop] === \"object\" && !_Array$isArray(a[prop]) && !_Array$isArray(b[prop])) {\n          a[prop] = deepObjectAssignNonentry(a[prop], b[prop]);\n        } else {\n          a[prop] = clone(b[prop]);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    return a;\n  }\n  /**\r\n   * Deep clone given object or array. In case of primitive simply return.\r\n   *\r\n   * @param a - Anything.\r\n   * @returns Deep cloned object/array or unchanged a.\r\n   */\n  function clone(a) {\n    if (_Array$isArray(a)) {\n      return _mapInstanceProperty(a).call(a, function (value) {\n        return clone(value);\n      });\n    } else if (typeof a === \"object\" && a !== null) {\n      if (a instanceof Date) {\n        return new Date(a.getTime());\n      }\n      return deepObjectAssignNonentry({}, a);\n    } else {\n      return a;\n    }\n  }\n  /**\r\n   * Strip DELETE from given object.\r\n   *\r\n   * @param a - Object which may contain DELETE but won't after this is executed.\r\n   */\n  function stripDelete(a) {\n    for (var _i = 0, _Object$keys$1 = _Object$keys(a); _i < _Object$keys$1.length; _i++) {\n      var prop = _Object$keys$1[_i];\n      if (a[prop] === DELETE) {\n        delete a[prop];\n      } else if (typeof a[prop] === \"object\" && a[prop] !== null) {\n        stripDelete(a[prop]);\n      }\n    }\n  }\n\n  /**\n   * Setup a mock hammer.js object, for unit testing.\n   *\n   * Inspiration: https://github.com/uber/deck.gl/pull/658\n   *\n   * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}\n   */\n  function hammerMock() {\n    var noop = function noop() {};\n    return {\n      on: noop,\n      off: noop,\n      destroy: noop,\n      emit: noop,\n      get() {\n        return {\n          set: noop\n        };\n      }\n    };\n  }\n  var Hammer$1 = typeof window !== \"undefined\" ? window.Hammer || RealHammer : function () {\n    // hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.\n    return hammerMock();\n  };\n\n  /**\n   * Turn an element into an clickToUse element.\n   * When not active, the element has a transparent overlay. When the overlay is\n   * clicked, the mode is changed to active.\n   * When active, the element is displayed with a blue border around it, and\n   * the interactive contents of the element can be used. When clicked outside\n   * the element, the elements mode is changed to inactive.\n   *\n   * @param {Element} container\n   * @class Activator\n   */\n  function Activator$1(container) {\n    var _this = this,\n      _context3;\n    this._cleanupQueue = [];\n    this.active = false;\n    this._dom = {\n      container,\n      overlay: document.createElement(\"div\")\n    };\n    this._dom.overlay.classList.add(\"vis-overlay\");\n    this._dom.container.appendChild(this._dom.overlay);\n    this._cleanupQueue.push(function () {\n      _this._dom.overlay.parentNode.removeChild(_this._dom.overlay);\n    });\n    var hammer = Hammer$1(this._dom.overlay);\n    hammer.on(\"tap\", _bindInstanceProperty$1(_context3 = this._onTapOverlay).call(_context3, this));\n    this._cleanupQueue.push(function () {\n      hammer.destroy();\n      // FIXME: cleaning up hammer instances doesn't work (Timeline not removed\n      // from memory)\n    });\n\n    // block all touch events (except tap)\n    var events = [\"tap\", \"doubletap\", \"press\", \"pinch\", \"pan\", \"panstart\", \"panmove\", \"panend\"];\n    _forEachInstanceProperty(events).call(events, function (event) {\n      hammer.on(event, function (event) {\n        event.srcEvent.stopPropagation();\n      });\n    });\n\n    // attach a click event to the window, in order to deactivate when clicking outside the timeline\n    if (document && document.body) {\n      this._onClick = function (event) {\n        if (!_hasParent(event.target, container)) {\n          _this.deactivate();\n        }\n      };\n      document.body.addEventListener(\"click\", this._onClick);\n      this._cleanupQueue.push(function () {\n        document.body.removeEventListener(\"click\", _this._onClick);\n      });\n    }\n\n    // prepare escape key listener for deactivating when active\n    this._escListener = function (event) {\n      if (\"key\" in event ? event.key === \"Escape\" : event.keyCode === 27 /* the keyCode is for IE11 */) {\n        _this.deactivate();\n      }\n    };\n  }\n\n  // turn into an event emitter\n  Emitter(Activator$1.prototype);\n\n  // The currently active activator\n  Activator$1.current = null;\n\n  /**\n   * Destroy the activator. Cleans up all created DOM and event listeners\n   */\n  Activator$1.prototype.destroy = function () {\n    var _context4, _context5;\n    this.deactivate();\n    var _iterator2 = _createForOfIteratorHelper$3(_reverseInstanceProperty(_context4 = _spliceInstanceProperty(_context5 = this._cleanupQueue).call(_context5, 0)).call(_context4)),\n      _step2;\n    try {\n      for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n        var callback = _step2.value;\n        callback();\n      }\n    } catch (err) {\n      _iterator2.e(err);\n    } finally {\n      _iterator2.f();\n    }\n  };\n\n  /**\n   * Activate the element\n   * Overlay is hidden, element is decorated with a blue shadow border\n   */\n  Activator$1.prototype.activate = function () {\n    // we allow only one active activator at a time\n    if (Activator$1.current) {\n      Activator$1.current.deactivate();\n    }\n    Activator$1.current = this;\n    this.active = true;\n    this._dom.overlay.style.display = \"none\";\n    this._dom.container.classList.add(\"vis-active\");\n    this.emit(\"change\");\n    this.emit(\"activate\");\n\n    // ugly hack: bind ESC after emitting the events, as the Network rebinds all\n    // keyboard events on a 'change' event\n    document.body.addEventListener(\"keydown\", this._escListener);\n  };\n\n  /**\n   * Deactivate the element\n   * Overlay is displayed on top of the element\n   */\n  Activator$1.prototype.deactivate = function () {\n    this.active = false;\n    this._dom.overlay.style.display = \"block\";\n    this._dom.container.classList.remove(\"vis-active\");\n    document.body.removeEventListener(\"keydown\", this._escListener);\n    this.emit(\"change\");\n    this.emit(\"deactivate\");\n  };\n\n  /**\n   * Handle a tap event: activate the container\n   *\n   * @param {Event}  event   The event\n   * @private\n   */\n  Activator$1.prototype._onTapOverlay = function (event) {\n    // activate the container\n    this.activate();\n    event.srcEvent.stopPropagation();\n  };\n\n  /**\n   * Test whether the element has the requested parent element somewhere in\n   * its chain of parent nodes.\n   *\n   * @param {HTMLElement} element\n   * @param {HTMLElement} parent\n   * @returns {boolean} Returns true when the parent is found somewhere in the\n   *                    chain of parent nodes.\n   * @private\n   */\n  function _hasParent(element, parent) {\n    while (element) {\n      if (element === parent) {\n        return true;\n      }\n      element = element.parentNode;\n    }\n    return false;\n  }\n  var isConstructor = isConstructor$4;\n  var tryToString$1 = tryToString$6;\n  var $TypeError$3 = TypeError;\n\n  // `Assert: IsConstructor(argument) is true`\n  var aConstructor$2 = function (argument) {\n    if (isConstructor(argument)) return argument;\n    throw new $TypeError$3(tryToString$1(argument) + ' is not a constructor');\n  };\n  var $$k = _export;\n  var getBuiltIn$4 = getBuiltIn$f;\n  var apply$1 = functionApply;\n  var bind$8 = functionBind;\n  var aConstructor$1 = aConstructor$2;\n  var anObject$3 = anObject$d;\n  var isObject$6 = isObject$h;\n  var create$5 = objectCreate;\n  var fails$9 = fails$u;\n  var nativeConstruct = getBuiltIn$4('Reflect', 'construct');\n  var ObjectPrototype = Object.prototype;\n  var push$2 = [].push;\n\n  // `Reflect.construct` method\n  // https://tc39.es/ecma262/#sec-reflect.construct\n  // MS Edge supports only 2 arguments and argumentsList argument is optional\n  // FF Nightly sets third argument as `new.target`, but does not create `this` from it\n  var NEW_TARGET_BUG = fails$9(function () {\n    function F() {/* empty */}\n    return !(nativeConstruct(function () {/* empty */}, [], F) instanceof F);\n  });\n  var ARGS_BUG = !fails$9(function () {\n    nativeConstruct(function () {/* empty */});\n  });\n  var FORCED$2 = NEW_TARGET_BUG || ARGS_BUG;\n  $$k({\n    target: 'Reflect',\n    stat: true,\n    forced: FORCED$2,\n    sham: FORCED$2\n  }, {\n    construct: function construct(Target, args /* , newTarget */) {\n      aConstructor$1(Target);\n      anObject$3(args);\n      var newTarget = arguments.length < 3 ? Target : aConstructor$1(arguments[2]);\n      if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n      if (Target === newTarget) {\n        // w/o altered newTarget, optimization for 0-4 arguments\n        switch (args.length) {\n          case 0:\n            return new Target();\n          case 1:\n            return new Target(args[0]);\n          case 2:\n            return new Target(args[0], args[1]);\n          case 3:\n            return new Target(args[0], args[1], args[2]);\n          case 4:\n            return new Target(args[0], args[1], args[2], args[3]);\n        }\n        // w/o altered newTarget, lot of arguments case\n        var $args = [null];\n        apply$1(push$2, $args, args);\n        return new (apply$1(bind$8, Target, $args))();\n      }\n      // with altered newTarget, not support built-in constructors\n      var proto = newTarget.prototype;\n      var instance = create$5(isObject$6(proto) ? proto : ObjectPrototype);\n      var result = apply$1(Target, instance, args);\n      return isObject$6(result) ? result : instance;\n    }\n  });\n  var path$8 = path$o;\n  var construct$2 = path$8.Reflect.construct;\n  var parent$u = construct$2;\n  var construct$1 = parent$u;\n  var construct = construct$1;\n  var _Reflect$construct = /*@__PURE__*/getDefaultExportFromCjs(construct);\n  var path$7 = path$o;\n  var getOwnPropertySymbols$2 = path$7.Object.getOwnPropertySymbols;\n  var parent$t = getOwnPropertySymbols$2;\n  var getOwnPropertySymbols$1 = parent$t;\n  var getOwnPropertySymbols = getOwnPropertySymbols$1;\n  var _Object$getOwnPropertySymbols = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertySymbols);\n  var getOwnPropertyDescriptor$4 = {\n    exports: {}\n  };\n  var $$j = _export;\n  var fails$8 = fails$u;\n  var toIndexedObject$1 = toIndexedObject$a;\n  var nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\n  var DESCRIPTORS$5 = descriptors;\n  var FORCED$1 = !DESCRIPTORS$5 || fails$8(function () {\n    nativeGetOwnPropertyDescriptor(1);\n  });\n\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n  $$j({\n    target: 'Object',\n    stat: true,\n    forced: FORCED$1,\n    sham: !DESCRIPTORS$5\n  }, {\n    getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n      return nativeGetOwnPropertyDescriptor(toIndexedObject$1(it), key);\n    }\n  });\n  var path$6 = path$o;\n  var Object$2 = path$6.Object;\n  var getOwnPropertyDescriptor$3 = getOwnPropertyDescriptor$4.exports = function getOwnPropertyDescriptor(it, key) {\n    return Object$2.getOwnPropertyDescriptor(it, key);\n  };\n  if (Object$2.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor$3.sham = true;\n  var getOwnPropertyDescriptorExports = getOwnPropertyDescriptor$4.exports;\n  var parent$s = getOwnPropertyDescriptorExports;\n  var getOwnPropertyDescriptor$2 = parent$s;\n  var getOwnPropertyDescriptor$1 = getOwnPropertyDescriptor$2;\n  var _Object$getOwnPropertyDescriptor = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptor$1);\n  var $$i = _export;\n  var DESCRIPTORS$4 = descriptors;\n  var ownKeys$2 = ownKeys$7;\n  var toIndexedObject = toIndexedObject$a;\n  var getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;\n  var createProperty = createProperty$6;\n\n  // `Object.getOwnPropertyDescriptors` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  $$i({\n    target: 'Object',\n    stat: true,\n    sham: !DESCRIPTORS$4\n  }, {\n    getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n      var O = toIndexedObject(object);\n      var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$1.f;\n      var keys = ownKeys$2(O);\n      var result = {};\n      var index = 0;\n      var key, descriptor;\n      while (keys.length > index) {\n        descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n        if (descriptor !== undefined) createProperty(result, key, descriptor);\n      }\n      return result;\n    }\n  });\n  var path$5 = path$o;\n  var getOwnPropertyDescriptors$2 = path$5.Object.getOwnPropertyDescriptors;\n  var parent$r = getOwnPropertyDescriptors$2;\n  var getOwnPropertyDescriptors$1 = parent$r;\n  var getOwnPropertyDescriptors = getOwnPropertyDescriptors$1;\n  var _Object$getOwnPropertyDescriptors = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptors);\n  var defineProperties$4 = {\n    exports: {}\n  };\n  var $$h = _export;\n  var DESCRIPTORS$3 = descriptors;\n  var defineProperties$3 = objectDefineProperties.f;\n\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  // eslint-disable-next-line es/no-object-defineproperties -- safe\n  $$h({\n    target: 'Object',\n    stat: true,\n    forced: Object.defineProperties !== defineProperties$3,\n    sham: !DESCRIPTORS$3\n  }, {\n    defineProperties: defineProperties$3\n  });\n  var path$4 = path$o;\n  var Object$1 = path$4.Object;\n  var defineProperties$2 = defineProperties$4.exports = function defineProperties(T, D) {\n    return Object$1.defineProperties(T, D);\n  };\n  if (Object$1.defineProperties.sham) defineProperties$2.sham = true;\n  var definePropertiesExports = defineProperties$4.exports;\n  var parent$q = definePropertiesExports;\n  var defineProperties$1 = parent$q;\n  var defineProperties = defineProperties$1;\n  var _Object$defineProperties = /*@__PURE__*/getDefaultExportFromCjs(defineProperties);\n  var defineProperty$2 = defineProperty$b;\n  var _Object$defineProperty = /*@__PURE__*/getDefaultExportFromCjs(defineProperty$2);\n  function _assertThisInitialized(self) {\n    if (self === void 0) {\n      throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n    }\n    return self;\n  }\n  var parent$p = create$7;\n  var create$4 = parent$p;\n  var parent$o = create$4;\n  var create$3 = parent$o;\n  var create$2 = create$3;\n  var _Object$create = /*@__PURE__*/getDefaultExportFromCjs(create$2);\n  var $$g = _export;\n  var setPrototypeOf$6 = objectSetPrototypeOf;\n\n  // `Object.setPrototypeOf` method\n  // https://tc39.es/ecma262/#sec-object.setprototypeof\n  $$g({\n    target: 'Object',\n    stat: true\n  }, {\n    setPrototypeOf: setPrototypeOf$6\n  });\n  var path$3 = path$o;\n  var setPrototypeOf$5 = path$3.Object.setPrototypeOf;\n  var parent$n = setPrototypeOf$5;\n  var setPrototypeOf$4 = parent$n;\n  var parent$m = setPrototypeOf$4;\n  var setPrototypeOf$3 = parent$m;\n  var parent$l = setPrototypeOf$3;\n  var setPrototypeOf$2 = parent$l;\n  var setPrototypeOf$1 = setPrototypeOf$2;\n  var _Object$setPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(setPrototypeOf$1);\n  var parent$k = bind$c;\n  var bind$7 = parent$k;\n  var parent$j = bind$7;\n  var bind$6 = parent$j;\n  var bind$5 = bind$6;\n  var _bindInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(bind$5);\n  function _setPrototypeOf(o, p) {\n    var _context;\n    _setPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$setPrototypeOf).call(_context) : function _setPrototypeOf(o, p) {\n      o.__proto__ = p;\n      return o;\n    };\n    return _setPrototypeOf(o, p);\n  }\n  function _inherits(subClass, superClass) {\n    if (typeof superClass !== \"function\" && superClass !== null) {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    subClass.prototype = _Object$create(superClass && superClass.prototype, {\n      constructor: {\n        value: subClass,\n        writable: true,\n        configurable: true\n      }\n    });\n    _Object$defineProperty$1(subClass, \"prototype\", {\n      writable: false\n    });\n    if (superClass) _setPrototypeOf(subClass, superClass);\n  }\n  function _possibleConstructorReturn(self, call) {\n    if (call && (_typeof$1(call) === \"object\" || typeof call === \"function\")) {\n      return call;\n    } else if (call !== void 0) {\n      throw new TypeError(\"Derived constructors may only return object or undefined\");\n    }\n    return _assertThisInitialized(self);\n  }\n  var parent$i = getPrototypeOf$4;\n  var getPrototypeOf$3 = parent$i;\n  var parent$h = getPrototypeOf$3;\n  var getPrototypeOf$2 = parent$h;\n  var getPrototypeOf$1 = getPrototypeOf$2;\n  var _Object$getPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(getPrototypeOf$1);\n  function _getPrototypeOf(o) {\n    var _context;\n    _getPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$getPrototypeOf).call(_context) : function _getPrototypeOf(o) {\n      return o.__proto__ || _Object$getPrototypeOf(o);\n    };\n    return _getPrototypeOf(o);\n  }\n  var regeneratorRuntime$1 = {\n    exports: {}\n  };\n  var _typeof = {\n    exports: {}\n  };\n  (function (module) {\n    var _Symbol = symbol$1;\n    var _Symbol$iterator = iterator$1;\n    function _typeof(o) {\n      \"@babel/helpers - typeof\";\n\n      return module.exports = _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (o) {\n        return typeof o;\n      } : function (o) {\n        return o && \"function\" == typeof _Symbol && o.constructor === _Symbol && o !== _Symbol.prototype ? \"symbol\" : typeof o;\n      }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n    }\n    module.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  })(_typeof);\n  var _typeofExports = _typeof.exports;\n  var parent$g = forEach$5;\n  var forEach$3 = parent$g;\n  var parent$f = forEach$3;\n  var forEach$2 = parent$f;\n  var forEach$1 = forEach$2;\n  var hasOwn$5 = hasOwnProperty_1;\n  var ownKeys$1 = ownKeys$7;\n  var getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;\n  var definePropertyModule = objectDefineProperty;\n  var copyConstructorProperties$1 = function (target, source, exceptions) {\n    var keys = ownKeys$1(source);\n    var defineProperty = definePropertyModule.f;\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      if (!hasOwn$5(target, key) && !(exceptions && hasOwn$5(exceptions, key))) {\n        defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n      }\n    }\n  };\n  var isObject$5 = isObject$h;\n  var createNonEnumerableProperty$3 = createNonEnumerableProperty$9;\n\n  // `InstallErrorCause` abstract operation\n  // https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\n  var installErrorCause$1 = function (O, options) {\n    if (isObject$5(options) && 'cause' in options) {\n      createNonEnumerableProperty$3(O, 'cause', options.cause);\n    }\n  };\n  var uncurryThis$2 = functionUncurryThis;\n  var $Error$1 = Error;\n  var replace = uncurryThis$2(''.replace);\n  var TEST = function (arg) {\n    return String(new $Error$1(arg).stack);\n  }('zxcasd');\n  // eslint-disable-next-line redos/no-vulnerable -- safe\n  var V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\n  var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n  var errorStackClear = function (stack, dropEntries) {\n    if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error$1.prepareStackTrace) {\n      while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n    }\n    return stack;\n  };\n  var fails$7 = fails$u;\n  var createPropertyDescriptor$1 = createPropertyDescriptor$7;\n  var errorStackInstallable = !fails$7(function () {\n    var error = new Error('a');\n    if (!('stack' in error)) return true;\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty(error, 'stack', createPropertyDescriptor$1(1, 7));\n    return error.stack !== 7;\n  });\n  var createNonEnumerableProperty$2 = createNonEnumerableProperty$9;\n  var clearErrorStack = errorStackClear;\n  var ERROR_STACK_INSTALLABLE = errorStackInstallable;\n\n  // non-standard V8\n  var captureStackTrace = Error.captureStackTrace;\n  var errorStackInstall = function (error, C, stack, dropEntries) {\n    if (ERROR_STACK_INSTALLABLE) {\n      if (captureStackTrace) captureStackTrace(error, C);else createNonEnumerableProperty$2(error, 'stack', clearErrorStack(stack, dropEntries));\n    }\n  };\n  var bind$4 = functionBindContext;\n  var call$6 = functionCall;\n  var anObject$2 = anObject$d;\n  var tryToString = tryToString$6;\n  var isArrayIteratorMethod = isArrayIteratorMethod$2;\n  var lengthOfArrayLike$1 = lengthOfArrayLike$d;\n  var isPrototypeOf$7 = objectIsPrototypeOf;\n  var getIterator$6 = getIterator$8;\n  var getIteratorMethod = getIteratorMethod$9;\n  var iteratorClose = iteratorClose$2;\n  var $TypeError$2 = TypeError;\n  var Result = function (stopped, result) {\n    this.stopped = stopped;\n    this.result = result;\n  };\n  var ResultPrototype = Result.prototype;\n  var iterate$7 = function (iterable, unboundFunction, options) {\n    var that = options && options.that;\n    var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n    var IS_RECORD = !!(options && options.IS_RECORD);\n    var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n    var INTERRUPTED = !!(options && options.INTERRUPTED);\n    var fn = bind$4(unboundFunction, that);\n    var iterator, iterFn, index, length, result, next, step;\n    var stop = function (condition) {\n      if (iterator) iteratorClose(iterator, 'normal', condition);\n      return new Result(true, condition);\n    };\n    var callFn = function (value) {\n      if (AS_ENTRIES) {\n        anObject$2(value);\n        return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n      }\n      return INTERRUPTED ? fn(value, stop) : fn(value);\n    };\n    if (IS_RECORD) {\n      iterator = iterable.iterator;\n    } else if (IS_ITERATOR) {\n      iterator = iterable;\n    } else {\n      iterFn = getIteratorMethod(iterable);\n      if (!iterFn) throw new $TypeError$2(tryToString(iterable) + ' is not iterable');\n      // optimisation for array iterators\n      if (isArrayIteratorMethod(iterFn)) {\n        for (index = 0, length = lengthOfArrayLike$1(iterable); length > index; index++) {\n          result = callFn(iterable[index]);\n          if (result && isPrototypeOf$7(ResultPrototype, result)) return result;\n        }\n        return new Result(false);\n      }\n      iterator = getIterator$6(iterable, iterFn);\n    }\n    next = IS_RECORD ? iterable.next : iterator.next;\n    while (!(step = call$6(next, iterator)).done) {\n      try {\n        result = callFn(step.value);\n      } catch (error) {\n        iteratorClose(iterator, 'throw', error);\n      }\n      if (typeof result == 'object' && result && isPrototypeOf$7(ResultPrototype, result)) return result;\n    }\n    return new Result(false);\n  };\n  var toString$1 = toString$7;\n  var normalizeStringArgument$1 = function (argument, $default) {\n    return argument === undefined ? arguments.length < 2 ? '' : $default : toString$1(argument);\n  };\n  var $$f = _export;\n  var isPrototypeOf$6 = objectIsPrototypeOf;\n  var getPrototypeOf = objectGetPrototypeOf;\n  var setPrototypeOf = objectSetPrototypeOf;\n  var copyConstructorProperties = copyConstructorProperties$1;\n  var create$1 = objectCreate;\n  var createNonEnumerableProperty$1 = createNonEnumerableProperty$9;\n  var createPropertyDescriptor = createPropertyDescriptor$7;\n  var installErrorCause = installErrorCause$1;\n  var installErrorStack = errorStackInstall;\n  var iterate$6 = iterate$7;\n  var normalizeStringArgument = normalizeStringArgument$1;\n  var wellKnownSymbol$3 = wellKnownSymbol$n;\n  var TO_STRING_TAG = wellKnownSymbol$3('toStringTag');\n  var $Error = Error;\n  var push$1 = [].push;\n  var $AggregateError = function AggregateError(errors, message /* , options */) {\n    var isInstance = isPrototypeOf$6(AggregateErrorPrototype, this);\n    var that;\n    if (setPrototypeOf) {\n      that = setPrototypeOf(new $Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n    } else {\n      that = isInstance ? this : create$1(AggregateErrorPrototype);\n      createNonEnumerableProperty$1(that, TO_STRING_TAG, 'Error');\n    }\n    if (message !== undefined) createNonEnumerableProperty$1(that, 'message', normalizeStringArgument(message));\n    installErrorStack(that, $AggregateError, that.stack, 1);\n    if (arguments.length > 2) installErrorCause(that, arguments[2]);\n    var errorsArray = [];\n    iterate$6(errors, push$1, {\n      that: errorsArray\n    });\n    createNonEnumerableProperty$1(that, 'errors', errorsArray);\n    return that;\n  };\n  if (setPrototypeOf) setPrototypeOf($AggregateError, $Error);else copyConstructorProperties($AggregateError, $Error, {\n    name: true\n  });\n  var AggregateErrorPrototype = $AggregateError.prototype = create$1($Error.prototype, {\n    constructor: createPropertyDescriptor(1, $AggregateError),\n    message: createPropertyDescriptor(1, ''),\n    name: createPropertyDescriptor(1, 'AggregateError')\n  });\n\n  // `AggregateError` constructor\n  // https://tc39.es/ecma262/#sec-aggregate-error-constructor\n  $$f({\n    global: true,\n    constructor: true,\n    arity: 2\n  }, {\n    AggregateError: $AggregateError\n  });\n  var getBuiltIn$3 = getBuiltIn$f;\n  var defineBuiltInAccessor$1 = defineBuiltInAccessor$3;\n  var wellKnownSymbol$2 = wellKnownSymbol$n;\n  var DESCRIPTORS$2 = descriptors;\n  var SPECIES$2 = wellKnownSymbol$2('species');\n  var setSpecies$2 = function (CONSTRUCTOR_NAME) {\n    var Constructor = getBuiltIn$3(CONSTRUCTOR_NAME);\n    if (DESCRIPTORS$2 && Constructor && !Constructor[SPECIES$2]) {\n      defineBuiltInAccessor$1(Constructor, SPECIES$2, {\n        configurable: true,\n        get: function () {\n          return this;\n        }\n      });\n    }\n  };\n  var isPrototypeOf$5 = objectIsPrototypeOf;\n  var $TypeError$1 = TypeError;\n  var anInstance$3 = function (it, Prototype) {\n    if (isPrototypeOf$5(Prototype, it)) return it;\n    throw new $TypeError$1('Incorrect invocation');\n  };\n  var anObject$1 = anObject$d;\n  var aConstructor = aConstructor$2;\n  var isNullOrUndefined$2 = isNullOrUndefined$6;\n  var wellKnownSymbol$1 = wellKnownSymbol$n;\n  var SPECIES$1 = wellKnownSymbol$1('species');\n\n  // `SpeciesConstructor` abstract operation\n  // https://tc39.es/ecma262/#sec-speciesconstructor\n  var speciesConstructor$2 = function (O, defaultConstructor) {\n    var C = anObject$1(O).constructor;\n    var S;\n    return C === undefined || isNullOrUndefined$2(S = anObject$1(C)[SPECIES$1]) ? defaultConstructor : aConstructor(S);\n  };\n  var userAgent$4 = engineUserAgent;\n\n  // eslint-disable-next-line redos/no-vulnerable -- safe\n  var engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);\n  var global$6 = global$p;\n  var apply = functionApply;\n  var bind$3 = functionBindContext;\n  var isCallable$4 = isCallable$m;\n  var hasOwn$4 = hasOwnProperty_1;\n  var fails$6 = fails$u;\n  var html = html$2;\n  var arraySlice$1 = arraySlice$5;\n  var createElement = documentCreateElement$1;\n  var validateArgumentsLength = validateArgumentsLength$2;\n  var IS_IOS$1 = engineIsIos;\n  var IS_NODE$3 = engineIsNode;\n  var set$3 = global$6.setImmediate;\n  var clear = global$6.clearImmediate;\n  var process$2 = global$6.process;\n  var Dispatch = global$6.Dispatch;\n  var Function$1 = global$6.Function;\n  var MessageChannel = global$6.MessageChannel;\n  var String$1 = global$6.String;\n  var counter = 0;\n  var queue$2 = {};\n  var ONREADYSTATECHANGE = 'onreadystatechange';\n  var $location, defer, channel, port;\n  fails$6(function () {\n    // Deno throws a ReferenceError on `location` access without `--location` flag\n    $location = global$6.location;\n  });\n  var run = function (id) {\n    if (hasOwn$4(queue$2, id)) {\n      var fn = queue$2[id];\n      delete queue$2[id];\n      fn();\n    }\n  };\n  var runner = function (id) {\n    return function () {\n      run(id);\n    };\n  };\n  var eventListener = function (event) {\n    run(event.data);\n  };\n  var globalPostMessageDefer = function (id) {\n    // old engines have not location.origin\n    global$6.postMessage(String$1(id), $location.protocol + '//' + $location.host);\n  };\n\n  // Node.js 0.9+ & IE10+ has setImmediate, otherwise:\n  if (!set$3 || !clear) {\n    set$3 = function setImmediate(handler) {\n      validateArgumentsLength(arguments.length, 1);\n      var fn = isCallable$4(handler) ? handler : Function$1(handler);\n      var args = arraySlice$1(arguments, 1);\n      queue$2[++counter] = function () {\n        apply(fn, undefined, args);\n      };\n      defer(counter);\n      return counter;\n    };\n    clear = function clearImmediate(id) {\n      delete queue$2[id];\n    };\n    // Node.js 0.8-\n    if (IS_NODE$3) {\n      defer = function (id) {\n        process$2.nextTick(runner(id));\n      };\n      // Sphere (JS game engine) Dispatch API\n    } else if (Dispatch && Dispatch.now) {\n      defer = function (id) {\n        Dispatch.now(runner(id));\n      };\n      // Browsers with MessageChannel, includes WebWorkers\n      // except iOS - https://github.com/zloirock/core-js/issues/624\n    } else if (MessageChannel && !IS_IOS$1) {\n      channel = new MessageChannel();\n      port = channel.port2;\n      channel.port1.onmessage = eventListener;\n      defer = bind$3(port.postMessage, port);\n      // Browsers with postMessage, skip WebWorkers\n      // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n    } else if (global$6.addEventListener && isCallable$4(global$6.postMessage) && !global$6.importScripts && $location && $location.protocol !== 'file:' && !fails$6(globalPostMessageDefer)) {\n      defer = globalPostMessageDefer;\n      global$6.addEventListener('message', eventListener, false);\n      // IE8-\n    } else if (ONREADYSTATECHANGE in createElement('script')) {\n      defer = function (id) {\n        html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n          html.removeChild(this);\n          run(id);\n        };\n      };\n      // Rest old browsers\n    } else {\n      defer = function (id) {\n        setTimeout(runner(id), 0);\n      };\n    }\n  }\n  var task$1 = {\n    set: set$3,\n    clear: clear\n  };\n  var Queue$3 = function () {\n    this.head = null;\n    this.tail = null;\n  };\n  Queue$3.prototype = {\n    add: function (item) {\n      var entry = {\n        item: item,\n        next: null\n      };\n      var tail = this.tail;\n      if (tail) tail.next = entry;else this.head = entry;\n      this.tail = entry;\n    },\n    get: function () {\n      var entry = this.head;\n      if (entry) {\n        var next = this.head = entry.next;\n        if (next === null) this.tail = null;\n        return entry.item;\n      }\n    }\n  };\n  var queue$1 = Queue$3;\n  var userAgent$3 = engineUserAgent;\n  var engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && typeof Pebble != 'undefined';\n  var userAgent$2 = engineUserAgent;\n  var engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);\n  var global$5 = global$p;\n  var bind$2 = functionBindContext;\n  var getOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\n  var macrotask = task$1.set;\n  var Queue$2 = queue$1;\n  var IS_IOS = engineIsIos;\n  var IS_IOS_PEBBLE = engineIsIosPebble;\n  var IS_WEBOS_WEBKIT = engineIsWebosWebkit;\n  var IS_NODE$2 = engineIsNode;\n  var MutationObserver = global$5.MutationObserver || global$5.WebKitMutationObserver;\n  var document$2 = global$5.document;\n  var process$1 = global$5.process;\n  var Promise$1 = global$5.Promise;\n  // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\n  var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global$5, 'queueMicrotask');\n  var microtask$1 = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\n  var notify$1, toggle, node, promise$5, then;\n\n  // modern engines have queueMicrotask method\n  if (!microtask$1) {\n    var queue = new Queue$2();\n    var flush = function () {\n      var parent, fn;\n      if (IS_NODE$2 && (parent = process$1.domain)) parent.exit();\n      while (fn = queue.get()) try {\n        fn();\n      } catch (error) {\n        if (queue.head) notify$1();\n        throw error;\n      }\n      if (parent) parent.enter();\n    };\n\n    // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n    // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n    if (!IS_IOS && !IS_NODE$2 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {\n      toggle = true;\n      node = document$2.createTextNode('');\n      new MutationObserver(flush).observe(node, {\n        characterData: true\n      });\n      notify$1 = function () {\n        node.data = toggle = !toggle;\n      };\n      // environments with maybe non-completely correct, but existent Promise\n    } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {\n      // Promise.resolve without an argument throws an error in LG WebOS 2\n      promise$5 = Promise$1.resolve(undefined);\n      // workaround of WebKit ~ iOS Safari 10.1 bug\n      promise$5.constructor = Promise$1;\n      then = bind$2(promise$5.then, promise$5);\n      notify$1 = function () {\n        then(flush);\n      };\n      // Node.js without promises\n    } else if (IS_NODE$2) {\n      notify$1 = function () {\n        process$1.nextTick(flush);\n      };\n      // for other environments - macrotask based on:\n      // - setImmediate\n      // - MessageChannel\n      // - window.postMessage\n      // - onreadystatechange\n      // - setTimeout\n    } else {\n      // `webpack` dev server bug on IE global methods - use bind(fn, global)\n      macrotask = bind$2(macrotask, global$5);\n      notify$1 = function () {\n        macrotask(flush);\n      };\n    }\n    microtask$1 = function (fn) {\n      if (!queue.head) notify$1();\n      queue.add(fn);\n    };\n  }\n  var microtask_1 = microtask$1;\n  var hostReportErrors$1 = function (a, b) {\n    try {\n      // eslint-disable-next-line no-console -- safe\n      arguments.length === 1 ? console.error(a) : console.error(a, b);\n    } catch (error) {/* empty */}\n  };\n  var perform$6 = function (exec) {\n    try {\n      return {\n        error: false,\n        value: exec()\n      };\n    } catch (error) {\n      return {\n        error: true,\n        value: error\n      };\n    }\n  };\n  var global$4 = global$p;\n  var promiseNativeConstructor = global$4.Promise;\n\n  /* global Deno -- Deno case */\n  var engineIsDeno = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';\n  var IS_DENO$1 = engineIsDeno;\n  var IS_NODE$1 = engineIsNode;\n  var engineIsBrowser = !IS_DENO$1 && !IS_NODE$1 && typeof window == 'object' && typeof document == 'object';\n  var global$3 = global$p;\n  var NativePromiseConstructor$5 = promiseNativeConstructor;\n  var isCallable$3 = isCallable$m;\n  var isForced = isForced_1;\n  var inspectSource = inspectSource$2;\n  var wellKnownSymbol = wellKnownSymbol$n;\n  var IS_BROWSER = engineIsBrowser;\n  var IS_DENO = engineIsDeno;\n  var V8_VERSION = engineV8Version;\n  var NativePromisePrototype$2 = NativePromiseConstructor$5 && NativePromiseConstructor$5.prototype;\n  var SPECIES = wellKnownSymbol('species');\n  var SUBCLASSING = false;\n  var NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$3(global$3.PromiseRejectionEvent);\n  var FORCED_PROMISE_CONSTRUCTOR$5 = isForced('Promise', function () {\n    var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$5);\n    var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$5);\n    // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n    // We can't detect it synchronously, so just check versions\n    if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n    // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution\n    if (!(NativePromisePrototype$2['catch'] && NativePromisePrototype$2['finally'])) return true;\n    // We can't use @@species feature detection in V8 since it causes\n    // deoptimization and performance degradation\n    // https://github.com/zloirock/core-js/issues/679\n    if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {\n      // Detect correctness of subclassing with @@species support\n      var promise = new NativePromiseConstructor$5(function (resolve) {\n        resolve(1);\n      });\n      var FakePromise = function (exec) {\n        exec(function () {/* empty */}, function () {/* empty */});\n      };\n      var constructor = promise.constructor = {};\n      constructor[SPECIES] = FakePromise;\n      SUBCLASSING = promise.then(function () {/* empty */}) instanceof FakePromise;\n      if (!SUBCLASSING) return true;\n      // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n    }\n    return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;\n  });\n  var promiseConstructorDetection = {\n    CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,\n    REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,\n    SUBCLASSING: SUBCLASSING\n  };\n  var newPromiseCapability$2 = {};\n  var aCallable$6 = aCallable$e;\n  var $TypeError = TypeError;\n  var PromiseCapability = function (C) {\n    var resolve, reject;\n    this.promise = new C(function ($$resolve, $$reject) {\n      if (resolve !== undefined || reject !== undefined) throw new $TypeError('Bad Promise constructor');\n      resolve = $$resolve;\n      reject = $$reject;\n    });\n    this.resolve = aCallable$6(resolve);\n    this.reject = aCallable$6(reject);\n  };\n\n  // `NewPromiseCapability` abstract operation\n  // https://tc39.es/ecma262/#sec-newpromisecapability\n  newPromiseCapability$2.f = function (C) {\n    return new PromiseCapability(C);\n  };\n  var $$e = _export;\n  var IS_NODE = engineIsNode;\n  var global$2 = global$p;\n  var call$5 = functionCall;\n  var defineBuiltIn$1 = defineBuiltIn$6;\n  var setToStringTag$1 = setToStringTag$7;\n  var setSpecies$1 = setSpecies$2;\n  var aCallable$5 = aCallable$e;\n  var isCallable$2 = isCallable$m;\n  var isObject$4 = isObject$h;\n  var anInstance$2 = anInstance$3;\n  var speciesConstructor$1 = speciesConstructor$2;\n  var task = task$1.set;\n  var microtask = microtask_1;\n  var hostReportErrors = hostReportErrors$1;\n  var perform$5 = perform$6;\n  var Queue$1 = queue$1;\n  var InternalStateModule$2 = internalState;\n  var NativePromiseConstructor$4 = promiseNativeConstructor;\n  var PromiseConstructorDetection = promiseConstructorDetection;\n  var newPromiseCapabilityModule$7 = newPromiseCapability$2;\n  var PROMISE = 'Promise';\n  var FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;\n  var NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;\n  PromiseConstructorDetection.SUBCLASSING;\n  var getInternalPromiseState = InternalStateModule$2.getterFor(PROMISE);\n  var setInternalState$2 = InternalStateModule$2.set;\n  var NativePromisePrototype$1 = NativePromiseConstructor$4 && NativePromiseConstructor$4.prototype;\n  var PromiseConstructor = NativePromiseConstructor$4;\n  var PromisePrototype = NativePromisePrototype$1;\n  var TypeError$1 = global$2.TypeError;\n  var document$1 = global$2.document;\n  var process = global$2.process;\n  var newPromiseCapability$1 = newPromiseCapabilityModule$7.f;\n  var newGenericPromiseCapability = newPromiseCapability$1;\n  var DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$2.dispatchEvent);\n  var UNHANDLED_REJECTION = 'unhandledrejection';\n  var REJECTION_HANDLED = 'rejectionhandled';\n  var PENDING = 0;\n  var FULFILLED = 1;\n  var REJECTED = 2;\n  var HANDLED = 1;\n  var UNHANDLED = 2;\n  var Internal, OwnPromiseCapability, PromiseWrapper;\n\n  // helpers\n  var isThenable = function (it) {\n    var then;\n    return isObject$4(it) && isCallable$2(then = it.then) ? then : false;\n  };\n  var callReaction = function (reaction, state) {\n    var value = state.value;\n    var ok = state.state === FULFILLED;\n    var handler = ok ? reaction.ok : reaction.fail;\n    var resolve = reaction.resolve;\n    var reject = reaction.reject;\n    var domain = reaction.domain;\n    var result, then, exited;\n    try {\n      if (handler) {\n        if (!ok) {\n          if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n          state.rejection = HANDLED;\n        }\n        if (handler === true) result = value;else {\n          if (domain) domain.enter();\n          result = handler(value); // can throw\n          if (domain) {\n            domain.exit();\n            exited = true;\n          }\n        }\n        if (result === reaction.promise) {\n          reject(new TypeError$1('Promise-chain cycle'));\n        } else if (then = isThenable(result)) {\n          call$5(then, result, resolve, reject);\n        } else resolve(result);\n      } else reject(value);\n    } catch (error) {\n      if (domain && !exited) domain.exit();\n      reject(error);\n    }\n  };\n  var notify = function (state, isReject) {\n    if (state.notified) return;\n    state.notified = true;\n    microtask(function () {\n      var reactions = state.reactions;\n      var reaction;\n      while (reaction = reactions.get()) {\n        callReaction(reaction, state);\n      }\n      state.notified = false;\n      if (isReject && !state.rejection) onUnhandled(state);\n    });\n  };\n  var dispatchEvent = function (name, promise, reason) {\n    var event, handler;\n    if (DISPATCH_EVENT) {\n      event = document$1.createEvent('Event');\n      event.promise = promise;\n      event.reason = reason;\n      event.initEvent(name, false, true);\n      global$2.dispatchEvent(event);\n    } else event = {\n      promise: promise,\n      reason: reason\n    };\n    if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$2['on' + name])) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n  };\n  var onUnhandled = function (state) {\n    call$5(task, global$2, function () {\n      var promise = state.facade;\n      var value = state.value;\n      var IS_UNHANDLED = isUnhandled(state);\n      var result;\n      if (IS_UNHANDLED) {\n        result = perform$5(function () {\n          if (IS_NODE) {\n            process.emit('unhandledRejection', value, promise);\n          } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n        });\n        // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n        state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;\n        if (result.error) throw result.value;\n      }\n    });\n  };\n  var isUnhandled = function (state) {\n    return state.rejection !== HANDLED && !state.parent;\n  };\n  var onHandleUnhandled = function (state) {\n    call$5(task, global$2, function () {\n      var promise = state.facade;\n      if (IS_NODE) {\n        process.emit('rejectionHandled', promise);\n      } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n    });\n  };\n  var bind$1 = function (fn, state, unwrap) {\n    return function (value) {\n      fn(state, value, unwrap);\n    };\n  };\n  var internalReject = function (state, value, unwrap) {\n    if (state.done) return;\n    state.done = true;\n    if (unwrap) state = unwrap;\n    state.value = value;\n    state.state = REJECTED;\n    notify(state, true);\n  };\n  var internalResolve = function (state, value, unwrap) {\n    if (state.done) return;\n    state.done = true;\n    if (unwrap) state = unwrap;\n    try {\n      if (state.facade === value) throw new TypeError$1(\"Promise can't be resolved itself\");\n      var then = isThenable(value);\n      if (then) {\n        microtask(function () {\n          var wrapper = {\n            done: false\n          };\n          try {\n            call$5(then, value, bind$1(internalResolve, wrapper, state), bind$1(internalReject, wrapper, state));\n          } catch (error) {\n            internalReject(wrapper, error, state);\n          }\n        });\n      } else {\n        state.value = value;\n        state.state = FULFILLED;\n        notify(state, false);\n      }\n    } catch (error) {\n      internalReject({\n        done: false\n      }, error, state);\n    }\n  };\n\n  // constructor polyfill\n  if (FORCED_PROMISE_CONSTRUCTOR$4) {\n    // 25.4.3.1 Promise(executor)\n    PromiseConstructor = function Promise(executor) {\n      anInstance$2(this, PromisePrototype);\n      aCallable$5(executor);\n      call$5(Internal, this);\n      var state = getInternalPromiseState(this);\n      try {\n        executor(bind$1(internalResolve, state), bind$1(internalReject, state));\n      } catch (error) {\n        internalReject(state, error);\n      }\n    };\n    PromisePrototype = PromiseConstructor.prototype;\n\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    Internal = function Promise(executor) {\n      setInternalState$2(this, {\n        type: PROMISE,\n        done: false,\n        notified: false,\n        parent: false,\n        reactions: new Queue$1(),\n        rejection: false,\n        state: PENDING,\n        value: undefined\n      });\n    };\n\n    // `Promise.prototype.then` method\n    // https://tc39.es/ecma262/#sec-promise.prototype.then\n    Internal.prototype = defineBuiltIn$1(PromisePrototype, 'then', function then(onFulfilled, onRejected) {\n      var state = getInternalPromiseState(this);\n      var reaction = newPromiseCapability$1(speciesConstructor$1(this, PromiseConstructor));\n      state.parent = true;\n      reaction.ok = isCallable$2(onFulfilled) ? onFulfilled : true;\n      reaction.fail = isCallable$2(onRejected) && onRejected;\n      reaction.domain = IS_NODE ? process.domain : undefined;\n      if (state.state === PENDING) state.reactions.add(reaction);else microtask(function () {\n        callReaction(reaction, state);\n      });\n      return reaction.promise;\n    });\n    OwnPromiseCapability = function () {\n      var promise = new Internal();\n      var state = getInternalPromiseState(promise);\n      this.promise = promise;\n      this.resolve = bind$1(internalResolve, state);\n      this.reject = bind$1(internalReject, state);\n    };\n    newPromiseCapabilityModule$7.f = newPromiseCapability$1 = function (C) {\n      return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n    };\n  }\n  $$e({\n    global: true,\n    constructor: true,\n    wrap: true,\n    forced: FORCED_PROMISE_CONSTRUCTOR$4\n  }, {\n    Promise: PromiseConstructor\n  });\n  setToStringTag$1(PromiseConstructor, PROMISE, false, true);\n  setSpecies$1(PROMISE);\n  var NativePromiseConstructor$3 = promiseNativeConstructor;\n  var checkCorrectnessOfIteration = checkCorrectnessOfIteration$2;\n  var FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;\n  var promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration(function (iterable) {\n    NativePromiseConstructor$3.all(iterable).then(undefined, function () {/* empty */});\n  });\n  var $$d = _export;\n  var call$4 = functionCall;\n  var aCallable$4 = aCallable$e;\n  var newPromiseCapabilityModule$6 = newPromiseCapability$2;\n  var perform$4 = perform$6;\n  var iterate$5 = iterate$7;\n  var PROMISE_STATICS_INCORRECT_ITERATION$3 = promiseStaticsIncorrectIteration;\n\n  // `Promise.all` method\n  // https://tc39.es/ecma262/#sec-promise.all\n  $$d({\n    target: 'Promise',\n    stat: true,\n    forced: PROMISE_STATICS_INCORRECT_ITERATION$3\n  }, {\n    all: function all(iterable) {\n      var C = this;\n      var capability = newPromiseCapabilityModule$6.f(C);\n      var resolve = capability.resolve;\n      var reject = capability.reject;\n      var result = perform$4(function () {\n        var $promiseResolve = aCallable$4(C.resolve);\n        var values = [];\n        var counter = 0;\n        var remaining = 1;\n        iterate$5(iterable, function (promise) {\n          var index = counter++;\n          var alreadyCalled = false;\n          remaining++;\n          call$4($promiseResolve, C, promise).then(function (value) {\n            if (alreadyCalled) return;\n            alreadyCalled = true;\n            values[index] = value;\n            --remaining || resolve(values);\n          }, reject);\n        });\n        --remaining || resolve(values);\n      });\n      if (result.error) reject(result.value);\n      return capability.promise;\n    }\n  });\n  var $$c = _export;\n  var FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;\n  var NativePromiseConstructor$2 = promiseNativeConstructor;\n  NativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;\n\n  // `Promise.prototype.catch` method\n  // https://tc39.es/ecma262/#sec-promise.prototype.catch\n  $$c({\n    target: 'Promise',\n    proto: true,\n    forced: FORCED_PROMISE_CONSTRUCTOR$2,\n    real: true\n  }, {\n    'catch': function (onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  var $$b = _export;\n  var call$3 = functionCall;\n  var aCallable$3 = aCallable$e;\n  var newPromiseCapabilityModule$5 = newPromiseCapability$2;\n  var perform$3 = perform$6;\n  var iterate$4 = iterate$7;\n  var PROMISE_STATICS_INCORRECT_ITERATION$2 = promiseStaticsIncorrectIteration;\n\n  // `Promise.race` method\n  // https://tc39.es/ecma262/#sec-promise.race\n  $$b({\n    target: 'Promise',\n    stat: true,\n    forced: PROMISE_STATICS_INCORRECT_ITERATION$2\n  }, {\n    race: function race(iterable) {\n      var C = this;\n      var capability = newPromiseCapabilityModule$5.f(C);\n      var reject = capability.reject;\n      var result = perform$3(function () {\n        var $promiseResolve = aCallable$3(C.resolve);\n        iterate$4(iterable, function (promise) {\n          call$3($promiseResolve, C, promise).then(capability.resolve, reject);\n        });\n      });\n      if (result.error) reject(result.value);\n      return capability.promise;\n    }\n  });\n  var $$a = _export;\n  var call$2 = functionCall;\n  var newPromiseCapabilityModule$4 = newPromiseCapability$2;\n  var FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;\n\n  // `Promise.reject` method\n  // https://tc39.es/ecma262/#sec-promise.reject\n  $$a({\n    target: 'Promise',\n    stat: true,\n    forced: FORCED_PROMISE_CONSTRUCTOR$1\n  }, {\n    reject: function reject(r) {\n      var capability = newPromiseCapabilityModule$4.f(this);\n      call$2(capability.reject, undefined, r);\n      return capability.promise;\n    }\n  });\n  var anObject = anObject$d;\n  var isObject$3 = isObject$h;\n  var newPromiseCapability = newPromiseCapability$2;\n  var promiseResolve$2 = function (C, x) {\n    anObject(C);\n    if (isObject$3(x) && x.constructor === C) return x;\n    var promiseCapability = newPromiseCapability.f(C);\n    var resolve = promiseCapability.resolve;\n    resolve(x);\n    return promiseCapability.promise;\n  };\n  var $$9 = _export;\n  var getBuiltIn$2 = getBuiltIn$f;\n  var IS_PURE = isPure;\n  var NativePromiseConstructor$1 = promiseNativeConstructor;\n  var FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;\n  var promiseResolve$1 = promiseResolve$2;\n  var PromiseConstructorWrapper = getBuiltIn$2('Promise');\n  var CHECK_WRAPPER = !FORCED_PROMISE_CONSTRUCTOR;\n\n  // `Promise.resolve` method\n  // https://tc39.es/ecma262/#sec-promise.resolve\n  $$9({\n    target: 'Promise',\n    stat: true,\n    forced: IS_PURE\n  }, {\n    resolve: function resolve(x) {\n      return promiseResolve$1(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor$1 : this, x);\n    }\n  });\n  var $$8 = _export;\n  var call$1 = functionCall;\n  var aCallable$2 = aCallable$e;\n  var newPromiseCapabilityModule$3 = newPromiseCapability$2;\n  var perform$2 = perform$6;\n  var iterate$3 = iterate$7;\n  var PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;\n\n  // `Promise.allSettled` method\n  // https://tc39.es/ecma262/#sec-promise.allsettled\n  $$8({\n    target: 'Promise',\n    stat: true,\n    forced: PROMISE_STATICS_INCORRECT_ITERATION$1\n  }, {\n    allSettled: function allSettled(iterable) {\n      var C = this;\n      var capability = newPromiseCapabilityModule$3.f(C);\n      var resolve = capability.resolve;\n      var reject = capability.reject;\n      var result = perform$2(function () {\n        var promiseResolve = aCallable$2(C.resolve);\n        var values = [];\n        var counter = 0;\n        var remaining = 1;\n        iterate$3(iterable, function (promise) {\n          var index = counter++;\n          var alreadyCalled = false;\n          remaining++;\n          call$1(promiseResolve, C, promise).then(function (value) {\n            if (alreadyCalled) return;\n            alreadyCalled = true;\n            values[index] = {\n              status: 'fulfilled',\n              value: value\n            };\n            --remaining || resolve(values);\n          }, function (error) {\n            if (alreadyCalled) return;\n            alreadyCalled = true;\n            values[index] = {\n              status: 'rejected',\n              reason: error\n            };\n            --remaining || resolve(values);\n          });\n        });\n        --remaining || resolve(values);\n      });\n      if (result.error) reject(result.value);\n      return capability.promise;\n    }\n  });\n  var $$7 = _export;\n  var call = functionCall;\n  var aCallable$1 = aCallable$e;\n  var getBuiltIn$1 = getBuiltIn$f;\n  var newPromiseCapabilityModule$2 = newPromiseCapability$2;\n  var perform$1 = perform$6;\n  var iterate$2 = iterate$7;\n  var PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;\n  var PROMISE_ANY_ERROR = 'No one promise resolved';\n\n  // `Promise.any` method\n  // https://tc39.es/ecma262/#sec-promise.any\n  $$7({\n    target: 'Promise',\n    stat: true,\n    forced: PROMISE_STATICS_INCORRECT_ITERATION\n  }, {\n    any: function any(iterable) {\n      var C = this;\n      var AggregateError = getBuiltIn$1('AggregateError');\n      var capability = newPromiseCapabilityModule$2.f(C);\n      var resolve = capability.resolve;\n      var reject = capability.reject;\n      var result = perform$1(function () {\n        var promiseResolve = aCallable$1(C.resolve);\n        var errors = [];\n        var counter = 0;\n        var remaining = 1;\n        var alreadyResolved = false;\n        iterate$2(iterable, function (promise) {\n          var index = counter++;\n          var alreadyRejected = false;\n          remaining++;\n          call(promiseResolve, C, promise).then(function (value) {\n            if (alreadyRejected || alreadyResolved) return;\n            alreadyResolved = true;\n            resolve(value);\n          }, function (error) {\n            if (alreadyRejected || alreadyResolved) return;\n            alreadyRejected = true;\n            errors[index] = error;\n            --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n          });\n        });\n        --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n      });\n      if (result.error) reject(result.value);\n      return capability.promise;\n    }\n  });\n  var $$6 = _export;\n  var NativePromiseConstructor = promiseNativeConstructor;\n  var fails$5 = fails$u;\n  var getBuiltIn = getBuiltIn$f;\n  var isCallable$1 = isCallable$m;\n  var speciesConstructor = speciesConstructor$2;\n  var promiseResolve = promiseResolve$2;\n  var NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n  // Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\n  var NON_GENERIC = !!NativePromiseConstructor && fails$5(function () {\n    // eslint-disable-next-line unicorn/no-thenable -- required for testing\n    NativePromisePrototype['finally'].call({\n      then: function () {/* empty */}\n    }, function () {/* empty */});\n  });\n\n  // `Promise.prototype.finally` method\n  // https://tc39.es/ecma262/#sec-promise.prototype.finally\n  $$6({\n    target: 'Promise',\n    proto: true,\n    real: true,\n    forced: NON_GENERIC\n  }, {\n    'finally': function (onFinally) {\n      var C = speciesConstructor(this, getBuiltIn('Promise'));\n      var isFunction = isCallable$1(onFinally);\n      return this.then(isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () {\n          return x;\n        });\n      } : onFinally, isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () {\n          throw e;\n        });\n      } : onFinally);\n    }\n  });\n  var path$2 = path$o;\n  var promise$4 = path$2.Promise;\n  var parent$e = promise$4;\n  var promise$3 = parent$e;\n  var $$5 = _export;\n  var newPromiseCapabilityModule$1 = newPromiseCapability$2;\n\n  // `Promise.withResolvers` method\n  // https://github.com/tc39/proposal-promise-with-resolvers\n  $$5({\n    target: 'Promise',\n    stat: true\n  }, {\n    withResolvers: function withResolvers() {\n      var promiseCapability = newPromiseCapabilityModule$1.f(this);\n      return {\n        promise: promiseCapability.promise,\n        resolve: promiseCapability.resolve,\n        reject: promiseCapability.reject\n      };\n    }\n  });\n  var parent$d = promise$3;\n  var promise$2 = parent$d;\n\n  // TODO: Remove from `core-js@4`\n  var $$4 = _export;\n  var newPromiseCapabilityModule = newPromiseCapability$2;\n  var perform = perform$6;\n\n  // `Promise.try` method\n  // https://github.com/tc39/proposal-promise-try\n  $$4({\n    target: 'Promise',\n    stat: true,\n    forced: true\n  }, {\n    'try': function (callbackfn) {\n      var promiseCapability = newPromiseCapabilityModule.f(this);\n      var result = perform(callbackfn);\n      (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);\n      return promiseCapability.promise;\n    }\n  });\n  var parent$c = promise$2;\n  // TODO: Remove from `core-js@4`\n\n  var promise$1 = parent$c;\n  var promise = promise$1;\n  var parent$b = reverse$4;\n  var reverse$2 = parent$b;\n  var parent$a = reverse$2;\n  var reverse$1 = parent$a;\n  var reverse = reverse$1;\n  (function (module) {\n    var _typeof = _typeofExports[\"default\"];\n    var _Object$defineProperty = defineProperty$8;\n    var _Symbol = symbol$1;\n    var _Object$create = create$2;\n    var _Object$getPrototypeOf = getPrototypeOf$1;\n    var _forEachInstanceProperty = forEach$1;\n    var _pushInstanceProperty = push$3;\n    var _Object$setPrototypeOf = setPrototypeOf$1;\n    var _Promise = promise;\n    var _reverseInstanceProperty = reverse;\n    var _sliceInstanceProperty = slice$1;\n    function _regeneratorRuntime() {\n      module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n        return e;\n      }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n      var t,\n        e = {},\n        r = Object.prototype,\n        n = r.hasOwnProperty,\n        o = _Object$defineProperty || function (t, e, r) {\n          t[e] = r.value;\n        },\n        i = \"function\" == typeof _Symbol ? _Symbol : {},\n        a = i.iterator || \"@@iterator\",\n        c = i.asyncIterator || \"@@asyncIterator\",\n        u = i.toStringTag || \"@@toStringTag\";\n      function define(t, e, r) {\n        return _Object$defineProperty(t, e, {\n          value: r,\n          enumerable: !0,\n          configurable: !0,\n          writable: !0\n        }), t[e];\n      }\n      try {\n        define({}, \"\");\n      } catch (t) {\n        define = function define(t, e, r) {\n          return t[e] = r;\n        };\n      }\n      function wrap(t, e, r, n) {\n        var i = e && e.prototype instanceof Generator ? e : Generator,\n          a = _Object$create(i.prototype),\n          c = new Context(n || []);\n        return o(a, \"_invoke\", {\n          value: makeInvokeMethod(t, r, c)\n        }), a;\n      }\n      function tryCatch(t, e, r) {\n        try {\n          return {\n            type: \"normal\",\n            arg: t.call(e, r)\n          };\n        } catch (t) {\n          return {\n            type: \"throw\",\n            arg: t\n          };\n        }\n      }\n      e.wrap = wrap;\n      var h = \"suspendedStart\",\n        l = \"suspendedYield\",\n        f = \"executing\",\n        s = \"completed\",\n        y = {};\n      function Generator() {}\n      function GeneratorFunction() {}\n      function GeneratorFunctionPrototype() {}\n      var p = {};\n      define(p, a, function () {\n        return this;\n      });\n      var d = _Object$getPrototypeOf,\n        v = d && d(d(values([])));\n      v && v !== r && n.call(v, a) && (p = v);\n      var g = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(p);\n      function defineIteratorMethods(t) {\n        var _context;\n        _forEachInstanceProperty(_context = [\"next\", \"throw\", \"return\"]).call(_context, function (e) {\n          define(t, e, function (t) {\n            return this._invoke(e, t);\n          });\n        });\n      }\n      function AsyncIterator(t, e) {\n        function invoke(r, o, i, a) {\n          var c = tryCatch(t[r], t, o);\n          if (\"throw\" !== c.type) {\n            var u = c.arg,\n              h = u.value;\n            return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n              invoke(\"next\", t, i, a);\n            }, function (t) {\n              invoke(\"throw\", t, i, a);\n            }) : e.resolve(h).then(function (t) {\n              u.value = t, i(u);\n            }, function (t) {\n              return invoke(\"throw\", t, i, a);\n            });\n          }\n          a(c.arg);\n        }\n        var r;\n        o(this, \"_invoke\", {\n          value: function value(t, n) {\n            function callInvokeWithMethodAndArg() {\n              return new e(function (e, r) {\n                invoke(t, n, e, r);\n              });\n            }\n            return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n          }\n        });\n      }\n      function makeInvokeMethod(e, r, n) {\n        var o = h;\n        return function (i, a) {\n          if (o === f) throw new Error(\"Generator is already running\");\n          if (o === s) {\n            if (\"throw\" === i) throw a;\n            return {\n              value: t,\n              done: !0\n            };\n          }\n          for (n.method = i, n.arg = a;;) {\n            var c = n.delegate;\n            if (c) {\n              var u = maybeInvokeDelegate(c, n);\n              if (u) {\n                if (u === y) continue;\n                return u;\n              }\n            }\n            if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n              if (o === h) throw o = s, n.arg;\n              n.dispatchException(n.arg);\n            } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n            o = f;\n            var p = tryCatch(e, r, n);\n            if (\"normal\" === p.type) {\n              if (o = n.done ? s : l, p.arg === y) continue;\n              return {\n                value: p.arg,\n                done: n.done\n              };\n            }\n            \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n          }\n        };\n      }\n      function maybeInvokeDelegate(e, r) {\n        var n = r.method,\n          o = e.iterator[n];\n        if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n        var i = tryCatch(o, e.iterator, r.arg);\n        if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n        var a = i.arg;\n        return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n      }\n      function pushTryEntry(t) {\n        var _context2;\n        var e = {\n          tryLoc: t[0]\n        };\n        1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), _pushInstanceProperty(_context2 = this.tryEntries).call(_context2, e);\n      }\n      function resetTryEntry(t) {\n        var e = t.completion || {};\n        e.type = \"normal\", delete e.arg, t.completion = e;\n      }\n      function Context(t) {\n        this.tryEntries = [{\n          tryLoc: \"root\"\n        }], _forEachInstanceProperty(t).call(t, pushTryEntry, this), this.reset(!0);\n      }\n      function values(e) {\n        if (e || \"\" === e) {\n          var r = e[a];\n          if (r) return r.call(e);\n          if (\"function\" == typeof e.next) return e;\n          if (!isNaN(e.length)) {\n            var o = -1,\n              i = function next() {\n                for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n                return next.value = t, next.done = !0, next;\n              };\n            return i.next = i;\n          }\n        }\n        throw new TypeError(_typeof(e) + \" is not iterable\");\n      }\n      return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n        value: GeneratorFunctionPrototype,\n        configurable: !0\n      }), o(GeneratorFunctionPrototype, \"constructor\", {\n        value: GeneratorFunction,\n        configurable: !0\n      }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n        var e = \"function\" == typeof t && t.constructor;\n        return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n      }, e.mark = function (t) {\n        return _Object$setPrototypeOf ? _Object$setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = _Object$create(g), t;\n      }, e.awrap = function (t) {\n        return {\n          __await: t\n        };\n      }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n        return this;\n      }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n        void 0 === i && (i = _Promise);\n        var a = new AsyncIterator(wrap(t, r, n, o), i);\n        return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n          return t.done ? t.value : a.next();\n        });\n      }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n        return this;\n      }), define(g, \"toString\", function () {\n        return \"[object Generator]\";\n      }), e.keys = function (t) {\n        var e = Object(t),\n          r = [];\n        for (var n in e) _pushInstanceProperty(r).call(r, n);\n        return _reverseInstanceProperty(r).call(r), function next() {\n          for (; r.length;) {\n            var t = r.pop();\n            if (t in e) return next.value = t, next.done = !1, next;\n          }\n          return next.done = !0, next;\n        };\n      }, e.values = values, Context.prototype = {\n        constructor: Context,\n        reset: function reset(e) {\n          var _context3;\n          if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, _forEachInstanceProperty(_context3 = this.tryEntries).call(_context3, resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+_sliceInstanceProperty(r).call(r, 1)) && (this[r] = t);\n        },\n        stop: function stop() {\n          this.done = !0;\n          var t = this.tryEntries[0].completion;\n          if (\"throw\" === t.type) throw t.arg;\n          return this.rval;\n        },\n        dispatchException: function dispatchException(e) {\n          if (this.done) throw e;\n          var r = this;\n          function handle(n, o) {\n            return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n          }\n          for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n            var i = this.tryEntries[o],\n              a = i.completion;\n            if (\"root\" === i.tryLoc) return handle(\"end\");\n            if (i.tryLoc <= this.prev) {\n              var c = n.call(i, \"catchLoc\"),\n                u = n.call(i, \"finallyLoc\");\n              if (c && u) {\n                if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n                if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n              } else if (c) {\n                if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n              } else {\n                if (!u) throw new Error(\"try statement without catch or finally\");\n                if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n              }\n            }\n          }\n        },\n        abrupt: function abrupt(t, e) {\n          for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n            var o = this.tryEntries[r];\n            if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n              var i = o;\n              break;\n            }\n          }\n          i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n          var a = i ? i.completion : {};\n          return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n        },\n        complete: function complete(t, e) {\n          if (\"throw\" === t.type) throw t.arg;\n          return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n        },\n        finish: function finish(t) {\n          for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n            var r = this.tryEntries[e];\n            if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n          }\n        },\n        \"catch\": function _catch(t) {\n          for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n            var r = this.tryEntries[e];\n            if (r.tryLoc === t) {\n              var n = r.completion;\n              if (\"throw\" === n.type) {\n                var o = n.arg;\n                resetTryEntry(r);\n              }\n              return o;\n            }\n          }\n          throw new Error(\"illegal catch attempt\");\n        },\n        delegateYield: function delegateYield(e, r, n) {\n          return this.delegate = {\n            iterator: values(e),\n            resultName: r,\n            nextLoc: n\n          }, \"next\" === this.method && (this.arg = t), y;\n        }\n      }, e;\n    }\n    module.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  })(regeneratorRuntime$1);\n  var regeneratorRuntimeExports = regeneratorRuntime$1.exports;\n\n  // TODO(Babel 8): Remove this file.\n\n  var runtime = regeneratorRuntimeExports();\n  var regenerator = runtime;\n\n  // Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\n  try {\n    regeneratorRuntime = runtime;\n  } catch (accidentalStrictMode) {\n    if (typeof globalThis === \"object\") {\n      globalThis.regeneratorRuntime = runtime;\n    } else {\n      Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n    }\n  }\n  var _regeneratorRuntime = /*@__PURE__*/getDefaultExportFromCjs(regenerator);\n  var internalMetadata = {\n    exports: {}\n  };\n\n  // FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it\n  var fails$4 = fails$u;\n  var arrayBufferNonExtensible = fails$4(function () {\n    if (typeof ArrayBuffer == 'function') {\n      var buffer = new ArrayBuffer(8);\n      // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe\n      if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', {\n        value: 8\n      });\n    }\n  });\n  var fails$3 = fails$u;\n  var isObject$2 = isObject$h;\n  var classof$3 = classofRaw$2;\n  var ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;\n\n  // eslint-disable-next-line es/no-object-isextensible -- safe\n  var $isExtensible = Object.isExtensible;\n  var FAILS_ON_PRIMITIVES = fails$3(function () {\n    $isExtensible(1);\n  });\n\n  // `Object.isExtensible` method\n  // https://tc39.es/ecma262/#sec-object.isextensible\n  var objectIsExtensible = FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE ? function isExtensible(it) {\n    if (!isObject$2(it)) return false;\n    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$3(it) === 'ArrayBuffer') return false;\n    return $isExtensible ? $isExtensible(it) : true;\n  } : $isExtensible;\n  var fails$2 = fails$u;\n  var freezing = !fails$2(function () {\n    // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing\n    return Object.isExtensible(Object.preventExtensions({}));\n  });\n  var $$3 = _export;\n  var uncurryThis$1 = functionUncurryThis;\n  var hiddenKeys = hiddenKeys$6;\n  var isObject$1 = isObject$h;\n  var hasOwn$3 = hasOwnProperty_1;\n  var defineProperty$1 = objectDefineProperty.f;\n  var getOwnPropertyNamesModule = objectGetOwnPropertyNames;\n  var getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;\n  var isExtensible = objectIsExtensible;\n  var uid = uid$4;\n  var FREEZING = freezing;\n  var REQUIRED = false;\n  var METADATA = uid('meta');\n  var id = 0;\n  var setMetadata = function (it) {\n    defineProperty$1(it, METADATA, {\n      value: {\n        objectID: 'O' + id++,\n        // object ID\n        weakData: {} // weak collections IDs\n      }\n    });\n  };\n  var fastKey$1 = function (it, create) {\n    // return a primitive with prefix\n    if (!isObject$1(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n    if (!hasOwn$3(it, METADATA)) {\n      // can't set metadata to uncaught frozen object\n      if (!isExtensible(it)) return 'F';\n      // not necessary to add metadata\n      if (!create) return 'E';\n      // add missing metadata\n      setMetadata(it);\n      // return object ID\n    }\n    return it[METADATA].objectID;\n  };\n  var getWeakData = function (it, create) {\n    if (!hasOwn$3(it, METADATA)) {\n      // can't set metadata to uncaught frozen object\n      if (!isExtensible(it)) return true;\n      // not necessary to add metadata\n      if (!create) return false;\n      // add missing metadata\n      setMetadata(it);\n      // return the store of weak collections IDs\n    }\n    return it[METADATA].weakData;\n  };\n\n  // add metadata on freeze-family methods calling\n  var onFreeze = function (it) {\n    if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn$3(it, METADATA)) setMetadata(it);\n    return it;\n  };\n  var enable = function () {\n    meta.enable = function () {/* empty */};\n    REQUIRED = true;\n    var getOwnPropertyNames = getOwnPropertyNamesModule.f;\n    var splice = uncurryThis$1([].splice);\n    var test = {};\n    test[METADATA] = 1;\n\n    // prevent exposing of metadata key\n    if (getOwnPropertyNames(test).length) {\n      getOwnPropertyNamesModule.f = function (it) {\n        var result = getOwnPropertyNames(it);\n        for (var i = 0, length = result.length; i < length; i++) {\n          if (result[i] === METADATA) {\n            splice(result, i, 1);\n            break;\n          }\n        }\n        return result;\n      };\n      $$3({\n        target: 'Object',\n        stat: true,\n        forced: true\n      }, {\n        getOwnPropertyNames: getOwnPropertyNamesExternalModule.f\n      });\n    }\n  };\n  var meta = internalMetadata.exports = {\n    enable: enable,\n    fastKey: fastKey$1,\n    getWeakData: getWeakData,\n    onFreeze: onFreeze\n  };\n  hiddenKeys[METADATA] = true;\n  var internalMetadataExports = internalMetadata.exports;\n  var $$2 = _export;\n  var global$1 = global$p;\n  var InternalMetadataModule = internalMetadataExports;\n  var fails$1 = fails$u;\n  var createNonEnumerableProperty = createNonEnumerableProperty$9;\n  var iterate$1 = iterate$7;\n  var anInstance$1 = anInstance$3;\n  var isCallable = isCallable$m;\n  var isObject = isObject$h;\n  var isNullOrUndefined$1 = isNullOrUndefined$6;\n  var setToStringTag = setToStringTag$7;\n  var defineProperty = objectDefineProperty.f;\n  var forEach = arrayIteration.forEach;\n  var DESCRIPTORS$1 = descriptors;\n  var InternalStateModule$1 = internalState;\n  var setInternalState$1 = InternalStateModule$1.set;\n  var internalStateGetterFor$1 = InternalStateModule$1.getterFor;\n  var collection$2 = function (CONSTRUCTOR_NAME, wrapper, common) {\n    var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n    var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n    var ADDER = IS_MAP ? 'set' : 'add';\n    var NativeConstructor = global$1[CONSTRUCTOR_NAME];\n    var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n    var exported = {};\n    var Constructor;\n    if (!DESCRIPTORS$1 || !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails$1(function () {\n      new NativeConstructor().entries().next();\n    }))) {\n      // create collection constructor\n      Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n      InternalMetadataModule.enable();\n    } else {\n      Constructor = wrapper(function (target, iterable) {\n        setInternalState$1(anInstance$1(target, Prototype), {\n          type: CONSTRUCTOR_NAME,\n          collection: new NativeConstructor()\n        });\n        if (!isNullOrUndefined$1(iterable)) iterate$1(iterable, target[ADDER], {\n          that: target,\n          AS_ENTRIES: IS_MAP\n        });\n      });\n      var Prototype = Constructor.prototype;\n      var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);\n      forEach(['add', 'clear', 'delete', 'forEach', 'get', 'has', 'set', 'keys', 'values', 'entries'], function (KEY) {\n        var IS_ADDER = KEY === 'add' || KEY === 'set';\n        if (KEY in NativePrototype && !(IS_WEAK && KEY === 'clear')) {\n          createNonEnumerableProperty(Prototype, KEY, function (a, b) {\n            var collection = getInternalState(this).collection;\n            if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY === 'get' ? undefined : false;\n            var result = collection[KEY](a === 0 ? 0 : a, b);\n            return IS_ADDER ? this : result;\n          });\n        }\n      });\n      IS_WEAK || defineProperty(Prototype, 'size', {\n        configurable: true,\n        get: function () {\n          return getInternalState(this).collection.size;\n        }\n      });\n    }\n    setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);\n    exported[CONSTRUCTOR_NAME] = Constructor;\n    $$2({\n      global: true,\n      forced: true\n    }, exported);\n    if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n    return Constructor;\n  };\n  var defineBuiltIn = defineBuiltIn$6;\n  var defineBuiltIns$1 = function (target, src, options) {\n    for (var key in src) {\n      if (options && options.unsafe && target[key]) target[key] = src[key];else defineBuiltIn(target, key, src[key], options);\n    }\n    return target;\n  };\n  var create = objectCreate;\n  var defineBuiltInAccessor = defineBuiltInAccessor$3;\n  var defineBuiltIns = defineBuiltIns$1;\n  var bind = functionBindContext;\n  var anInstance = anInstance$3;\n  var isNullOrUndefined = isNullOrUndefined$6;\n  var iterate = iterate$7;\n  var defineIterator = iteratorDefine;\n  var createIterResultObject = createIterResultObject$3;\n  var setSpecies = setSpecies$2;\n  var DESCRIPTORS = descriptors;\n  var fastKey = internalMetadataExports.fastKey;\n  var InternalStateModule = internalState;\n  var setInternalState = InternalStateModule.set;\n  var internalStateGetterFor = InternalStateModule.getterFor;\n  var collectionStrong$2 = {\n    getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n      var Constructor = wrapper(function (that, iterable) {\n        anInstance(that, Prototype);\n        setInternalState(that, {\n          type: CONSTRUCTOR_NAME,\n          index: create(null),\n          first: undefined,\n          last: undefined,\n          size: 0\n        });\n        if (!DESCRIPTORS) that.size = 0;\n        if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], {\n          that: that,\n          AS_ENTRIES: IS_MAP\n        });\n      });\n      var Prototype = Constructor.prototype;\n      var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n      var define = function (that, key, value) {\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        var previous, index;\n        // change existing entry\n        if (entry) {\n          entry.value = value;\n          // create new entry\n        } else {\n          state.last = entry = {\n            index: index = fastKey(key, true),\n            key: key,\n            value: value,\n            previous: previous = state.last,\n            next: undefined,\n            removed: false\n          };\n          if (!state.first) state.first = entry;\n          if (previous) previous.next = entry;\n          if (DESCRIPTORS) state.size++;else that.size++;\n          // add to index\n          if (index !== 'F') state.index[index] = entry;\n        }\n        return that;\n      };\n      var getEntry = function (that, key) {\n        var state = getInternalState(that);\n        // fast case\n        var index = fastKey(key);\n        var entry;\n        if (index !== 'F') return state.index[index];\n        // frozen object case\n        for (entry = state.first; entry; entry = entry.next) {\n          if (entry.key === key) return entry;\n        }\n      };\n      defineBuiltIns(Prototype, {\n        // `{ Map, Set }.prototype.clear()` methods\n        // https://tc39.es/ecma262/#sec-map.prototype.clear\n        // https://tc39.es/ecma262/#sec-set.prototype.clear\n        clear: function clear() {\n          var that = this;\n          var state = getInternalState(that);\n          var data = state.index;\n          var entry = state.first;\n          while (entry) {\n            entry.removed = true;\n            if (entry.previous) entry.previous = entry.previous.next = undefined;\n            delete data[entry.index];\n            entry = entry.next;\n          }\n          state.first = state.last = undefined;\n          if (DESCRIPTORS) state.size = 0;else that.size = 0;\n        },\n        // `{ Map, Set }.prototype.delete(key)` methods\n        // https://tc39.es/ecma262/#sec-map.prototype.delete\n        // https://tc39.es/ecma262/#sec-set.prototype.delete\n        'delete': function (key) {\n          var that = this;\n          var state = getInternalState(that);\n          var entry = getEntry(that, key);\n          if (entry) {\n            var next = entry.next;\n            var prev = entry.previous;\n            delete state.index[entry.index];\n            entry.removed = true;\n            if (prev) prev.next = next;\n            if (next) next.previous = prev;\n            if (state.first === entry) state.first = next;\n            if (state.last === entry) state.last = prev;\n            if (DESCRIPTORS) state.size--;else that.size--;\n          }\n          return !!entry;\n        },\n        // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods\n        // https://tc39.es/ecma262/#sec-map.prototype.foreach\n        // https://tc39.es/ecma262/#sec-set.prototype.foreach\n        forEach: function forEach(callbackfn /* , that = undefined */) {\n          var state = getInternalState(this);\n          var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n          var entry;\n          while (entry = entry ? entry.next : state.first) {\n            boundFunction(entry.value, entry.key, this);\n            // revert to the last existing entry\n            while (entry && entry.removed) entry = entry.previous;\n          }\n        },\n        // `{ Map, Set}.prototype.has(key)` methods\n        // https://tc39.es/ecma262/#sec-map.prototype.has\n        // https://tc39.es/ecma262/#sec-set.prototype.has\n        has: function has(key) {\n          return !!getEntry(this, key);\n        }\n      });\n      defineBuiltIns(Prototype, IS_MAP ? {\n        // `Map.prototype.get(key)` method\n        // https://tc39.es/ecma262/#sec-map.prototype.get\n        get: function get(key) {\n          var entry = getEntry(this, key);\n          return entry && entry.value;\n        },\n        // `Map.prototype.set(key, value)` method\n        // https://tc39.es/ecma262/#sec-map.prototype.set\n        set: function set(key, value) {\n          return define(this, key === 0 ? 0 : key, value);\n        }\n      } : {\n        // `Set.prototype.add(value)` method\n        // https://tc39.es/ecma262/#sec-set.prototype.add\n        add: function add(value) {\n          return define(this, value = value === 0 ? 0 : value, value);\n        }\n      });\n      if (DESCRIPTORS) defineBuiltInAccessor(Prototype, 'size', {\n        configurable: true,\n        get: function () {\n          return getInternalState(this).size;\n        }\n      });\n      return Constructor;\n    },\n    setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {\n      var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n      var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n      var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n      // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.entries\n      // https://tc39.es/ecma262/#sec-map.prototype.keys\n      // https://tc39.es/ecma262/#sec-map.prototype.values\n      // https://tc39.es/ecma262/#sec-map.prototype-@@iterator\n      // https://tc39.es/ecma262/#sec-set.prototype.entries\n      // https://tc39.es/ecma262/#sec-set.prototype.keys\n      // https://tc39.es/ecma262/#sec-set.prototype.values\n      // https://tc39.es/ecma262/#sec-set.prototype-@@iterator\n      defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {\n        setInternalState(this, {\n          type: ITERATOR_NAME,\n          target: iterated,\n          state: getInternalCollectionState(iterated),\n          kind: kind,\n          last: undefined\n        });\n      }, function () {\n        var state = getInternalIteratorState(this);\n        var kind = state.kind;\n        var entry = state.last;\n        // revert to the last existing entry\n        while (entry && entry.removed) entry = entry.previous;\n        // get next entry\n        if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n          // or finish the iteration\n          state.target = undefined;\n          return createIterResultObject(undefined, true);\n        }\n        // return step by kind\n        if (kind === 'keys') return createIterResultObject(entry.key, false);\n        if (kind === 'values') return createIterResultObject(entry.value, false);\n        return createIterResultObject([entry.key, entry.value], false);\n      }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n      // `{ Map, Set }.prototype[@@species]` accessors\n      // https://tc39.es/ecma262/#sec-get-map-@@species\n      // https://tc39.es/ecma262/#sec-get-set-@@species\n      setSpecies(CONSTRUCTOR_NAME);\n    }\n  };\n  var collection$1 = collection$2;\n  var collectionStrong$1 = collectionStrong$2;\n\n  // `Map` constructor\n  // https://tc39.es/ecma262/#sec-map-objects\n  collection$1('Map', function (init) {\n    return function Map() {\n      return init(this, arguments.length ? arguments[0] : undefined);\n    };\n  }, collectionStrong$1);\n  var path$1 = path$o;\n  var map$2 = path$1.Map;\n  var parent$9 = map$2;\n  var map$1 = parent$9;\n  var map = map$1;\n  var _Map = /*@__PURE__*/getDefaultExportFromCjs(map);\n  var $$1 = _export;\n  var $some = arrayIteration.some;\n  var arrayMethodIsStrict$1 = arrayMethodIsStrict$4;\n  var STRICT_METHOD$1 = arrayMethodIsStrict$1('some');\n\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  $$1({\n    target: 'Array',\n    proto: true,\n    forced: !STRICT_METHOD$1\n  }, {\n    some: function some(callbackfn /* , thisArg */) {\n      return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    }\n  });\n  var getBuiltInPrototypeMethod$4 = getBuiltInPrototypeMethod$g;\n  var some$3 = getBuiltInPrototypeMethod$4('Array', 'some');\n  var isPrototypeOf$4 = objectIsPrototypeOf;\n  var method$4 = some$3;\n  var ArrayPrototype$4 = Array.prototype;\n  var some$2 = function (it) {\n    var own = it.some;\n    return it === ArrayPrototype$4 || isPrototypeOf$4(ArrayPrototype$4, it) && own === ArrayPrototype$4.some ? method$4 : own;\n  };\n  var parent$8 = some$2;\n  var some$1 = parent$8;\n  var some = some$1;\n  var _someInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(some);\n  var getBuiltInPrototypeMethod$3 = getBuiltInPrototypeMethod$g;\n  var keys$3 = getBuiltInPrototypeMethod$3('Array', 'keys');\n  var parent$7 = keys$3;\n  var keys$2 = parent$7;\n  var classof$2 = classof$d;\n  var hasOwn$2 = hasOwnProperty_1;\n  var isPrototypeOf$3 = objectIsPrototypeOf;\n  var method$3 = keys$2;\n  var ArrayPrototype$3 = Array.prototype;\n  var DOMIterables$2 = {\n    DOMTokenList: true,\n    NodeList: true\n  };\n  var keys$1 = function (it) {\n    var own = it.keys;\n    return it === ArrayPrototype$3 || isPrototypeOf$3(ArrayPrototype$3, it) && own === ArrayPrototype$3.keys || hasOwn$2(DOMIterables$2, classof$2(it)) ? method$3 : own;\n  };\n  var keys = keys$1;\n  var _keysInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(keys);\n  var arraySlice = arraySliceSimple;\n  var floor = Math.floor;\n  var mergeSort = function (array, comparefn) {\n    var length = array.length;\n    var middle = floor(length / 2);\n    return length < 8 ? insertionSort(array, comparefn) : merge(array, mergeSort(arraySlice(array, 0, middle), comparefn), mergeSort(arraySlice(array, middle), comparefn), comparefn);\n  };\n  var insertionSort = function (array, comparefn) {\n    var length = array.length;\n    var i = 1;\n    var element, j;\n    while (i < length) {\n      j = i;\n      element = array[i];\n      while (j && comparefn(array[j - 1], element) > 0) {\n        array[j] = array[--j];\n      }\n      if (j !== i++) array[j] = element;\n    }\n    return array;\n  };\n  var merge = function (array, left, right, comparefn) {\n    var llength = left.length;\n    var rlength = right.length;\n    var lindex = 0;\n    var rindex = 0;\n    while (lindex < llength || rindex < rlength) {\n      array[lindex + rindex] = lindex < llength && rindex < rlength ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++] : lindex < llength ? left[lindex++] : right[rindex++];\n    }\n    return array;\n  };\n  var arraySort = mergeSort;\n  var userAgent$1 = engineUserAgent;\n  var firefox = userAgent$1.match(/firefox\\/(\\d+)/i);\n  var engineFfVersion = !!firefox && +firefox[1];\n  var UA = engineUserAgent;\n  var engineIsIeOrEdge = /MSIE|Trident/.test(UA);\n  var userAgent = engineUserAgent;\n  var webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n  var engineWebkitVersion = !!webkit && +webkit[1];\n  var $ = _export;\n  var uncurryThis = functionUncurryThis;\n  var aCallable = aCallable$e;\n  var toObject = toObject$e;\n  var lengthOfArrayLike = lengthOfArrayLike$d;\n  var deletePropertyOrThrow = deletePropertyOrThrow$2;\n  var toString = toString$7;\n  var fails = fails$u;\n  var internalSort = arraySort;\n  var arrayMethodIsStrict = arrayMethodIsStrict$4;\n  var FF = engineFfVersion;\n  var IE_OR_EDGE = engineIsIeOrEdge;\n  var V8 = engineV8Version;\n  var WEBKIT = engineWebkitVersion;\n  var test = [];\n  var nativeSort = uncurryThis(test.sort);\n  var push = uncurryThis(test.push);\n\n  // IE8-\n  var FAILS_ON_UNDEFINED = fails(function () {\n    test.sort(undefined);\n  });\n  // V8 bug\n  var FAILS_ON_NULL = fails(function () {\n    test.sort(null);\n  });\n  // Old WebKit\n  var STRICT_METHOD = arrayMethodIsStrict('sort');\n  var STABLE_SORT = !fails(function () {\n    // feature detection can be too slow, so check engines versions\n    if (V8) return V8 < 70;\n    if (FF && FF > 3) return;\n    if (IE_OR_EDGE) return true;\n    if (WEBKIT) return WEBKIT < 603;\n    var result = '';\n    var code, chr, value, index;\n\n    // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n    for (code = 65; code < 76; code++) {\n      chr = String.fromCharCode(code);\n      switch (code) {\n        case 66:\n        case 69:\n        case 70:\n        case 72:\n          value = 3;\n          break;\n        case 68:\n        case 71:\n          value = 4;\n          break;\n        default:\n          value = 2;\n      }\n      for (index = 0; index < 47; index++) {\n        test.push({\n          k: chr + index,\n          v: value\n        });\n      }\n    }\n    test.sort(function (a, b) {\n      return b.v - a.v;\n    });\n    for (index = 0; index < test.length; index++) {\n      chr = test[index].k.charAt(0);\n      if (result.charAt(result.length - 1) !== chr) result += chr;\n    }\n    return result !== 'DGBEFHACIJK';\n  });\n  var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;\n  var getSortCompare = function (comparefn) {\n    return function (x, y) {\n      if (y === undefined) return -1;\n      if (x === undefined) return 1;\n      if (comparefn !== undefined) return +comparefn(x, y) || 0;\n      return toString(x) > toString(y) ? 1 : -1;\n    };\n  };\n\n  // `Array.prototype.sort` method\n  // https://tc39.es/ecma262/#sec-array.prototype.sort\n  $({\n    target: 'Array',\n    proto: true,\n    forced: FORCED\n  }, {\n    sort: function sort(comparefn) {\n      if (comparefn !== undefined) aCallable(comparefn);\n      var array = toObject(this);\n      if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n      var items = [];\n      var arrayLength = lengthOfArrayLike(array);\n      var itemsLength, index;\n      for (index = 0; index < arrayLength; index++) {\n        if (index in array) push(items, array[index]);\n      }\n      internalSort(items, getSortCompare(comparefn));\n      itemsLength = lengthOfArrayLike(items);\n      index = 0;\n      while (index < itemsLength) array[index] = items[index++];\n      while (index < arrayLength) deletePropertyOrThrow(array, index++);\n      return array;\n    }\n  });\n  var getBuiltInPrototypeMethod$2 = getBuiltInPrototypeMethod$g;\n  var sort$3 = getBuiltInPrototypeMethod$2('Array', 'sort');\n  var isPrototypeOf$2 = objectIsPrototypeOf;\n  var method$2 = sort$3;\n  var ArrayPrototype$2 = Array.prototype;\n  var sort$2 = function (it) {\n    var own = it.sort;\n    return it === ArrayPrototype$2 || isPrototypeOf$2(ArrayPrototype$2, it) && own === ArrayPrototype$2.sort ? method$2 : own;\n  };\n  var parent$6 = sort$2;\n  var sort$1 = parent$6;\n  var sort = sort$1;\n  var _sortInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(sort);\n  var getBuiltInPrototypeMethod$1 = getBuiltInPrototypeMethod$g;\n  var values$3 = getBuiltInPrototypeMethod$1('Array', 'values');\n  var parent$5 = values$3;\n  var values$2 = parent$5;\n  var classof$1 = classof$d;\n  var hasOwn$1 = hasOwnProperty_1;\n  var isPrototypeOf$1 = objectIsPrototypeOf;\n  var method$1 = values$2;\n  var ArrayPrototype$1 = Array.prototype;\n  var DOMIterables$1 = {\n    DOMTokenList: true,\n    NodeList: true\n  };\n  var values$1 = function (it) {\n    var own = it.values;\n    return it === ArrayPrototype$1 || isPrototypeOf$1(ArrayPrototype$1, it) && own === ArrayPrototype$1.values || hasOwn$1(DOMIterables$1, classof$1(it)) ? method$1 : own;\n  };\n  var values = values$1;\n  var _valuesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(values);\n  var iterator = iterator$4;\n  var _Symbol$iterator = /*@__PURE__*/getDefaultExportFromCjs(iterator);\n  var getBuiltInPrototypeMethod = getBuiltInPrototypeMethod$g;\n  var entries$3 = getBuiltInPrototypeMethod('Array', 'entries');\n  var parent$4 = entries$3;\n  var entries$2 = parent$4;\n  var classof = classof$d;\n  var hasOwn = hasOwnProperty_1;\n  var isPrototypeOf = objectIsPrototypeOf;\n  var method = entries$2;\n  var ArrayPrototype = Array.prototype;\n  var DOMIterables = {\n    DOMTokenList: true,\n    NodeList: true\n  };\n  var entries$1 = function (it) {\n    var own = it.entries;\n    return it === ArrayPrototype || isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.entries || hasOwn(DOMIterables, classof(it)) ? method : own;\n  };\n  var entries = entries$1;\n  var _entriesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(entries);\n\n  // Unique ID creation requires a high quality random # generator. In the browser we therefore\n  // require the crypto API and do not support built-in fallback to lower quality random number\n  // generators (like Math.random()).\n  let getRandomValues;\n  const rnds8 = new Uint8Array(16);\n  function rng() {\n    // lazy load so that environments that need to polyfill have a chance to do so\n    if (!getRandomValues) {\n      // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n      getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n      if (!getRandomValues) {\n        throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n      }\n    }\n    return getRandomValues(rnds8);\n  }\n\n  /**\n   * Convert array of 16 byte values to UUID string format of the form:\n   * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n   */\n\n  const byteToHex = [];\n  for (let i = 0; i < 256; ++i) {\n    byteToHex.push((i + 0x100).toString(16).slice(1));\n  }\n  function unsafeStringify(arr) {\n    let offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    // Note: Be careful editing this code!  It's been tuned for performance\n    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n    return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n  }\n  const randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\n  var native = {\n    randomUUID\n  };\n  function v4(options, buf, offset) {\n    if (native.randomUUID && !buf && !options) {\n      return native.randomUUID();\n    }\n    options = options || {};\n    const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n    rnds[6] = rnds[6] & 0x0f | 0x40;\n    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n    if (buf) {\n      offset = offset || 0;\n      for (let i = 0; i < 16; ++i) {\n        buf[offset + i] = rnds[i];\n      }\n      return buf;\n    }\n    return unsafeStringify(rnds);\n  }\n\n  /**\r\n   * Determine whether a value can be used as an id.\r\n   * @param value - Input value of unknown type.\r\n   * @returns True if the value is valid id, false otherwise.\r\n   */\n  function isId(value) {\n    return typeof value === \"string\" || typeof value === \"number\";\n  }\n\n  /**\r\n   * A queue.\r\n   * @typeParam T - The type of method names to be replaced by queued versions.\r\n   */\n  var Queue = /*#__PURE__*/function () {\n    /**\r\n     * Construct a new Queue.\r\n     * @param options - Queue configuration.\r\n     */\n    function Queue(options) {\n      _classCallCheck(this, Queue);\n      /** Delay in milliseconds. If defined the queue will be periodically flushed. */\n      /** Maximum number of entries in the queue before it will be flushed. */\n      _defineProperty(this, \"_queue\", []);\n      _defineProperty(this, \"_timeout\", null);\n      _defineProperty(this, \"_extended\", null);\n      // options\n      this.delay = null;\n      this.max = Infinity;\n      this.setOptions(options);\n    }\n    /**\r\n     * Update the configuration of the queue.\r\n     * @param options - Queue configuration.\r\n     */\n    _createClass(Queue, [{\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        if (options && typeof options.delay !== \"undefined\") {\n          this.delay = options.delay;\n        }\n        if (options && typeof options.max !== \"undefined\") {\n          this.max = options.max;\n        }\n        this._flushIfNeeded();\n      }\n      /**\r\n       * Extend an object with queuing functionality.\r\n       * The object will be extended with a function flush, and the methods provided in options.replace will be replaced with queued ones.\r\n       * @param object - The object to be extended.\r\n       * @param options - Additional options.\r\n       * @returns The created queue.\r\n       */\n    }, {\n      key: \"destroy\",\n      value:\n      /**\r\n       * Destroy the queue. The queue will first flush all queued actions, and in case it has extended an object, will restore the original object.\r\n       */\n      function destroy() {\n        this.flush();\n        if (this._extended) {\n          var object = this._extended.object;\n          var methods = this._extended.methods;\n          for (var i = 0; i < methods.length; i++) {\n            var method = methods[i];\n            if (method.original) {\n              // @TODO: better solution?\n              object[method.name] = method.original;\n            } else {\n              // @TODO: better solution?\n              delete object[method.name];\n            }\n          }\n          this._extended = null;\n        }\n      }\n      /**\r\n       * Replace a method on an object with a queued version.\r\n       * @param object - Object having the method.\r\n       * @param method - The method name.\r\n       */\n    }, {\n      key: \"replace\",\n      value: function replace(object, method) {\n        /* eslint-disable-next-line @typescript-eslint/no-this-alias -- Function this is necessary in the function bellow, so class this has to be saved into a variable here. */\n        var me = this;\n        var original = object[method];\n        if (!original) {\n          throw new Error(\"Method \" + method + \" undefined\");\n        }\n        object[method] = function () {\n          for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n            args[_key] = arguments[_key];\n          }\n          // add this call to the queue\n          me.queue({\n            args: args,\n            fn: original,\n            context: this\n          });\n        };\n      }\n      /**\r\n       * Queue a call.\r\n       * @param entry - The function or entry to be queued.\r\n       */\n    }, {\n      key: \"queue\",\n      value: function queue(entry) {\n        if (typeof entry === \"function\") {\n          this._queue.push({\n            fn: entry\n          });\n        } else {\n          this._queue.push(entry);\n        }\n        this._flushIfNeeded();\n      }\n      /**\r\n       * Check whether the queue needs to be flushed.\r\n       */\n    }, {\n      key: \"_flushIfNeeded\",\n      value: function _flushIfNeeded() {\n        var _this = this;\n        // flush when the maximum is exceeded.\n        if (this._queue.length > this.max) {\n          this.flush();\n        }\n        // flush after a period of inactivity when a delay is configured\n        if (this._timeout != null) {\n          clearTimeout(this._timeout);\n          this._timeout = null;\n        }\n        if (this.queue.length > 0 && typeof this.delay === \"number\") {\n          this._timeout = _setTimeout(function () {\n            _this.flush();\n          }, this.delay);\n        }\n      }\n      /**\r\n       * Flush all queued calls\r\n       */\n    }, {\n      key: \"flush\",\n      value: function flush() {\n        var _context, _context2;\n        _forEachInstanceProperty(_context = _spliceInstanceProperty(_context2 = this._queue).call(_context2, 0)).call(_context, function (entry) {\n          entry.fn.apply(entry.context || entry.fn, entry.args || []);\n        });\n      }\n    }], [{\n      key: \"extend\",\n      value: function extend(object, options) {\n        var queue = new Queue(options);\n        if (object.flush !== undefined) {\n          throw new Error(\"Target object already has a property flush\");\n        }\n        object.flush = function () {\n          queue.flush();\n        };\n        var methods = [{\n          name: \"flush\",\n          original: undefined\n        }];\n        if (options && options.replace) {\n          for (var i = 0; i < options.replace.length; i++) {\n            var name = options.replace[i];\n            methods.push({\n              name: name,\n              // @TODO: better solution?\n              original: object[name]\n            });\n            // @TODO: better solution?\n            queue.replace(object, name);\n          }\n        }\n        queue._extended = {\n          object: object,\n          methods: methods\n        };\n        return queue;\n      }\n    }]);\n    return Queue;\n  }();\n\n  /**\r\n   * {@link DataSet} code that can be reused in {@link DataView} or other similar implementations of {@link DataInterface}.\r\n   * @typeParam Item - Item type that may or may not have an id.\r\n   * @typeParam IdProp - Name of the property that contains the id.\r\n   */\n  var DataSetPart = /*#__PURE__*/function () {\n    function DataSetPart() {\n      _classCallCheck(this, DataSetPart);\n      _defineProperty(this, \"_subscribers\", {\n        \"*\": [],\n        add: [],\n        remove: [],\n        update: []\n      });\n      /**\r\n       * @deprecated Use on instead (PS: DataView.subscribe === DataView.on).\r\n       */\n      _defineProperty(this, \"subscribe\", DataSetPart.prototype.on);\n      /**\r\n       * @deprecated Use off instead (PS: DataView.unsubscribe === DataView.off).\r\n       */\n      _defineProperty(this, \"unsubscribe\", DataSetPart.prototype.off);\n    }\n    _createClass(DataSetPart, [{\n      key: \"_trigger\",\n      value:\n      /**\r\n       * Trigger an event\r\n       * @param event - Event name.\r\n       * @param payload - Event payload.\r\n       * @param senderId - Id of the sender.\r\n       */\n      function _trigger(event, payload, senderId) {\n        var _context, _context2;\n        if (event === \"*\") {\n          throw new Error(\"Cannot trigger event *\");\n        }\n        _forEachInstanceProperty(_context = _concatInstanceProperty(_context2 = []).call(_context2, _toConsumableArray(this._subscribers[event]), _toConsumableArray(this._subscribers[\"*\"]))).call(_context, function (subscriber) {\n          subscriber(event, payload, senderId != null ? senderId : null);\n        });\n      }\n      /**\r\n       * Subscribe to an event, add an event listener.\r\n       * @remarks Non-function callbacks are ignored.\r\n       * @param event - Event name.\r\n       * @param callback - Callback method.\r\n       */\n    }, {\n      key: \"on\",\n      value: function on(event, callback) {\n        if (typeof callback === \"function\") {\n          this._subscribers[event].push(callback);\n        }\n        // @TODO: Maybe throw for invalid callbacks?\n      }\n      /**\r\n       * Unsubscribe from an event, remove an event listener.\r\n       * @remarks If the same callback was subscribed more than once **all** occurences will be removed.\r\n       * @param event - Event name.\r\n       * @param callback - Callback method.\r\n       */\n    }, {\n      key: \"off\",\n      value: function off(event, callback) {\n        var _context3;\n        this._subscribers[event] = _filterInstanceProperty(_context3 = this._subscribers[event]).call(_context3, function (subscriber) {\n          return subscriber !== callback;\n        });\n      }\n    }]);\n    return DataSetPart;\n  }();\n  var collection = collection$2;\n  var collectionStrong = collectionStrong$2;\n\n  // `Set` constructor\n  // https://tc39.es/ecma262/#sec-set-objects\n  collection('Set', function (init) {\n    return function Set() {\n      return init(this, arguments.length ? arguments[0] : undefined);\n    };\n  }, collectionStrong);\n  var path = path$o;\n  var set$2 = path.Set;\n  var parent$3 = set$2;\n  var set$1 = parent$3;\n  var set = set$1;\n  var _Set = /*@__PURE__*/getDefaultExportFromCjs(set);\n  var getIterator$5 = getIterator$8;\n  var getIterator_1 = getIterator$5;\n  var parent$2 = getIterator_1;\n  var getIterator$4 = parent$2;\n  var parent$1 = getIterator$4;\n  var getIterator$3 = parent$1;\n  var parent = getIterator$3;\n  var getIterator$2 = parent;\n  var getIterator$1 = getIterator$2;\n  var getIterator = getIterator$1;\n  var _getIterator = /*@__PURE__*/getDefaultExportFromCjs(getIterator);\n  function _createForOfIteratorHelper$2(o, allowArrayLike) {\n    var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n    if (!it) {\n      if (_Array$isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e) {\n            throw _e;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = it.call(o);\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e2) {\n        didErr = true;\n        err = _e2;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray$2(o, minLen) {\n    var _context10;\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen);\n    var n = _sliceInstanceProperty(_context10 = Object.prototype.toString.call(o)).call(_context10, 8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return _Array$from$1(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen);\n  }\n  function _arrayLikeToArray$2(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  /**\r\n   * Data stream\r\n   * @remarks\r\n   * {@link DataStream} offers an always up to date stream of items from a {@link DataSet} or {@link DataView}.\r\n   * That means that the stream is evaluated at the time of iteration, conversion to another data type or when {@link cache} is called, not when the {@link DataStream} was created.\r\n   * Multiple invocations of for example {@link toItemArray} may yield different results (if the data source like for example {@link DataSet} gets modified).\r\n   * @typeParam Item - The item type this stream is going to work with.\r\n   */\n  var DataStream = /*#__PURE__*/function (_Symbol$iterator$1) {\n    /**\r\n     * Create a new data stream.\r\n     * @param pairs - The id, item pairs.\r\n     */\n    function DataStream(pairs) {\n      _classCallCheck(this, DataStream);\n      this._pairs = pairs;\n    }\n    /**\r\n     * Return an iterable of key, value pairs for every entry in the stream.\r\n     */\n    _createClass(DataStream, [{\n      key: _Symbol$iterator$1,\n      value: /*#__PURE__*/\n      _regeneratorRuntime.mark(function value() {\n        var _iterator, _step, _step$value, id, item;\n        return _regeneratorRuntime.wrap(function value$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _iterator = _createForOfIteratorHelper$2(this._pairs);\n              _context.prev = 1;\n              _iterator.s();\n            case 3:\n              if ((_step = _iterator.n()).done) {\n                _context.next = 9;\n                break;\n              }\n              _step$value = _slicedToArray(_step.value, 2), id = _step$value[0], item = _step$value[1];\n              _context.next = 7;\n              return [id, item];\n            case 7:\n              _context.next = 3;\n              break;\n            case 9:\n              _context.next = 14;\n              break;\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](1);\n              _iterator.e(_context.t0);\n            case 14:\n              _context.prev = 14;\n              _iterator.f();\n              return _context.finish(14);\n            case 17:\n            case \"end\":\n              return _context.stop();\n          }\n        }, value, this, [[1, 11, 14, 17]]);\n      })\n      /**\r\n       * Return an iterable of key, value pairs for every entry in the stream.\r\n       */\n    }, {\n      key: \"entries\",\n      value: /*#__PURE__*/\n      _regeneratorRuntime.mark(function entries() {\n        var _iterator2, _step2, _step2$value, id, item;\n        return _regeneratorRuntime.wrap(function entries$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _iterator2 = _createForOfIteratorHelper$2(this._pairs);\n              _context2.prev = 1;\n              _iterator2.s();\n            case 3:\n              if ((_step2 = _iterator2.n()).done) {\n                _context2.next = 9;\n                break;\n              }\n              _step2$value = _slicedToArray(_step2.value, 2), id = _step2$value[0], item = _step2$value[1];\n              _context2.next = 7;\n              return [id, item];\n            case 7:\n              _context2.next = 3;\n              break;\n            case 9:\n              _context2.next = 14;\n              break;\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](1);\n              _iterator2.e(_context2.t0);\n            case 14:\n              _context2.prev = 14;\n              _iterator2.f();\n              return _context2.finish(14);\n            case 17:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, entries, this, [[1, 11, 14, 17]]);\n      })\n      /**\r\n       * Return an iterable of keys in the stream.\r\n       */\n    }, {\n      key: \"keys\",\n      value: /*#__PURE__*/\n      _regeneratorRuntime.mark(function keys() {\n        var _iterator3, _step3, _step3$value, id;\n        return _regeneratorRuntime.wrap(function keys$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _iterator3 = _createForOfIteratorHelper$2(this._pairs);\n              _context3.prev = 1;\n              _iterator3.s();\n            case 3:\n              if ((_step3 = _iterator3.n()).done) {\n                _context3.next = 9;\n                break;\n              }\n              _step3$value = _slicedToArray(_step3.value, 1), id = _step3$value[0];\n              _context3.next = 7;\n              return id;\n            case 7:\n              _context3.next = 3;\n              break;\n            case 9:\n              _context3.next = 14;\n              break;\n            case 11:\n              _context3.prev = 11;\n              _context3.t0 = _context3[\"catch\"](1);\n              _iterator3.e(_context3.t0);\n            case 14:\n              _context3.prev = 14;\n              _iterator3.f();\n              return _context3.finish(14);\n            case 17:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, keys, this, [[1, 11, 14, 17]]);\n      })\n      /**\r\n       * Return an iterable of values in the stream.\r\n       */\n    }, {\n      key: \"values\",\n      value: /*#__PURE__*/\n      _regeneratorRuntime.mark(function values() {\n        var _iterator4, _step4, _step4$value, item;\n        return _regeneratorRuntime.wrap(function values$(_context4) {\n          while (1) switch (_context4.prev = _context4.next) {\n            case 0:\n              _iterator4 = _createForOfIteratorHelper$2(this._pairs);\n              _context4.prev = 1;\n              _iterator4.s();\n            case 3:\n              if ((_step4 = _iterator4.n()).done) {\n                _context4.next = 9;\n                break;\n              }\n              _step4$value = _slicedToArray(_step4.value, 2), item = _step4$value[1];\n              _context4.next = 7;\n              return item;\n            case 7:\n              _context4.next = 3;\n              break;\n            case 9:\n              _context4.next = 14;\n              break;\n            case 11:\n              _context4.prev = 11;\n              _context4.t0 = _context4[\"catch\"](1);\n              _iterator4.e(_context4.t0);\n            case 14:\n              _context4.prev = 14;\n              _iterator4.f();\n              return _context4.finish(14);\n            case 17:\n            case \"end\":\n              return _context4.stop();\n          }\n        }, values, this, [[1, 11, 14, 17]]);\n      })\n      /**\r\n       * Return an array containing all the ids in this stream.\r\n       * @remarks\r\n       * The array may contain duplicities.\r\n       * @returns The array with all ids from this stream.\r\n       */\n    }, {\n      key: \"toIdArray\",\n      value: function toIdArray() {\n        var _context5;\n        return _mapInstanceProperty(_context5 = _toConsumableArray(this._pairs)).call(_context5, function (pair) {\n          return pair[0];\n        });\n      }\n      /**\r\n       * Return an array containing all the items in this stream.\r\n       * @remarks\r\n       * The array may contain duplicities.\r\n       * @returns The array with all items from this stream.\r\n       */\n    }, {\n      key: \"toItemArray\",\n      value: function toItemArray() {\n        var _context6;\n        return _mapInstanceProperty(_context6 = _toConsumableArray(this._pairs)).call(_context6, function (pair) {\n          return pair[1];\n        });\n      }\n      /**\r\n       * Return an array containing all the entries in this stream.\r\n       * @remarks\r\n       * The array may contain duplicities.\r\n       * @returns The array with all entries from this stream.\r\n       */\n    }, {\n      key: \"toEntryArray\",\n      value: function toEntryArray() {\n        return _toConsumableArray(this._pairs);\n      }\n      /**\r\n       * Return an object map containing all the items in this stream accessible by ids.\r\n       * @remarks\r\n       * In case of duplicate ids (coerced to string so `7 == '7'`) the last encoutered appears in the returned object.\r\n       * @returns The object map of all id → item pairs from this stream.\r\n       */\n    }, {\n      key: \"toObjectMap\",\n      value: function toObjectMap() {\n        var map = _Object$create$1(null);\n        var _iterator5 = _createForOfIteratorHelper$2(this._pairs),\n          _step5;\n        try {\n          for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n            var _step5$value = _slicedToArray(_step5.value, 2),\n              id = _step5$value[0],\n              item = _step5$value[1];\n            map[id] = item;\n          }\n        } catch (err) {\n          _iterator5.e(err);\n        } finally {\n          _iterator5.f();\n        }\n        return map;\n      }\n      /**\r\n       * Return a map containing all the items in this stream accessible by ids.\r\n       * @returns The map of all id → item pairs from this stream.\r\n       */\n    }, {\n      key: \"toMap\",\n      value: function toMap() {\n        return new _Map(this._pairs);\n      }\n      /**\r\n       * Return a set containing all the (unique) ids in this stream.\r\n       * @returns The set of all ids from this stream.\r\n       */\n    }, {\n      key: \"toIdSet\",\n      value: function toIdSet() {\n        return new _Set(this.toIdArray());\n      }\n      /**\r\n       * Return a set containing all the (unique) items in this stream.\r\n       * @returns The set of all items from this stream.\r\n       */\n    }, {\n      key: \"toItemSet\",\n      value: function toItemSet() {\n        return new _Set(this.toItemArray());\n      }\n      /**\r\n       * Cache the items from this stream.\r\n       * @remarks\r\n       * This method allows for items to be fetched immediatelly and used (possibly multiple times) later.\r\n       * It can also be used to optimize performance as {@link DataStream} would otherwise reevaluate everything upon each iteration.\r\n       *\r\n       * ## Example\r\n       * ```javascript\r\n       * const ds = new DataSet([…])\r\n       *\r\n       * const cachedStream = ds.stream()\r\n       *   .filter(…)\r\n       *   .sort(…)\r\n       *   .map(…)\r\n       *   .cached(…) // Data are fetched, processed and cached here.\r\n       *\r\n       * ds.clear()\r\n       * chachedStream // Still has all the items.\r\n       * ```\r\n       * @returns A new {@link DataStream} with cached items (detached from the original {@link DataSet}).\r\n       */\n    }, {\n      key: \"cache\",\n      value: function cache() {\n        return new DataStream(_toConsumableArray(this._pairs));\n      }\n      /**\r\n       * Get the distinct values of given property.\r\n       * @param callback - The function that picks and possibly converts the property.\r\n       * @typeParam T - The type of the distinct value.\r\n       * @returns A set of all distinct properties.\r\n       */\n    }, {\n      key: \"distinct\",\n      value: function distinct(callback) {\n        var set = new _Set();\n        var _iterator6 = _createForOfIteratorHelper$2(this._pairs),\n          _step6;\n        try {\n          for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n            var _step6$value = _slicedToArray(_step6.value, 2),\n              id = _step6$value[0],\n              item = _step6$value[1];\n            set.add(callback(item, id));\n          }\n        } catch (err) {\n          _iterator6.e(err);\n        } finally {\n          _iterator6.f();\n        }\n        return set;\n      }\n      /**\r\n       * Filter the items of the stream.\r\n       * @param callback - The function that decides whether an item will be included.\r\n       * @returns A new data stream with the filtered items.\r\n       */\n    }, {\n      key: \"filter\",\n      value: function filter(callback) {\n        var pairs = this._pairs;\n        return new DataStream({\n          [_Symbol$iterator]() {\n            return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n              var _iterator7, _step7, _step7$value, id, item;\n              return _regeneratorRuntime.wrap(function _callee$(_context7) {\n                while (1) switch (_context7.prev = _context7.next) {\n                  case 0:\n                    _iterator7 = _createForOfIteratorHelper$2(pairs);\n                    _context7.prev = 1;\n                    _iterator7.s();\n                  case 3:\n                    if ((_step7 = _iterator7.n()).done) {\n                      _context7.next = 10;\n                      break;\n                    }\n                    _step7$value = _slicedToArray(_step7.value, 2), id = _step7$value[0], item = _step7$value[1];\n                    if (!callback(item, id)) {\n                      _context7.next = 8;\n                      break;\n                    }\n                    _context7.next = 8;\n                    return [id, item];\n                  case 8:\n                    _context7.next = 3;\n                    break;\n                  case 10:\n                    _context7.next = 15;\n                    break;\n                  case 12:\n                    _context7.prev = 12;\n                    _context7.t0 = _context7[\"catch\"](1);\n                    _iterator7.e(_context7.t0);\n                  case 15:\n                    _context7.prev = 15;\n                    _iterator7.f();\n                    return _context7.finish(15);\n                  case 18:\n                  case \"end\":\n                    return _context7.stop();\n                }\n              }, _callee, null, [[1, 12, 15, 18]]);\n            })();\n          }\n        });\n      }\n      /**\r\n       * Execute a callback for each item of the stream.\r\n       * @param callback - The function that will be invoked for each item.\r\n       */\n    }, {\n      key: \"forEach\",\n      value: function forEach(callback) {\n        var _iterator8 = _createForOfIteratorHelper$2(this._pairs),\n          _step8;\n        try {\n          for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n            var _step8$value = _slicedToArray(_step8.value, 2),\n              id = _step8$value[0],\n              item = _step8$value[1];\n            callback(item, id);\n          }\n        } catch (err) {\n          _iterator8.e(err);\n        } finally {\n          _iterator8.f();\n        }\n      }\n      /**\r\n       * Map the items into a different type.\r\n       * @param callback - The function that does the conversion.\r\n       * @typeParam Mapped - The type of the item after mapping.\r\n       * @returns A new data stream with the mapped items.\r\n       */\n    }, {\n      key: \"map\",\n      value: function map(callback) {\n        var pairs = this._pairs;\n        return new DataStream({\n          [_Symbol$iterator]() {\n            return /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n              var _iterator9, _step9, _step9$value, id, item;\n              return _regeneratorRuntime.wrap(function _callee2$(_context8) {\n                while (1) switch (_context8.prev = _context8.next) {\n                  case 0:\n                    _iterator9 = _createForOfIteratorHelper$2(pairs);\n                    _context8.prev = 1;\n                    _iterator9.s();\n                  case 3:\n                    if ((_step9 = _iterator9.n()).done) {\n                      _context8.next = 9;\n                      break;\n                    }\n                    _step9$value = _slicedToArray(_step9.value, 2), id = _step9$value[0], item = _step9$value[1];\n                    _context8.next = 7;\n                    return [id, callback(item, id)];\n                  case 7:\n                    _context8.next = 3;\n                    break;\n                  case 9:\n                    _context8.next = 14;\n                    break;\n                  case 11:\n                    _context8.prev = 11;\n                    _context8.t0 = _context8[\"catch\"](1);\n                    _iterator9.e(_context8.t0);\n                  case 14:\n                    _context8.prev = 14;\n                    _iterator9.f();\n                    return _context8.finish(14);\n                  case 17:\n                  case \"end\":\n                    return _context8.stop();\n                }\n              }, _callee2, null, [[1, 11, 14, 17]]);\n            })();\n          }\n        });\n      }\n      /**\r\n       * Get the item with the maximum value of given property.\r\n       * @param callback - The function that picks and possibly converts the property.\r\n       * @returns The item with the maximum if found otherwise null.\r\n       */\n    }, {\n      key: \"max\",\n      value: function max(callback) {\n        var iter = _getIterator(this._pairs);\n        var curr = iter.next();\n        if (curr.done) {\n          return null;\n        }\n        var maxItem = curr.value[1];\n        var maxValue = callback(curr.value[1], curr.value[0]);\n        while (!(curr = iter.next()).done) {\n          var _curr$value = _slicedToArray(curr.value, 2),\n            id = _curr$value[0],\n            item = _curr$value[1];\n          var _value = callback(item, id);\n          if (_value > maxValue) {\n            maxValue = _value;\n            maxItem = item;\n          }\n        }\n        return maxItem;\n      }\n      /**\r\n       * Get the item with the minimum value of given property.\r\n       * @param callback - The function that picks and possibly converts the property.\r\n       * @returns The item with the minimum if found otherwise null.\r\n       */\n    }, {\n      key: \"min\",\n      value: function min(callback) {\n        var iter = _getIterator(this._pairs);\n        var curr = iter.next();\n        if (curr.done) {\n          return null;\n        }\n        var minItem = curr.value[1];\n        var minValue = callback(curr.value[1], curr.value[0]);\n        while (!(curr = iter.next()).done) {\n          var _curr$value2 = _slicedToArray(curr.value, 2),\n            id = _curr$value2[0],\n            item = _curr$value2[1];\n          var _value2 = callback(item, id);\n          if (_value2 < minValue) {\n            minValue = _value2;\n            minItem = item;\n          }\n        }\n        return minItem;\n      }\n      /**\r\n       * Reduce the items into a single value.\r\n       * @param callback - The function that does the reduction.\r\n       * @param accumulator - The initial value of the accumulator.\r\n       * @typeParam T - The type of the accumulated value.\r\n       * @returns The reduced value.\r\n       */\n    }, {\n      key: \"reduce\",\n      value: function reduce(callback, accumulator) {\n        var _iterator10 = _createForOfIteratorHelper$2(this._pairs),\n          _step10;\n        try {\n          for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n            var _step10$value = _slicedToArray(_step10.value, 2),\n              id = _step10$value[0],\n              item = _step10$value[1];\n            accumulator = callback(accumulator, item, id);\n          }\n        } catch (err) {\n          _iterator10.e(err);\n        } finally {\n          _iterator10.f();\n        }\n        return accumulator;\n      }\n      /**\r\n       * Sort the items.\r\n       * @param callback - Item comparator.\r\n       * @returns A new stream with sorted items.\r\n       */\n    }, {\n      key: \"sort\",\n      value: function sort(callback) {\n        var _this = this;\n        return new DataStream({\n          [_Symbol$iterator]: function () {\n            var _context9;\n            return _getIterator(_sortInstanceProperty(_context9 = _toConsumableArray(_this._pairs)).call(_context9, function (_ref, _ref2) {\n              var _ref3 = _slicedToArray(_ref, 2),\n                idA = _ref3[0],\n                itemA = _ref3[1];\n              var _ref4 = _slicedToArray(_ref2, 2),\n                idB = _ref4[0],\n                itemB = _ref4[1];\n              return callback(itemA, itemB, idA, idB);\n            }));\n          }\n        });\n      }\n    }]);\n    return DataStream;\n  }(_Symbol$iterator);\n  function ownKeys(e, r) {\n    var t = _Object$keys(e);\n    if (_Object$getOwnPropertySymbols) {\n      var o = _Object$getOwnPropertySymbols(e);\n      r && (o = _filterInstanceProperty(o).call(o, function (r) {\n        return _Object$getOwnPropertyDescriptor(e, r).enumerable;\n      })), t.push.apply(t, o);\n    }\n    return t;\n  }\n  function _objectSpread(e) {\n    for (var r = 1; r < arguments.length; r++) {\n      var _context10, _context11;\n      var t = null != arguments[r] ? arguments[r] : {};\n      r % 2 ? _forEachInstanceProperty(_context10 = ownKeys(Object(t), !0)).call(_context10, function (r) {\n        _defineProperty(e, r, t[r]);\n      }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context11 = ownKeys(Object(t))).call(_context11, function (r) {\n        _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r));\n      });\n    }\n    return e;\n  }\n  function _createForOfIteratorHelper$1(o, allowArrayLike) {\n    var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n    if (!it) {\n      if (_Array$isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e) {\n            throw _e;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = it.call(o);\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e2) {\n        didErr = true;\n        err = _e2;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray$1(o, minLen) {\n    var _context9;\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen);\n    var n = _sliceInstanceProperty(_context9 = Object.prototype.toString.call(o)).call(_context9, 8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return _Array$from$1(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);\n  }\n  function _arrayLikeToArray$1(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createSuper$1(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct$1();\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n        result = _Reflect$construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n  function _isNativeReflectConstruct$1() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\r\n   * Add an id to given item if it doesn't have one already.\r\n   * @remarks\r\n   * The item will be modified.\r\n   * @param item - The item that will have an id after a call to this function.\r\n   * @param idProp - The key of the id property.\r\n   * @typeParam Item - Item type that may or may not have an id.\r\n   * @typeParam IdProp - Name of the property that contains the id.\r\n   * @returns true\r\n   */\n  function ensureFullItem(item, idProp) {\n    if (item[idProp] == null) {\n      // generate an id\n      item[idProp] = v4();\n    }\n    return item;\n  }\n  /**\r\n   * # DataSet\r\n   *\r\n   * Vis.js comes with a flexible DataSet, which can be used to hold and\r\n   * manipulate unstructured data and listen for changes in the data. The DataSet\r\n   * is key/value based. Data items can be added, updated and removed from the\r\n   * DataSet, and one can subscribe to changes in the DataSet. The data in the\r\n   * DataSet can be filtered and ordered. Data can be normalized when appending it\r\n   * to the DataSet as well.\r\n   *\r\n   * ## Example\r\n   *\r\n   * The following example shows how to use a DataSet.\r\n   *\r\n   * ```javascript\r\n   * // create a DataSet\r\n   * var options = {};\r\n   * var data = new vis.DataSet(options);\r\n   *\r\n   * // add items\r\n   * // note that the data items can contain different properties and data formats\r\n   * data.add([\r\n   * {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},\r\n   * {id: 2, text: 'item 2', date: '2013-06-23', group: 2},\r\n   * {id: 3, text: 'item 3', date: '2013-06-25', group: 2},\r\n   * {id: 4, text: 'item 4'}\r\n   * ]);\r\n   *\r\n   * // subscribe to any change in the DataSet\r\n   * data.on('*', function (event, properties, senderId) {\r\n   * console.log('event', event, properties);\r\n   * });\r\n   *\r\n   * // update an existing item\r\n   * data.update({id: 2, group: 1});\r\n   *\r\n   * // remove an item\r\n   * data.remove(4);\r\n   *\r\n   * // get all ids\r\n   * var ids = data.getIds();\r\n   * console.log('ids', ids);\r\n   *\r\n   * // get a specific item\r\n   * var item1 = data.get(1);\r\n   * console.log('item1', item1);\r\n   *\r\n   * // retrieve a filtered subset of the data\r\n   * var items = data.get({\r\n   * filter: function (item) {\r\n   * return item.group == 1;\r\n   * }\r\n   * });\r\n   * console.log('filtered items', items);\r\n   * ```\r\n   * @typeParam Item - Item type that may or may not have an id.\r\n   * @typeParam IdProp - Name of the property that contains the id.\r\n   */\n  var DataSet = /*#__PURE__*/function (_DataSetPart) {\n    _inherits(DataSet, _DataSetPart);\n    var _super = _createSuper$1(DataSet);\n    /**\r\n     * Construct a new DataSet.\r\n     * @param data - Initial data or options.\r\n     * @param options - Options (type error if data is also options).\r\n     */\n    function DataSet(data, options) {\n      var _this;\n      _classCallCheck(this, DataSet);\n      _this = _super.call(this);\n      // correctly read optional arguments\n      _defineProperty(_assertThisInitialized(_this), \"_queue\", null);\n      if (data && !_Array$isArray(data)) {\n        options = data;\n        data = [];\n      }\n      _this._options = options || {};\n      _this._data = new _Map(); // map with data indexed by id\n      _this.length = 0; // number of items in the DataSet\n      _this._idProp = _this._options.fieldId || \"id\"; // name of the field containing id\n      // add initial data when provided\n      if (data && data.length) {\n        _this.add(data);\n      }\n      _this.setOptions(options);\n      return _this;\n    }\n    /**\r\n     * Set new options.\r\n     * @param options - The new options.\r\n     */\n    _createClass(DataSet, [{\n      key: \"idProp\",\n      get: /** Flush all queued calls. */\n\n      /** @inheritDoc */\n\n      /** @inheritDoc */\n      function get() {\n        return this._idProp;\n      }\n    }, {\n      key: \"setOptions\",\n      value: function setOptions(options) {\n        if (options && options.queue !== undefined) {\n          if (options.queue === false) {\n            // delete queue if loaded\n            if (this._queue) {\n              this._queue.destroy();\n              this._queue = null;\n            }\n          } else {\n            // create queue and update its options\n            if (!this._queue) {\n              this._queue = Queue.extend(this, {\n                replace: [\"add\", \"update\", \"remove\"]\n              });\n            }\n            if (options.queue && typeof options.queue === \"object\") {\n              this._queue.setOptions(options.queue);\n            }\n          }\n        }\n      }\n      /**\r\n       * Add a data item or an array with items.\r\n       *\r\n       * After the items are added to the DataSet, the DataSet will trigger an event `add`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n       *\r\n       * ## Example\r\n       *\r\n       * ```javascript\r\n       * // create a DataSet\r\n       * const data = new vis.DataSet()\r\n       *\r\n       * // add items\r\n       * const ids = data.add([\r\n       * { id: 1, text: 'item 1' },\r\n       * { id: 2, text: 'item 2' },\r\n       * { text: 'item without an id' }\r\n       * ])\r\n       *\r\n       * console.log(ids) // [1, 2, '<UUIDv4>']\r\n       * ```\r\n       * @param data - Items to be added (ids will be generated if missing).\r\n       * @param senderId - Sender id.\r\n       * @returns addedIds - Array with the ids (generated if not present) of the added items.\r\n       * @throws When an item with the same id as any of the added items already exists.\r\n       */\n    }, {\n      key: \"add\",\n      value: function add(data, senderId) {\n        var _this2 = this;\n        var addedIds = [];\n        var id;\n        if (_Array$isArray(data)) {\n          // Array\n          var idsToAdd = _mapInstanceProperty(data).call(data, function (d) {\n            return d[_this2._idProp];\n          });\n          if (_someInstanceProperty(idsToAdd).call(idsToAdd, function (id) {\n            return _this2._data.has(id);\n          })) {\n            throw new Error(\"A duplicate id was found in the parameter array.\");\n          }\n          for (var i = 0, len = data.length; i < len; i++) {\n            id = this._addItem(data[i]);\n            addedIds.push(id);\n          }\n        } else if (data && typeof data === \"object\") {\n          // Single item\n          id = this._addItem(data);\n          addedIds.push(id);\n        } else {\n          throw new Error(\"Unknown dataType\");\n        }\n        if (addedIds.length) {\n          this._trigger(\"add\", {\n            items: addedIds\n          }, senderId);\n        }\n        return addedIds;\n      }\n      /**\r\n       * Update existing items. When an item does not exist, it will be created.\r\n       * @remarks\r\n       * The provided properties will be merged in the existing item. When an item does not exist, it will be created.\r\n       *\r\n       * After the items are updated, the DataSet will trigger an event `add` for the added items, and an event `update`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n       *\r\n       * ## Example\r\n       *\r\n       * ```javascript\r\n       * // create a DataSet\r\n       * const data = new vis.DataSet([\r\n       *   { id: 1, text: 'item 1' },\r\n       *   { id: 2, text: 'item 2' },\r\n       *   { id: 3, text: 'item 3' }\r\n       * ])\r\n       *\r\n       * // update items\r\n       * const ids = data.update([\r\n       *   { id: 2, text: 'item 2 (updated)' },\r\n       *   { id: 4, text: 'item 4 (new)' }\r\n       * ])\r\n       *\r\n       * console.log(ids) // [2, 4]\r\n       * ```\r\n       *\r\n       * ## Warning for TypeScript users\r\n       * This method may introduce partial items into the data set. Use add or updateOnly instead for better type safety.\r\n       * @param data - Items to be updated (if the id is already present) or added (if the id is missing).\r\n       * @param senderId - Sender id.\r\n       * @returns updatedIds - The ids of the added (these may be newly generated if there was no id in the item from the data) or updated items.\r\n       * @throws When the supplied data is neither an item nor an array of items.\r\n       */\n    }, {\n      key: \"update\",\n      value: function update(data, senderId) {\n        var _this3 = this;\n        var addedIds = [];\n        var updatedIds = [];\n        var oldData = [];\n        var updatedData = [];\n        var idProp = this._idProp;\n        var addOrUpdate = function addOrUpdate(item) {\n          var origId = item[idProp];\n          if (origId != null && _this3._data.has(origId)) {\n            var fullItem = item; // it has an id, therefore it is a fullitem\n            var oldItem = _Object$assign({}, _this3._data.get(origId));\n            // update item\n            var id = _this3._updateItem(fullItem);\n            updatedIds.push(id);\n            updatedData.push(fullItem);\n            oldData.push(oldItem);\n          } else {\n            // add new item\n            var _id = _this3._addItem(item);\n            addedIds.push(_id);\n          }\n        };\n        if (_Array$isArray(data)) {\n          // Array\n          for (var i = 0, len = data.length; i < len; i++) {\n            if (data[i] && typeof data[i] === \"object\") {\n              addOrUpdate(data[i]);\n            } else {\n              console.warn(\"Ignoring input item, which is not an object at index \" + i);\n            }\n          }\n        } else if (data && typeof data === \"object\") {\n          // Single item\n          addOrUpdate(data);\n        } else {\n          throw new Error(\"Unknown dataType\");\n        }\n        if (addedIds.length) {\n          this._trigger(\"add\", {\n            items: addedIds\n          }, senderId);\n        }\n        if (updatedIds.length) {\n          var props = {\n            items: updatedIds,\n            oldData: oldData,\n            data: updatedData\n          };\n          // TODO: remove deprecated property 'data' some day\n          //Object.defineProperty(props, 'data', {\n          //  'get': (function() {\n          //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\n          //    return updatedData;\n          //  }).bind(this)\n          //});\n          this._trigger(\"update\", props, senderId);\n        }\n        return _concatInstanceProperty(addedIds).call(addedIds, updatedIds);\n      }\n      /**\r\n       * Update existing items. When an item does not exist, an error will be thrown.\r\n       * @remarks\r\n       * The provided properties will be deeply merged into the existing item.\r\n       * When an item does not exist (id not present in the data set or absent), an error will be thrown and nothing will be changed.\r\n       *\r\n       * After the items are updated, the DataSet will trigger an event `update`.\r\n       * When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n       *\r\n       * ## Example\r\n       *\r\n       * ```javascript\r\n       * // create a DataSet\r\n       * const data = new vis.DataSet([\r\n       *   { id: 1, text: 'item 1' },\r\n       *   { id: 2, text: 'item 2' },\r\n       *   { id: 3, text: 'item 3' },\r\n       * ])\r\n       *\r\n       * // update items\r\n       * const ids = data.update([\r\n       *   { id: 2, text: 'item 2 (updated)' }, // works\r\n       *   // { id: 4, text: 'item 4 (new)' }, // would throw\r\n       *   // { text: 'item 4 (new)' }, // would also throw\r\n       * ])\r\n       *\r\n       * console.log(ids) // [2]\r\n       * ```\r\n       * @param data - Updates (the id and optionally other props) to the items in this data set.\r\n       * @param senderId - Sender id.\r\n       * @returns updatedIds - The ids of the updated items.\r\n       * @throws When the supplied data is neither an item nor an array of items, when the ids are missing.\r\n       */\n    }, {\n      key: \"updateOnly\",\n      value: function updateOnly(data, senderId) {\n        var _context,\n          _this4 = this;\n        if (!_Array$isArray(data)) {\n          data = [data];\n        }\n        var updateEventData = _mapInstanceProperty(_context = _mapInstanceProperty(data).call(data, function (update) {\n          var oldData = _this4._data.get(update[_this4._idProp]);\n          if (oldData == null) {\n            throw new Error(\"Updating non-existent items is not allowed.\");\n          }\n          return {\n            oldData,\n            update\n          };\n        })).call(_context, function (_ref) {\n          var oldData = _ref.oldData,\n            update = _ref.update;\n          var id = oldData[_this4._idProp];\n          var updatedData = pureDeepObjectAssign(oldData, update);\n          _this4._data.set(id, updatedData);\n          return {\n            id,\n            oldData: oldData,\n            updatedData\n          };\n        });\n        if (updateEventData.length) {\n          var props = {\n            items: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {\n              return value.id;\n            }),\n            oldData: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {\n              return value.oldData;\n            }),\n            data: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {\n              return value.updatedData;\n            })\n          };\n          // TODO: remove deprecated property 'data' some day\n          //Object.defineProperty(props, 'data', {\n          //  'get': (function() {\n          //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\n          //    return updatedData;\n          //  }).bind(this)\n          //});\n          this._trigger(\"update\", props, senderId);\n          return props.items;\n        } else {\n          return [];\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"get\",\n      value: function get(first, second) {\n        // @TODO: Woudn't it be better to split this into multiple methods?\n        // parse the arguments\n        var id = undefined;\n        var ids = undefined;\n        var options = undefined;\n        if (isId(first)) {\n          // get(id [, options])\n          id = first;\n          options = second;\n        } else if (_Array$isArray(first)) {\n          // get(ids [, options])\n          ids = first;\n          options = second;\n        } else {\n          // get([, options])\n          options = first;\n        }\n        // determine the return type\n        var returnType = options && options.returnType === \"Object\" ? \"Object\" : \"Array\";\n        // @TODO: WTF is this? Or am I missing something?\n        // var returnType\n        // if (options && options.returnType) {\n        //   var allowedValues = ['Array', 'Object']\n        //   returnType =\n        //     allowedValues.indexOf(options.returnType) == -1\n        //       ? 'Array'\n        //       : options.returnType\n        // } else {\n        //   returnType = 'Array'\n        // }\n        // build options\n        var filter = options && _filterInstanceProperty(options);\n        var items = [];\n        var item = undefined;\n        var itemIds = undefined;\n        var itemId = undefined;\n        // convert items\n        if (id != null) {\n          // return a single item\n          item = this._data.get(id);\n          if (item && filter && !filter(item)) {\n            item = undefined;\n          }\n        } else if (ids != null) {\n          // return a subset of items\n          for (var i = 0, len = ids.length; i < len; i++) {\n            item = this._data.get(ids[i]);\n            if (item != null && (!filter || filter(item))) {\n              items.push(item);\n            }\n          }\n        } else {\n          var _context2;\n          // return all items\n          itemIds = _toConsumableArray(_keysInstanceProperty(_context2 = this._data).call(_context2));\n          for (var _i = 0, _len = itemIds.length; _i < _len; _i++) {\n            itemId = itemIds[_i];\n            item = this._data.get(itemId);\n            if (item != null && (!filter || filter(item))) {\n              items.push(item);\n            }\n          }\n        }\n        // order the results\n        if (options && options.order && id == undefined) {\n          this._sort(items, options.order);\n        }\n        // filter fields of the items\n        if (options && options.fields) {\n          var fields = options.fields;\n          if (id != undefined && item != null) {\n            item = this._filterFields(item, fields);\n          } else {\n            for (var _i2 = 0, _len2 = items.length; _i2 < _len2; _i2++) {\n              items[_i2] = this._filterFields(items[_i2], fields);\n            }\n          }\n        }\n        // return the results\n        if (returnType == \"Object\") {\n          var result = {};\n          for (var _i3 = 0, _len3 = items.length; _i3 < _len3; _i3++) {\n            var resultant = items[_i3];\n            // @TODO: Shoudn't this be this._fieldId?\n            // result[resultant.id] = resultant\n            var _id2 = resultant[this._idProp];\n            result[_id2] = resultant;\n          }\n          return result;\n        } else {\n          if (id != null) {\n            var _item;\n            // a single item\n            return (_item = item) !== null && _item !== void 0 ? _item : null;\n          } else {\n            // just return our array\n            return items;\n          }\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"getIds\",\n      value: function getIds(options) {\n        var data = this._data;\n        var filter = options && _filterInstanceProperty(options);\n        var order = options && options.order;\n        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n        var ids = [];\n        if (filter) {\n          // get filtered items\n          if (order) {\n            // create ordered list\n            var items = [];\n            for (var i = 0, len = itemIds.length; i < len; i++) {\n              var id = itemIds[i];\n              var item = this._data.get(id);\n              if (item != null && filter(item)) {\n                items.push(item);\n              }\n            }\n            this._sort(items, order);\n            for (var _i4 = 0, _len4 = items.length; _i4 < _len4; _i4++) {\n              ids.push(items[_i4][this._idProp]);\n            }\n          } else {\n            // create unordered list\n            for (var _i5 = 0, _len5 = itemIds.length; _i5 < _len5; _i5++) {\n              var _id3 = itemIds[_i5];\n              var _item2 = this._data.get(_id3);\n              if (_item2 != null && filter(_item2)) {\n                ids.push(_item2[this._idProp]);\n              }\n            }\n          }\n        } else {\n          // get all items\n          if (order) {\n            // create an ordered list\n            var _items = [];\n            for (var _i6 = 0, _len6 = itemIds.length; _i6 < _len6; _i6++) {\n              var _id4 = itemIds[_i6];\n              _items.push(data.get(_id4));\n            }\n            this._sort(_items, order);\n            for (var _i7 = 0, _len7 = _items.length; _i7 < _len7; _i7++) {\n              ids.push(_items[_i7][this._idProp]);\n            }\n          } else {\n            // create unordered list\n            for (var _i8 = 0, _len8 = itemIds.length; _i8 < _len8; _i8++) {\n              var _id5 = itemIds[_i8];\n              var _item3 = data.get(_id5);\n              if (_item3 != null) {\n                ids.push(_item3[this._idProp]);\n              }\n            }\n          }\n        }\n        return ids;\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"getDataSet\",\n      value: function getDataSet() {\n        return this;\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"forEach\",\n      value: function forEach(callback, options) {\n        var filter = options && _filterInstanceProperty(options);\n        var data = this._data;\n        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n        if (options && options.order) {\n          // execute forEach on ordered list\n          var items = this.get(options);\n          for (var i = 0, len = items.length; i < len; i++) {\n            var item = items[i];\n            var id = item[this._idProp];\n            callback(item, id);\n          }\n        } else {\n          // unordered\n          for (var _i9 = 0, _len9 = itemIds.length; _i9 < _len9; _i9++) {\n            var _id6 = itemIds[_i9];\n            var _item4 = this._data.get(_id6);\n            if (_item4 != null && (!filter || filter(_item4))) {\n              callback(_item4, _id6);\n            }\n          }\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"map\",\n      value: function map(callback, options) {\n        var filter = options && _filterInstanceProperty(options);\n        var mappedItems = [];\n        var data = this._data;\n        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n        // convert and filter items\n        for (var i = 0, len = itemIds.length; i < len; i++) {\n          var id = itemIds[i];\n          var item = this._data.get(id);\n          if (item != null && (!filter || filter(item))) {\n            mappedItems.push(callback(item, id));\n          }\n        }\n        // order items\n        if (options && options.order) {\n          this._sort(mappedItems, options.order);\n        }\n        return mappedItems;\n      }\n      /**\r\n       * Filter the fields of an item.\r\n       * @param item - The item whose fields should be filtered.\r\n       * @param fields - The names of the fields that will be kept.\r\n       * @typeParam K - Field name type.\r\n       * @returns The item without any additional fields.\r\n       */\n    }, {\n      key: \"_filterFields\",\n      value: function _filterFields(item, fields) {\n        var _context3;\n        if (!item) {\n          // item is null\n          return item;\n        }\n        return _reduceInstanceProperty(_context3 = _Array$isArray(fields) ?\n        // Use the supplied array\n        fields :\n        // Use the keys of the supplied object\n        _Object$keys(fields)).call(_context3, function (filteredItem, field) {\n          filteredItem[field] = item[field];\n          return filteredItem;\n        }, {});\n      }\n      /**\r\n       * Sort the provided array with items.\r\n       * @param items - Items to be sorted in place.\r\n       * @param order - A field name or custom sort function.\r\n       * @typeParam T - The type of the items in the items array.\r\n       */\n    }, {\n      key: \"_sort\",\n      value: function _sort(items, order) {\n        if (typeof order === \"string\") {\n          // order by provided field name\n          var name = order; // field name\n          _sortInstanceProperty(items).call(items, function (a, b) {\n            // @TODO: How to treat missing properties?\n            var av = a[name];\n            var bv = b[name];\n            return av > bv ? 1 : av < bv ? -1 : 0;\n          });\n        } else if (typeof order === \"function\") {\n          // order by sort function\n          _sortInstanceProperty(items).call(items, order);\n        } else {\n          // TODO: extend order by an Object {field:string, direction:string}\n          //       where direction can be 'asc' or 'desc'\n          throw new TypeError(\"Order must be a function or a string\");\n        }\n      }\n      /**\r\n       * Remove an item or multiple items by “reference” (only the id is used) or by id.\r\n       *\r\n       * The method ignores removal of non-existing items, and returns an array containing the ids of the items which are actually removed from the DataSet.\r\n       *\r\n       * After the items are removed, the DataSet will trigger an event `remove` for the removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n       *\r\n       * ## Example\r\n       * ```javascript\r\n       * // create a DataSet\r\n       * const data = new vis.DataSet([\r\n       * { id: 1, text: 'item 1' },\r\n       * { id: 2, text: 'item 2' },\r\n       * { id: 3, text: 'item 3' }\r\n       * ])\r\n       *\r\n       * // remove items\r\n       * const ids = data.remove([2, { id: 3 }, 4])\r\n       *\r\n       * console.log(ids) // [2, 3]\r\n       * ```\r\n       * @param id - One or more items or ids of items to be removed.\r\n       * @param senderId - Sender id.\r\n       * @returns The ids of the removed items.\r\n       */\n    }, {\n      key: \"remove\",\n      value: function remove(id, senderId) {\n        var removedIds = [];\n        var removedItems = [];\n        // force everything to be an array for simplicity\n        var ids = _Array$isArray(id) ? id : [id];\n        for (var i = 0, len = ids.length; i < len; i++) {\n          var item = this._remove(ids[i]);\n          if (item) {\n            var itemId = item[this._idProp];\n            if (itemId != null) {\n              removedIds.push(itemId);\n              removedItems.push(item);\n            }\n          }\n        }\n        if (removedIds.length) {\n          this._trigger(\"remove\", {\n            items: removedIds,\n            oldData: removedItems\n          }, senderId);\n        }\n        return removedIds;\n      }\n      /**\r\n       * Remove an item by its id or reference.\r\n       * @param id - Id of an item or the item itself.\r\n       * @returns The removed item if removed, null otherwise.\r\n       */\n    }, {\n      key: \"_remove\",\n      value: function _remove(id) {\n        // @TODO: It origianlly returned the item although the docs say id.\n        // The code expects the item, so probably an error in the docs.\n        var ident;\n        // confirm the id to use based on the args type\n        if (isId(id)) {\n          ident = id;\n        } else if (id && typeof id === \"object\") {\n          ident = id[this._idProp]; // look for the identifier field using ._idProp\n        }\n        // do the removing if the item is found\n        if (ident != null && this._data.has(ident)) {\n          var item = this._data.get(ident) || null;\n          this._data.delete(ident);\n          --this.length;\n          return item;\n        }\n        return null;\n      }\n      /**\r\n       * Clear the entire data set.\r\n       *\r\n       * After the items are removed, the {@link DataSet} will trigger an event `remove` for all removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n       * @param senderId - Sender id.\r\n       * @returns removedIds - The ids of all removed items.\r\n       */\n    }, {\n      key: \"clear\",\n      value: function clear(senderId) {\n        var _context4;\n        var ids = _toConsumableArray(_keysInstanceProperty(_context4 = this._data).call(_context4));\n        var items = [];\n        for (var i = 0, len = ids.length; i < len; i++) {\n          items.push(this._data.get(ids[i]));\n        }\n        this._data.clear();\n        this.length = 0;\n        this._trigger(\"remove\", {\n          items: ids,\n          oldData: items\n        }, senderId);\n        return ids;\n      }\n      /**\r\n       * Find the item with maximum value of a specified field.\r\n       * @param field - Name of the property that should be searched for max value.\r\n       * @returns Item containing max value, or null if no items.\r\n       */\n    }, {\n      key: \"max\",\n      value: function max(field) {\n        var _context5;\n        var max = null;\n        var maxField = null;\n        var _iterator = _createForOfIteratorHelper$1(_valuesInstanceProperty(_context5 = this._data).call(_context5)),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var item = _step.value;\n            var itemField = item[field];\n            if (typeof itemField === \"number\" && (maxField == null || itemField > maxField)) {\n              max = item;\n              maxField = itemField;\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n        return max || null;\n      }\n      /**\r\n       * Find the item with minimum value of a specified field.\r\n       * @param field - Name of the property that should be searched for min value.\r\n       * @returns Item containing min value, or null if no items.\r\n       */\n    }, {\n      key: \"min\",\n      value: function min(field) {\n        var _context6;\n        var min = null;\n        var minField = null;\n        var _iterator2 = _createForOfIteratorHelper$1(_valuesInstanceProperty(_context6 = this._data).call(_context6)),\n          _step2;\n        try {\n          for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n            var item = _step2.value;\n            var itemField = item[field];\n            if (typeof itemField === \"number\" && (minField == null || itemField < minField)) {\n              min = item;\n              minField = itemField;\n            }\n          }\n        } catch (err) {\n          _iterator2.e(err);\n        } finally {\n          _iterator2.f();\n        }\n        return min || null;\n      }\n      /**\r\n       * Find all distinct values of a specified field\r\n       * @param prop - The property name whose distinct values should be returned.\r\n       * @returns Unordered array containing all distinct values. Items without specified property are ignored.\r\n       */\n    }, {\n      key: \"distinct\",\n      value: function distinct(prop) {\n        var data = this._data;\n        var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n        var values = [];\n        var count = 0;\n        for (var i = 0, len = itemIds.length; i < len; i++) {\n          var id = itemIds[i];\n          var item = data.get(id);\n          var value = item[prop];\n          var exists = false;\n          for (var j = 0; j < count; j++) {\n            if (values[j] == value) {\n              exists = true;\n              break;\n            }\n          }\n          if (!exists && value !== undefined) {\n            values[count] = value;\n            count++;\n          }\n        }\n        return values;\n      }\n      /**\r\n       * Add a single item. Will fail when an item with the same id already exists.\r\n       * @param item - A new item to be added.\r\n       * @returns Added item's id. An id is generated when it is not present in the item.\r\n       */\n    }, {\n      key: \"_addItem\",\n      value: function _addItem(item) {\n        var fullItem = ensureFullItem(item, this._idProp);\n        var id = fullItem[this._idProp];\n        // check whether this id is already taken\n        if (this._data.has(id)) {\n          // item already exists\n          throw new Error(\"Cannot add item: item with id \" + id + \" already exists\");\n        }\n        this._data.set(id, fullItem);\n        ++this.length;\n        return id;\n      }\n      /**\r\n       * Update a single item: merge with existing item.\r\n       * Will fail when the item has no id, or when there does not exist an item with the same id.\r\n       * @param update - The new item\r\n       * @returns The id of the updated item.\r\n       */\n    }, {\n      key: \"_updateItem\",\n      value: function _updateItem(update) {\n        var id = update[this._idProp];\n        if (id == null) {\n          throw new Error(\"Cannot update item: item has no id (item: \" + _JSON$stringify(update) + \")\");\n        }\n        var item = this._data.get(id);\n        if (!item) {\n          // item doesn't exist\n          throw new Error(\"Cannot update item: no item with id \" + id + \" found\");\n        }\n        this._data.set(id, _objectSpread(_objectSpread({}, item), update));\n        return id;\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"stream\",\n      value: function stream(ids) {\n        if (ids) {\n          var data = this._data;\n          return new DataStream({\n            [_Symbol$iterator]() {\n              return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                var _iterator3, _step3, id, item;\n                return _regeneratorRuntime.wrap(function _callee$(_context7) {\n                  while (1) switch (_context7.prev = _context7.next) {\n                    case 0:\n                      _iterator3 = _createForOfIteratorHelper$1(ids);\n                      _context7.prev = 1;\n                      _iterator3.s();\n                    case 3:\n                      if ((_step3 = _iterator3.n()).done) {\n                        _context7.next = 11;\n                        break;\n                      }\n                      id = _step3.value;\n                      item = data.get(id);\n                      if (!(item != null)) {\n                        _context7.next = 9;\n                        break;\n                      }\n                      _context7.next = 9;\n                      return [id, item];\n                    case 9:\n                      _context7.next = 3;\n                      break;\n                    case 11:\n                      _context7.next = 16;\n                      break;\n                    case 13:\n                      _context7.prev = 13;\n                      _context7.t0 = _context7[\"catch\"](1);\n                      _iterator3.e(_context7.t0);\n                    case 16:\n                      _context7.prev = 16;\n                      _iterator3.f();\n                      return _context7.finish(16);\n                    case 19:\n                    case \"end\":\n                      return _context7.stop();\n                  }\n                }, _callee, null, [[1, 13, 16, 19]]);\n              })();\n            }\n          });\n        } else {\n          var _context8;\n          return new DataStream({\n            [_Symbol$iterator]: _bindInstanceProperty$1(_context8 = _entriesInstanceProperty(this._data)).call(_context8, this._data)\n          });\n        }\n      }\n    }]);\n    return DataSet;\n  }(DataSetPart);\n  function _createForOfIteratorHelper(o, allowArrayLike) {\n    var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"];\n    if (!it) {\n      if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n        if (it) o = it;\n        var i = 0;\n        var F = function F() {};\n        return {\n          s: F,\n          n: function n() {\n            if (i >= o.length) return {\n              done: true\n            };\n            return {\n              done: false,\n              value: o[i++]\n            };\n          },\n          e: function e(_e) {\n            throw _e;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var normalCompletion = true,\n      didErr = false,\n      err;\n    return {\n      s: function s() {\n        it = it.call(o);\n      },\n      n: function n() {\n        var step = it.next();\n        normalCompletion = step.done;\n        return step;\n      },\n      e: function e(_e2) {\n        didErr = true;\n        err = _e2;\n      },\n      f: function f() {\n        try {\n          if (!normalCompletion && it.return != null) it.return();\n        } finally {\n          if (didErr) throw err;\n        }\n      }\n    };\n  }\n  function _unsupportedIterableToArray(o, minLen) {\n    var _context5;\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = _sliceInstanceProperty(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return _Array$from$1(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n    return arr2;\n  }\n  function _createSuper(Derived) {\n    var hasNativeReflectConstruct = _isNativeReflectConstruct();\n    return function _createSuperInternal() {\n      var Super = _getPrototypeOf(Derived),\n        result;\n      if (hasNativeReflectConstruct) {\n        var NewTarget = _getPrototypeOf(this).constructor;\n        result = _Reflect$construct(Super, arguments, NewTarget);\n      } else {\n        result = Super.apply(this, arguments);\n      }\n      return _possibleConstructorReturn(this, result);\n    };\n  }\n  function _isNativeReflectConstruct() {\n    if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false;\n    if (_Reflect$construct.sham) return false;\n    if (typeof Proxy === \"function\") return true;\n    try {\n      Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {}));\n      return true;\n    } catch (e) {\n      return false;\n    }\n  }\n  /**\r\n   * DataView\r\n   *\r\n   * A DataView offers a filtered and/or formatted view on a DataSet. One can subscribe to changes in a DataView, and easily get filtered or formatted data without having to specify filters and field types all the time.\r\n   *\r\n   * ## Example\r\n   * ```javascript\r\n   * // create a DataSet\r\n   * var data = new vis.DataSet();\r\n   * data.add([\r\n   * {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},\r\n   * {id: 2, text: 'item 2', date: '2013-06-23', group: 2},\r\n   * {id: 3, text: 'item 3', date: '2013-06-25', group: 2},\r\n   * {id: 4, text: 'item 4'}\r\n   * ]);\r\n   *\r\n   * // create a DataView\r\n   * // the view will only contain items having a property group with value 1,\r\n   * // and will only output fields id, text, and date.\r\n   * var view = new vis.DataView(data, {\r\n   * filter: function (item) {\r\n   * return (item.group == 1);\r\n   * },\r\n   * fields: ['id', 'text', 'date']\r\n   * });\r\n   *\r\n   * // subscribe to any change in the DataView\r\n   * view.on('*', function (event, properties, senderId) {\r\n   * console.log('event', event, properties);\r\n   * });\r\n   *\r\n   * // update an item in the data set\r\n   * data.update({id: 2, group: 1});\r\n   *\r\n   * // get all ids in the view\r\n   * var ids = view.getIds();\r\n   * console.log('ids', ids); // will output [1, 2]\r\n   *\r\n   * // get all items in the view\r\n   * var items = view.get();\r\n   * ```\r\n   * @typeParam Item - Item type that may or may not have an id.\r\n   * @typeParam IdProp - Name of the property that contains the id.\r\n   */\n  var DataView = /*#__PURE__*/function (_DataSetPart) {\n    _inherits(DataView, _DataSetPart);\n    var _super = _createSuper(DataView);\n    // ids of the items currently in memory (just contains a boolean true)\n\n    /**\r\n     * Create a DataView.\r\n     * @param data - The instance containing data (directly or indirectly).\r\n     * @param options - Options to configure this data view.\r\n     */\n    function DataView(data, options) {\n      var _context;\n      var _this;\n      _classCallCheck(this, DataView);\n      _this = _super.call(this);\n      /** @inheritDoc */\n      _defineProperty(_assertThisInitialized(_this), \"length\", 0);\n      // constructor → setData\n      _defineProperty(_assertThisInitialized(_this), \"_ids\", new _Set());\n      _this._options = options || {};\n      _this._listener = _bindInstanceProperty$1(_context = _this._onEvent).call(_context, _assertThisInitialized(_this));\n      _this.setData(data);\n      return _this;\n    }\n    // TODO: implement a function .config() to dynamically update things like configured filter\n    // and trigger changes accordingly\n    /**\r\n     * Set a data source for the view.\r\n     * @param data - The instance containing data (directly or indirectly).\r\n     * @remarks\r\n     * Note that when the data view is bound to a data set it won't be garbage\r\n     * collected unless the data set is too. Use `dataView.setData(null)` or\r\n     * `dataView.dispose()` to enable garbage collection before you lose the last\r\n     * reference.\r\n     */\n    _createClass(DataView, [{\n      key: \"idProp\",\n      get: /** @inheritDoc */\n      function get() {\n        return this.getDataSet().idProp;\n      }\n    }, {\n      key: \"setData\",\n      value: function setData(data) {\n        if (this._data) {\n          // unsubscribe from current dataset\n          if (this._data.off) {\n            this._data.off(\"*\", this._listener);\n          }\n          // trigger a remove of all items in memory\n          var ids = this._data.getIds({\n            filter: _filterInstanceProperty(this._options)\n          });\n          var items = this._data.get(ids);\n          this._ids.clear();\n          this.length = 0;\n          this._trigger(\"remove\", {\n            items: ids,\n            oldData: items\n          });\n        }\n        if (data != null) {\n          this._data = data;\n          // trigger an add of all added items\n          var _ids = this._data.getIds({\n            filter: _filterInstanceProperty(this._options)\n          });\n          for (var i = 0, len = _ids.length; i < len; i++) {\n            var id = _ids[i];\n            this._ids.add(id);\n          }\n          this.length = _ids.length;\n          this._trigger(\"add\", {\n            items: _ids\n          });\n        } else {\n          this._data = new DataSet();\n        }\n        // subscribe to new dataset\n        if (this._data.on) {\n          this._data.on(\"*\", this._listener);\n        }\n      }\n      /**\r\n       * Refresh the DataView.\r\n       * Useful when the DataView has a filter function containing a variable parameter.\r\n       */\n    }, {\n      key: \"refresh\",\n      value: function refresh() {\n        var ids = this._data.getIds({\n          filter: _filterInstanceProperty(this._options)\n        });\n        var oldIds = _toConsumableArray(this._ids);\n        var newIds = {};\n        var addedIds = [];\n        var removedIds = [];\n        var removedItems = [];\n        // check for additions\n        for (var i = 0, len = ids.length; i < len; i++) {\n          var id = ids[i];\n          newIds[id] = true;\n          if (!this._ids.has(id)) {\n            addedIds.push(id);\n            this._ids.add(id);\n          }\n        }\n        // check for removals\n        for (var _i = 0, _len = oldIds.length; _i < _len; _i++) {\n          var _id = oldIds[_i];\n          var item = this._data.get(_id);\n          if (item == null) {\n            // @TODO: Investigate.\n            // Doesn't happen during tests or examples.\n            // Is it really impossible or could it eventually happen?\n            // How to handle it if it does? The types guarantee non-nullable items.\n            console.error(\"If you see this, report it please.\");\n          } else if (!newIds[_id]) {\n            removedIds.push(_id);\n            removedItems.push(item);\n            this._ids.delete(_id);\n          }\n        }\n        this.length += addedIds.length - removedIds.length;\n        // trigger events\n        if (addedIds.length) {\n          this._trigger(\"add\", {\n            items: addedIds\n          });\n        }\n        if (removedIds.length) {\n          this._trigger(\"remove\", {\n            items: removedIds,\n            oldData: removedItems\n          });\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"get\",\n      value: function get(first, second) {\n        if (this._data == null) {\n          return null;\n        }\n        // parse the arguments\n        var ids = null;\n        var options;\n        if (isId(first) || _Array$isArray(first)) {\n          ids = first;\n          options = second;\n        } else {\n          options = first;\n        }\n        // extend the options with the default options and provided options\n        var viewOptions = _Object$assign({}, this._options, options);\n        // create a combined filter method when needed\n        var thisFilter = _filterInstanceProperty(this._options);\n        var optionsFilter = options && _filterInstanceProperty(options);\n        if (thisFilter && optionsFilter) {\n          viewOptions.filter = function (item) {\n            return thisFilter(item) && optionsFilter(item);\n          };\n        }\n        if (ids == null) {\n          return this._data.get(viewOptions);\n        } else {\n          return this._data.get(ids, viewOptions);\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"getIds\",\n      value: function getIds(options) {\n        if (this._data.length) {\n          var defaultFilter = _filterInstanceProperty(this._options);\n          var optionsFilter = options != null ? _filterInstanceProperty(options) : null;\n          var filter;\n          if (optionsFilter) {\n            if (defaultFilter) {\n              filter = function filter(item) {\n                return defaultFilter(item) && optionsFilter(item);\n              };\n            } else {\n              filter = optionsFilter;\n            }\n          } else {\n            filter = defaultFilter;\n          }\n          return this._data.getIds({\n            filter: filter,\n            order: options && options.order\n          });\n        } else {\n          return [];\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"forEach\",\n      value: function forEach(callback, options) {\n        if (this._data) {\n          var _context2;\n          var defaultFilter = _filterInstanceProperty(this._options);\n          var optionsFilter = options && _filterInstanceProperty(options);\n          var filter;\n          if (optionsFilter) {\n            if (defaultFilter) {\n              filter = function filter(item) {\n                return defaultFilter(item) && optionsFilter(item);\n              };\n            } else {\n              filter = optionsFilter;\n            }\n          } else {\n            filter = defaultFilter;\n          }\n          _forEachInstanceProperty(_context2 = this._data).call(_context2, callback, {\n            filter: filter,\n            order: options && options.order\n          });\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"map\",\n      value: function map(callback, options) {\n        if (this._data) {\n          var _context3;\n          var defaultFilter = _filterInstanceProperty(this._options);\n          var optionsFilter = options && _filterInstanceProperty(options);\n          var filter;\n          if (optionsFilter) {\n            if (defaultFilter) {\n              filter = function filter(item) {\n                return defaultFilter(item) && optionsFilter(item);\n              };\n            } else {\n              filter = optionsFilter;\n            }\n          } else {\n            filter = defaultFilter;\n          }\n          return _mapInstanceProperty(_context3 = this._data).call(_context3, callback, {\n            filter: filter,\n            order: options && options.order\n          });\n        } else {\n          return [];\n        }\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"getDataSet\",\n      value: function getDataSet() {\n        return this._data.getDataSet();\n      }\n      /** @inheritDoc */\n    }, {\n      key: \"stream\",\n      value: function stream(ids) {\n        var _context4;\n        return this._data.stream(ids || {\n          [_Symbol$iterator]: _bindInstanceProperty$1(_context4 = _keysInstanceProperty(this._ids)).call(_context4, this._ids)\n        });\n      }\n      /**\r\n       * Render the instance unusable prior to garbage collection.\r\n       * @remarks\r\n       * The intention of this method is to help discover scenarios where the data\r\n       * view is being used when the programmer thinks it has been garbage collected\r\n       * already. It's stricter version of `dataView.setData(null)`.\r\n       */\n    }, {\n      key: \"dispose\",\n      value: function dispose() {\n        var _this$_data;\n        if ((_this$_data = this._data) !== null && _this$_data !== void 0 && _this$_data.off) {\n          this._data.off(\"*\", this._listener);\n        }\n        var message = \"This data view has already been disposed of.\";\n        var replacement = {\n          get: function get() {\n            throw new Error(message);\n          },\n          set: function set() {\n            throw new Error(message);\n          },\n          configurable: false\n        };\n        var _iterator = _createForOfIteratorHelper(_Reflect$ownKeys(DataView.prototype)),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var key = _step.value;\n            _Object$defineProperty(this, key, replacement);\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      /**\r\n       * Event listener. Will propagate all events from the connected data set to the subscribers of the DataView, but will filter the items and only trigger when there are changes in the filtered data set.\r\n       * @param event - The name of the event.\r\n       * @param params - Parameters of the event.\r\n       * @param senderId - Id supplied by the sender.\r\n       */\n    }, {\n      key: \"_onEvent\",\n      value: function _onEvent(event, params, senderId) {\n        if (!params || !params.items || !this._data) {\n          return;\n        }\n        var ids = params.items;\n        var addedIds = [];\n        var updatedIds = [];\n        var removedIds = [];\n        var oldItems = [];\n        var updatedItems = [];\n        var removedItems = [];\n        switch (event) {\n          case \"add\":\n            // filter the ids of the added items\n            for (var i = 0, len = ids.length; i < len; i++) {\n              var id = ids[i];\n              var item = this.get(id);\n              if (item) {\n                this._ids.add(id);\n                addedIds.push(id);\n              }\n            }\n            break;\n          case \"update\":\n            // determine the event from the views viewpoint: an updated\n            // item can be added, updated, or removed from this view.\n            for (var _i2 = 0, _len2 = ids.length; _i2 < _len2; _i2++) {\n              var _id2 = ids[_i2];\n              var _item = this.get(_id2);\n              if (_item) {\n                if (this._ids.has(_id2)) {\n                  updatedIds.push(_id2);\n                  updatedItems.push(params.data[_i2]);\n                  oldItems.push(params.oldData[_i2]);\n                } else {\n                  this._ids.add(_id2);\n                  addedIds.push(_id2);\n                }\n              } else {\n                if (this._ids.has(_id2)) {\n                  this._ids.delete(_id2);\n                  removedIds.push(_id2);\n                  removedItems.push(params.oldData[_i2]);\n                }\n              }\n            }\n            break;\n          case \"remove\":\n            // filter the ids of the removed items\n            for (var _i3 = 0, _len3 = ids.length; _i3 < _len3; _i3++) {\n              var _id3 = ids[_i3];\n              if (this._ids.has(_id3)) {\n                this._ids.delete(_id3);\n                removedIds.push(_id3);\n                removedItems.push(params.oldData[_i3]);\n              }\n            }\n            break;\n        }\n        this.length += addedIds.length - removedIds.length;\n        if (addedIds.length) {\n          this._trigger(\"add\", {\n            items: addedIds\n          }, senderId);\n        }\n        if (updatedIds.length) {\n          this._trigger(\"update\", {\n            items: updatedIds,\n            oldData: oldItems,\n            data: updatedItems\n          }, senderId);\n        }\n        if (removedIds.length) {\n          this._trigger(\"remove\", {\n            items: removedIds,\n            oldData: removedItems\n          }, senderId);\n        }\n      }\n    }]);\n    return DataView;\n  }(DataSetPart);\n\n  /**\r\n   * Check that given value is compatible with Vis Data Set interface.\r\n   * @param idProp - The expected property to contain item id.\r\n   * @param v - The value to be tested.\r\n   * @returns True if all expected values and methods match, false otherwise.\r\n   */\n  function isDataSetLike(idProp, v) {\n    return typeof v === \"object\" && v !== null && idProp === v.idProp && typeof v.add === \"function\" && typeof v.clear === \"function\" && typeof v.distinct === \"function\" && typeof _forEachInstanceProperty(v) === \"function\" && typeof v.get === \"function\" && typeof v.getDataSet === \"function\" && typeof v.getIds === \"function\" && typeof v.length === \"number\" && typeof _mapInstanceProperty(v) === \"function\" && typeof v.max === \"function\" && typeof v.min === \"function\" && typeof v.off === \"function\" && typeof v.on === \"function\" && typeof v.remove === \"function\" && typeof v.setOptions === \"function\" && typeof v.stream === \"function\" && typeof v.update === \"function\" && typeof v.updateOnly === \"function\";\n  }\n\n  /**\r\n   * Check that given value is compatible with Vis Data View interface.\r\n   * @param idProp - The expected property to contain item id.\r\n   * @param v - The value to be tested.\r\n   * @returns True if all expected values and methods match, false otherwise.\r\n   */\n  function isDataViewLike(idProp, v) {\n    return typeof v === \"object\" && v !== null && idProp === v.idProp && typeof _forEachInstanceProperty(v) === \"function\" && typeof v.get === \"function\" && typeof v.getDataSet === \"function\" && typeof v.getIds === \"function\" && typeof v.length === \"number\" && typeof _mapInstanceProperty(v) === \"function\" && typeof v.off === \"function\" && typeof v.on === \"function\" && typeof v.stream === \"function\" && isDataSetLike(idProp, v.getDataSet());\n  }\n  exports.DELETE = DELETE;\n  exports.DataSet = DataSet;\n  exports.DataStream = DataStream;\n  exports.DataView = DataView;\n  exports.Queue = Queue;\n  exports.createNewDataPipeFrom = createNewDataPipeFrom;\n  exports.isDataSetLike = isDataSetLike;\n  exports.isDataViewLike = isDataViewLike;\n});\n//# sourceMappingURL=vis-data.js.map","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}