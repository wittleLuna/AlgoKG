{"ast":null,"code":"import React,{useState}from'react';import{Card,Typography,Tag,Button,Space,Collapse,Rate,message as antdMessage,Tooltip,Spin}from'antd';import{UserOutlined,RobotOutlined,CopyOutlined,LikeOutlined,DislikeOutlined,ExpandAltOutlined,StarOutlined}from'@ant-design/icons';import ReactMarkdown from'react-markdown';import{Prism as SyntaxHighlighter}from'react-syntax-highlighter';import{tomorrow}from'react-syntax-highlighter/dist/esm/styles/prism';import EnhancedReasoningPath from'./EnhancedReasoningPath';import InteractiveContent from'../common/InteractiveContent';import SmartLinkSuggestions from'../common/SmartLinkSuggestions';import SmartTagDisplay from'../common/SmartTagDisplay';import EmbeddedAlgorithmVisualizer from'../visualization/EmbeddedAlgorithmVisualizer';import InlineKnowledgeGraph from'./InlineKnowledgeGraph';import EnhancedSimilarProblems from'./EnhancedSimilarProblems';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const{Text,Title,Paragraph}=Typography;const{Panel}=Collapse;const MessageItem=_ref=>{let{message,onConceptClick,onProblemClick}=_ref;const[showFullResponse,setShowFullResponse]=useState(false);const[userRating,setUserRating]=useState(0);const[enhancedGraphData,setEnhancedGraphData]=useState(null);const[graphLoading,setGraphLoading]=useState(false);const[isFavorited,setIsFavorited]=useState(false);const isUser=message.type==='user';const response=message.response;// 检查是否已收藏\nReact.useEffect(()=>{const favorites=JSON.parse(localStorage.getItem('favorites')||'[]');const messageId=`${message.type}-${message.timestamp}-${message.content.substring(0,50)}`;setIsFavorited(favorites.some(fav=>fav.id===messageId));},[message]);// 收藏/取消收藏\nconst handleFavorite=()=>{const favorites=JSON.parse(localStorage.getItem('favorites')||'[]');const messageId=`${message.type}-${message.timestamp}-${message.content.substring(0,50)}`;if(isFavorited){// 取消收藏\nconst newFavorites=favorites.filter(fav=>fav.id!==messageId);localStorage.setItem('favorites',JSON.stringify(newFavorites));setIsFavorited(false);antdMessage.success('已取消收藏');}else{// 添加收藏\nconst favoriteItem={id:messageId,type:message.type==='user'?'query':'response',title:message.type==='user'?message.content.substring(0,100):'系统回答',content:message.content,timestamp:message.timestamp||Date.now(),tags:(response===null||response===void 0?void 0:response.entities)||[],category:(response===null||response===void 0?void 0:response.intent)||'general',metadata:{reasoning_path:response===null||response===void 0?void 0:response.reasoning_path,similar_problems:response===null||response===void 0?void 0:response.similar_problems,response_metadata:response===null||response===void 0?void 0:response.metadata}};const newFavorites=[...favorites,favoriteItem];localStorage.setItem('favorites',JSON.stringify(newFavorites));setIsFavorited(true);antdMessage.success('已添加到收藏');}};// 获取增强的图谱数据（使用与独立图谱页面相同的API）\nconst fetchEnhancedGraphData=async entityName=>{if(!entityName||graphLoading)return;setGraphLoading(true);try{const response=await fetch('/api/v1/graph/unified/query?data_sources=neo4j&data_sources=embedding',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({entity_name:entityName.trim(),depth:2,limit:50})});if(response.ok){const data=await response.json();setEnhancedGraphData(data);console.log(`✅ 获取增强图谱数据成功: ${entityName}`,data);}else{console.error('❌ 获取增强图谱数据失败:',response.status);}}catch(error){console.error('❌ 获取增强图谱数据错误:',error);}finally{setGraphLoading(false);}};// 当有实体时自动获取增强图谱数据\nReact.useEffect(()=>{if(response!==null&&response!==void 0&&response.entities&&response.entities.length>0&&!enhancedGraphData&&!graphLoading){const mainEntity=response.entities[0];console.log(`🔍 检测到实体，获取增强图谱数据: ${mainEntity}`);fetchEnhancedGraphData(mainEntity);}},[response===null||response===void 0?void 0:response.entities,enhancedGraphData,graphLoading]);// 检测是否包含可视化的算法代码\nconst detectAlgorithmCode=(code,language)=>{if(!code||language!=='javascript'&&language!=='js')return null;const algorithmPatterns={bubble_sort:/bubbleSort|冒泡排序/i,selection_sort:/selectionSort|选择排序/i,insertion_sort:/insertionSort|插入排序/i,quick_sort:/quickSort|快速排序/i,merge_sort:/mergeSort|归并排序/i,binary_search:/binarySearch|二分查找/i};for(const[algorithm,pattern]of Object.entries(algorithmPatterns)){if(pattern.test(code)){return algorithm;}}return null;};// 提取数组数据\nconst extractArrayData=code=>{const arrayMatch=code.match(/\\[[\\d\\s,]+\\]/);if(arrayMatch){try{return JSON.parse(arrayMatch[0]);}catch(e){// 忽略解析错误\n}}return[64,34,25,12,22,11,90];// 默认数据\n};// 深度调试函数\nconst debugData=(data,name)=>{console.log(`=== ${name} 调试信息 ===`);console.log('类型:',typeof data);console.log('值:',data);if(data&&typeof data==='object'){console.log('键:',Object.keys(data));console.log('JSON:',JSON.stringify(data,null,2));}console.log('========================');};// 调试消息和响应数据\nReact.useEffect(()=>{debugData(message,'Message');debugData(message.content,'Message Content');debugData(response,'Response');if(response){debugData(response.integrated_response,'Integrated Response');debugData(response.concept_explanation,'Concept Explanation');}},[message,response]);// 安全渲染函数，处理对象显示问题\nconst safeRender=value=>{if(value===null||value===undefined){return'';}if(typeof value==='string'){return value;}if(typeof value==='number'||typeof value==='boolean'){return String(value);}if(Array.isArray(value)){return value.map(item=>safeRender(item)).filter(Boolean).join(', ');}if(value&&typeof value==='object'){// 检查是否是React元素\nif(value.$$typeof){return'[React Element]';}// 特殊处理Neo4j节点对象\nif(value.element_id&&value.labels&&value.properties){const props=value.properties;const name=props.name||props.title||props.concept_name||'未知算法';const description=props.description||'';const category=props.category||'';// 返回美化的节点信息\nreturn`**${name}**${category?` (${category})`:''}${description?` - ${description}`:''}`;}// 特殊处理常见的对象类型 - 按优先级排序\nif(value.name&&typeof value.name==='string')return value.name;if(value.title&&typeof value.title==='string')return value.title;if(value.text&&typeof value.text==='string')return value.text;if(value.content&&typeof value.content==='string')return value.content;if(value.label&&typeof value.label==='string')return value.label;if(value.description&&typeof value.description==='string')return value.description;if(value.concept_name&&typeof value.concept_name==='string')return value.concept_name;if(value.algorithm&&typeof value.algorithm==='string')return value.algorithm;// 如果对象只有一个属性，返回该属性的值\nconst keys=Object.keys(value);if(keys.length===1){return safeRender(value[keys[0]]);}// 对于复杂对象，尝试提取有意义的信息\nif(keys.includes('algorithm')&&keys.includes('description')){return`${safeRender(value.algorithm)}: ${safeRender(value.description)}`;}if(keys.includes('concept')&&keys.includes('explanation')){return`${safeRender(value.concept)} - ${safeRender(value.explanation)}`;}if(keys.includes('concept_name')&&keys.includes('definition')){return`${safeRender(value.concept_name)}: ${safeRender(value.definition)}`;}// 尝试找到最有意义的字符串属性\nconst meaningfulKeys=keys.filter(key=>typeof value[key]==='string'&&value[key].length>0&&!['id','created_at','updated_at','$$typeof'].includes(key));if(meaningfulKeys.length>0){return safeRender(value[meaningfulKeys[0]]);}// 最后返回简化的描述而不是[object Object]\nreturn keys.length>0?`{${keys.slice(0,2).join(', ')}}`:'{}';}return String(value||'');};// 安全渲染数组\nconst safeRenderArray=arr=>{if(!Array.isArray(arr)){return[safeRender(arr)];}return arr.map(item=>safeRender(item));};// 深度清理对象引用的函数\nconst deepCleanObjectReferences=text=>{return text// 清理各种对象引用模式\n.replace(/\\[object Object\\]/g,'').replace(/\\{object Object\\}/g,'').replace(/Object\\s*\\{\\s*\\}/g,'').replace(/\\{\\s*\\[object Object\\]\\s*\\}/g,'').replace(/\\[\\s*\\[object Object\\]\\s*\\]/g,'')// 清理空的数据结构\n.replace(/\\{\\s*\\}/g,'').replace(/\\[\\s*\\]/g,'').replace(/\\(\\s*\\)/g,'')// 清理多余的标点符号\n.replace(/,\\s*,/g,',').replace(/:\\s*,/g,'').replace(/,\\s*:/g,':')// 清理多余的空白\n.replace(/\\s{3,}/g,'  ').replace(/\\n\\s*\\n\\s*\\n/g,'\\n\\n').trim();};// 处理消息内容，替换可能的对象引用\nconst processMessageContent=content=>{if(!content)return'';console.log('MessageItem - 原始消息内容:',content);console.log('MessageItem - 内容类型:',typeof content);// 简化处理逻辑，避免过度复杂化\nlet processedContent='';// 处理不同类型的内容\nif(typeof content==='string'){processedContent=content;}else if(content&&typeof content==='object'){// 如果内容是对象，尝试提取有意义的信息\nif(content.integrated_response){processedContent=String(content.integrated_response);}else if(content.content){processedContent=String(content.content);}else if(content.text){processedContent=String(content.text);}else{// 对于其他对象，使用简单的字符串转换\nprocessedContent=JSON.stringify(content,null,2);}}else{processedContent=String(content||'');}// 首先处理Neo4j节点对象的显示 - 在其他清理之前进行\nprocessedContent=processedContent// 处理完整的Neo4j节点格式\n.replace(/<Node element_id='(\\d+)' labels=frozenset\\(\\{[^}]*\\}\\) properties=\\{([^}]+)\\}>/g,(match,elementId,propertiesStr)=>{console.log('Neo4j节点匹配:',match);console.log('属性字符串:',propertiesStr);try{// 尝试解析属性字符串 - 更精确的匹配\nconst nameMatch=propertiesStr.match(/'name':\\s*'([^']+)'/);const descMatch=propertiesStr.match(/'description':\\s*'([^']+)'/);const categoryMatch=propertiesStr.match(/'category':\\s*'([^']+)'/);const difficultyMatch=propertiesStr.match(/'difficulty':\\s*'([^']+)'/);const platformMatch=propertiesStr.match(/'platform':\\s*'([^']+)'/);const tagsMatch=propertiesStr.match(/'tags':\\s*\\[([^\\]]*)\\]/);const titleMatch=propertiesStr.match(/'title':\\s*'([^']+)'/);const name=nameMatch?nameMatch[1]:titleMatch?titleMatch[1]:'未知内容';const description=descMatch?descMatch[1]:'';const category=categoryMatch?categoryMatch[1]:'';const difficulty=difficultyMatch?difficultyMatch[1]:'';const platform=platformMatch?platformMatch[1]:'';console.log('解析结果:',{name,description,category,difficulty,platform});// 过滤掉Solution节点，只显示有意义的节点\nconst isSolutionNode=match.includes(\"'Solution'\")||match.includes('\"Solution\"');if(isSolutionNode){console.log('跳过Solution节点');return'';// 不显示Solution节点\n}// 检查是否是题目节点（通过标签或字段判断）\nconst isAlgorithmNode=match.includes(\"'Algorithm'\")||match.includes('\"Algorithm\"');const isProblemNode=match.includes(\"'Problem'\")||match.includes('\"Problem\"')||difficulty||platform||name.includes('路径')||name.includes('问题')||name.includes('题目');if(isProblemNode&&!isAlgorithmNode){// 题目节点的格式化显示\nlet result=`\\n\\n> 📝 **${name}**`;// 添加难度标签\nif(difficulty){const difficultyColor=difficulty==='简单'?'🟢':difficulty==='中等'?'🟡':'🔴';result+=` ${difficultyColor} \\`${difficulty}\\``;}// 添加平台标签\nif(platform){result+=` 🏷️ \\`${platform}\\``;}// 添加描述\nif(description){result+=`\\n> \\n> ${description}`;}// 添加分类\nif(category){result+=`\\n> \\n> 🏷️ **分类**: ${category}`;}console.log('题目节点格式化结果:',result);return result+'\\n';}else{// 算法节点的格式化显示\nconst result=`\\n\\n> 🔍 **${name}**${category?` \\`${category}\\``:''}\\n> \\n> ${description||'相关算法概念'}\\n`;console.log('算法节点格式化结果:',result);return result;}}catch(e){console.error('Neo4j节点解析错误:',e);return`\\n\\n> 🔍 **相关内容**\\n`;}})// 处理简化的Neo4j节点格式（只有属性部分）\n.replace(/\\{[^}]*'name':\\s*'([^']+)'[^}]*'description':\\s*'([^']*)'[^}]*'category':\\s*'([^']*)'[^}]*\\}/g,(match,name,description,category)=>{console.log('简化节点匹配:',{name,description,category});return`\\n\\n> 🔍 **${name}**${category?` \\`${category}\\``:''}\\n> \\n> ${description||'相关概念'}\\n`;})// 处理数组中的多个节点（如 +12个）\n.replace(/\\+(\\d+)个/g,(match,count)=>{return`等${count}个相关内容`;})// 处理单独的节点属性显示\n.replace(/properties=\\{([^}]+)\\}/g,(match,propertiesStr)=>{try{const nameMatch=propertiesStr.match(/'name':\\s*'([^']+)'/);const descMatch=propertiesStr.match(/'description':\\s*'([^']+)'/);const categoryMatch=propertiesStr.match(/'category':\\s*'([^']+)'/);if(nameMatch){const name=nameMatch[1];const description=descMatch?descMatch[1]:'';const category=categoryMatch?categoryMatch[1]:'';return`**${name}**${category?` (${category})`:''}${description?` - ${description}`:''}`;}}catch(e){console.error('属性解析错误:',e);}return'相关内容';});// 在Neo4j节点处理完成后，进行其他清理\nprocessedContent=processedContent// 清理对象引用\n.replace(/\\[object Object\\]/g,'相关内容').replace(/\\{object Object\\}/g,'相关内容').replace(/Object\\s*\\{\\s*\\}/g,'')// 清理多余的符号和空值，但保留Markdown格式\n.replace(/\\{\\}/g,'').replace(/\\[\\]/g,'').replace(/\\bundefined\\b/g,'')// 只替换独立的undefined单词\n.replace(/\\bnull\\b/g,'')// 只替换独立的null单词\n.replace(/,\\s*:/g,':').replace(/:\\s*,/g,'').replace(/,\\s*,/g,',')// 清理\"相似题目推荐：无\"等无效推荐信息\n.replace(/相似题目推荐\\s*[:：]\\s*无\\s*/g,'').replace(/相似题目推荐\\s*[:：]\\s*暂无\\s*/g,'').replace(/相似题目推荐\\s*[:：]\\s*\\n\\s*无\\s*/g,'').replace(/##?\\s*相似题目推荐\\s*\\n\\s*无\\s*/g,'').replace(/##?\\s*相似题目推荐\\s*\\n\\s*暂无\\s*/g,'')// 保留Markdown格式：只合并行内的多个空格，保留换行和缩进\n.replace(/[ \\t]+/g,' ')// 合并行内的空格和制表符\n.replace(/\\n[ \\t]+\\n/g,'\\n\\n')// 清理空行中的空格\n.replace(/\\n{3,}/g,'\\n\\n')// 合并超过2个的连续换行\n.trim();// 最后检查：如果内容为空或仍有问题，提供默认内容\nif(!processedContent||processedContent.trim()===''||processedContent.trim()==='undefined'){processedContent='正在生成回答...';}console.log('处理后的内容:',processedContent);return processedContent;};const handleCopy=text=>{navigator.clipboard.writeText(text);antdMessage.success('已复制到剪贴板');};const handleConceptClick=concept=>{if(onConceptClick){onConceptClick(concept);}};const handleProblemClick=problem=>{if(onProblemClick){onProblemClick(problem);}};// 获取可点击的概念和题目\nconst getClickableItems=()=>{var _response$concept_exp,_response$concept_exp2,_response$concept_exp3,_response$concept_exp4,_response$concept_exp5,_response$example_pro,_response$similar_pro,_response$example_pro2,_response$similar_pro2;// 从多个来源收集可点击概念\nconst conceptSources=[// 1. 概念解释中的可点击概念\n...((response===null||response===void 0?void 0:(_response$concept_exp=response.concept_explanation)===null||_response$concept_exp===void 0?void 0:_response$concept_exp.clickable_concepts)||[]),// 2. 学习进阶中的前置和后续概念\n...((response===null||response===void 0?void 0:(_response$concept_exp2=response.concept_explanation)===null||_response$concept_exp2===void 0?void 0:(_response$concept_exp3=_response$concept_exp2.learning_progression)===null||_response$concept_exp3===void 0?void 0:_response$concept_exp3.prerequisites)||[]),...((response===null||response===void 0?void 0:(_response$concept_exp4=response.concept_explanation)===null||_response$concept_exp4===void 0?void 0:(_response$concept_exp5=_response$concept_exp4.learning_progression)===null||_response$concept_exp5===void 0?void 0:_response$concept_exp5.next_concepts)||[]),// 3. 从实体列表中提取\n...((response===null||response===void 0?void 0:response.entities)||[]),// 4. 从题目标签中提取算法和数据结构概念\n...((response===null||response===void 0?void 0:(_response$example_pro=response.example_problems)===null||_response$example_pro===void 0?void 0:_response$example_pro.flatMap(p=>[...(p.algorithm_tags||[]),...(p.data_structure_tags||[]),...(p.technique_tags||[])]))||[]),// 5. 从相似题目的共享标签中提取\n...((response===null||response===void 0?void 0:(_response$similar_pro=response.similar_problems)===null||_response$similar_pro===void 0?void 0:_response$similar_pro.flatMap(p=>p.shared_tags||[]))||[]),// 6. 常见算法概念（硬编码的重要概念）\n'深度优先搜索','广度优先搜索','动态规划','贪心算法','回溯算法','分治算法','二分查找','双指针','滑动窗口','最短路径算法','Dijkstra','Floyd-Warshall','最小生成树','Prim','Kruskal','二叉树','链表','栈','队列','堆','哈希表','图','字典树','并查集','线段树'];// 去重并过滤空值\nconst filteredSources=conceptSources.filter(Boolean);const uniqueSet=new Set(filteredSources);const concepts=Array.from(uniqueSet);const problems=[...((response===null||response===void 0?void 0:(_response$example_pro2=response.example_problems)===null||_response$example_pro2===void 0?void 0:_response$example_pro2.map(p=>p.title))||[]),...((response===null||response===void 0?void 0:(_response$similar_pro2=response.similar_problems)===null||_response$similar_pro2===void 0?void 0:_response$similar_pro2.map(p=>p.title))||[])];return{concepts,problems};};const renderProblemCard=(problem,index)=>/*#__PURE__*/_jsx(Tooltip,{title:\"\\u70B9\\u51FB\\u67E5\\u770B\\u9898\\u76EE\\u8BE6\\u60C5\",placement:\"top\",children:/*#__PURE__*/_jsxs(Card,{size:\"small\",className:\"problem-card\",hoverable:true,onClick:()=>handleProblemClick(problem.title),style:{marginBottom:8,cursor:'pointer',transition:'all 0.3s ease'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"problem-header\",children:[/*#__PURE__*/_jsxs(Title,{level:5,style:{margin:0,color:'#1890ff'},children:[\"\\uD83D\\uDD17 \",problem.title]}),/*#__PURE__*/_jsxs(Space,{children:[problem.difficulty&&/*#__PURE__*/_jsx(Tag,{color:problem.difficulty==='简单'?'green':problem.difficulty==='中等'?'orange':'red',children:problem.difficulty}),problem.platform&&/*#__PURE__*/_jsx(Tag,{color:\"blue\",children:problem.platform})]})]}),problem.description&&/*#__PURE__*/_jsx(Paragraph,{ellipsis:{rows:2,expandable:true},style:{marginTop:8,marginBottom:8},children:problem.description}),/*#__PURE__*/_jsxs(\"div\",{className:\"problem-tags\",children:[problem.algorithm_tags.map(tag=>/*#__PURE__*/_jsx(Tag,{color:\"purple\",size:\"small\",children:tag},tag)),problem.data_structure_tags.map(tag=>/*#__PURE__*/_jsx(Tag,{color:\"cyan\",size:\"small\",children:tag},tag))]})]},index)});const renderSimilarProblem=(similar,index)=>/*#__PURE__*/_jsx(Tooltip,{title:\"\\u70B9\\u51FB\\u67E5\\u770B\\u9898\\u76EE\\u8BE6\\u60C5\",placement:\"top\",children:/*#__PURE__*/_jsxs(Card,{size:\"small\",className:\"similar-problem-card\",hoverable:true,onClick:()=>handleProblemClick(similar.title),style:{marginBottom:8,cursor:'pointer',transition:'all 0.3s ease'},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"similar-header\",children:[/*#__PURE__*/_jsxs(Title,{level:5,style:{margin:0,color:'#1890ff'},children:[\"\\uD83D\\uDD17 \",similar.title]}),/*#__PURE__*/_jsxs(\"div\",{className:\"similarity-score\",children:[/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"\\u76F8\\u4F3C\\u5EA6: \"}),/*#__PURE__*/_jsxs(Text,{strong:true,children:[Math.min(similar.hybrid_score*100,100).toFixed(1),\"%\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"recommendation-info\",children:[/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"\\u63A8\\u8350\\u7406\\u7531: \"}),/*#__PURE__*/_jsx(Text,{children:similar.recommendation_reason})]}),similar.learning_path&&/*#__PURE__*/_jsxs(\"div\",{className:\"learning-path\",children:[/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"\\u5B66\\u4E60\\u8DEF\\u5F84: \"}),/*#__PURE__*/_jsx(Text,{italic:true,children:similar.learning_path})]}),/*#__PURE__*/_jsx(\"div\",{className:\"shared-tags\",children:/*#__PURE__*/_jsx(SmartTagDisplay,{tags:similar.shared_tags,maxTags:6,size:\"small\",showTooltip:true})})]},index)});if(isUser){return/*#__PURE__*/_jsxs(\"div\",{className:\"message-item user-message\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:/*#__PURE__*/_jsx(UserOutlined,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsx(Card,{children:/*#__PURE__*/_jsx(Text,{children:message.content})})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:`\n          .message-item {\n            display: flex;\n            margin-bottom: 16px;\n            align-items: flex-start;\n          }\n          \n          .user-message {\n            flex-direction: row-reverse;\n          }\n          \n          .message-avatar {\n            width: 40px;\n            height: 40px;\n            border-radius: 50%;\n            background: #1890ff;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            color: white;\n            margin: 0 12px;\n            flex-shrink: 0;\n          }\n          \n          .message-content {\n            flex: 1;\n            max-width: 70%;\n          }\n        `})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"message-item assistant-message\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:/*#__PURE__*/_jsx(RobotOutlined,{})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-content\",children:/*#__PURE__*/_jsxs(Card,{className:`response-card ${message.isCancelled?'cancelled-message':''}`,children:[message.isCancelled&&/*#__PURE__*/_jsxs(\"div\",{className:\"cancelled-notice\",children:[/*#__PURE__*/_jsx(Tag,{color:\"orange\",children:\"\\u56DE\\u7B54\\u5DF2\\u53D6\\u6D88\"}),/*#__PURE__*/_jsx(Text,{type:\"secondary\",style:{marginLeft:8},children:\"\\u7528\\u6237\\u53D6\\u6D88\\u4E86\\u6B64\\u6B21\\u56DE\\u7B54\"})]}),!message.isCancelled&&(()=>{console.log('MessageItem - 检查推理步骤:',message.reasoning_steps);console.log('MessageItem - 推理步骤长度:',Array.isArray(message.reasoning_steps)?message.reasoning_steps.length:0);return Array.isArray(message.reasoning_steps)&&message.reasoning_steps.length>0;})()&&/*#__PURE__*/_jsx(\"div\",{className:\"reasoning-section\",children:/*#__PURE__*/_jsx(EnhancedReasoningPath,{steps:message.reasoning_steps,isStreaming:message.isStreaming,onStepClick:step=>{console.log('Step clicked:',step);// 可以在这里添加步骤点击处理逻辑\n}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"main-response\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"response-header\",children:[/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"AI\\u52A9\\u624B\\u56DE\\u7B54\"}),response&&/*#__PURE__*/_jsxs(Tag,{color:\"green\",children:[\"\\u7F6E\\u4FE1\\u5EA6: \",(response.confidence*100).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(CopyOutlined,{}),onClick:()=>handleCopy(message.content),size:\"small\"}),/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(StarOutlined,{style:{color:isFavorited?'#faad14':undefined}}),onClick:handleFavorite,size:\"small\",title:isFavorited?'取消收藏':'收藏'}),/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(ExpandAltOutlined,{}),onClick:()=>setShowFullResponse(!showFullResponse),size:\"small\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"response-content\",children:/*#__PURE__*/_jsx(ReactMarkdown,{components:{code(_ref2){let{node,inline,className,children,...props}=_ref2;const match=/language-(\\w+)/.exec(className||'');const codeContent=String(children).replace(/\\n$/,'');const language=match?match[1]:'';const detectedAlgorithm=detectAlgorithmCode(codeContent,language);if(!inline&&match){return/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:16},children:[/*#__PURE__*/_jsx(SyntaxHighlighter,{style:tomorrow,language:language,PreTag:\"div\",...props,children:codeContent}),detectedAlgorithm&&/*#__PURE__*/_jsx(\"div\",{style:{marginTop:12},children:/*#__PURE__*/_jsx(EmbeddedAlgorithmVisualizer,{code:codeContent,algorithm:detectedAlgorithm,data:extractArrayData(codeContent),height:180,autoPlay:true})})]});}else{return/*#__PURE__*/_jsx(\"code\",{className:className,...props,children:children});}},// 自定义文本渲染以支持交互式内容\np(_ref3){var _children$props;let{children}=_ref3;console.log('ReactMarkdown p children:',children);console.log('ReactMarkdown p children type:',typeof children);console.log('ReactMarkdown p children Array.isArray:',Array.isArray(children));// 正确处理children参数\nlet content='';if(typeof children==='string'){content=children;}else if(Array.isArray(children)){content=children.map(child=>{var _child$props;return typeof child==='string'?child:typeof child==='object'&&child!==null&&child!==void 0&&(_child$props=child.props)!==null&&_child$props!==void 0&&_child$props.children?child.props.children:'';}).join('');}else if(children&&typeof children==='object'&&(_children$props=children.props)!==null&&_children$props!==void 0&&_children$props.children){content=String(children.props.children);}else{content=String(children||'');}console.log('ReactMarkdown p processed content:',content);const{concepts,problems}=getClickableItems();return/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(InteractiveContent,{content:content,clickableConcepts:concepts,clickableProblems:problems,onConceptClick:handleConceptClick,onProblemClick:handleProblemClick,onCodeClick:code=>{navigator.clipboard.writeText(code);antdMessage.success('代码已复制到剪贴板');}})});}},children:processMessageContent(message.content)})}),(enhancedGraphData&&enhancedGraphData.nodes&&enhancedGraphData.nodes.length>0||(response===null||response===void 0?void 0:response.graph_data)&&Array.isArray(response.graph_data.nodes)&&response.graph_data.nodes.length>0)&&response.entities&&response.entities.length>0&&/*#__PURE__*/_jsx(InlineKnowledgeGraph,{graphData:enhancedGraphData||response.graph_data,entities:response.entities,showAnimation:false,isEnhanced:!!enhancedGraphData,onNodeClick:(nodeId,nodeData)=>{console.log('图谱节点点击:',nodeId,nodeData);// 可以在这里添加节点点击处理逻辑\n},onExpandClick:()=>{console.log('跳转到完整图谱页面');// 可以在这里添加跳转到完整图谱页面的逻辑\n}}),graphLoading&&response.entities&&response.entities.length>0&&/*#__PURE__*/_jsx(\"div\",{style:{padding:'16px',textAlign:'center',background:'#f0f9ff',borderRadius:'8px',margin:'16px 0'},children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Spin,{size:\"small\"}),/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"\\u6B63\\u5728\\u52A0\\u8F7D\\u589E\\u5F3A\\u56FE\\u8C31\\u6570\\u636E...\"})]})})]}),response&&showFullResponse&&/*#__PURE__*/_jsxs(Collapse,{className:\"response-details\",ghost:true,children:[response.concept_explanation&&/*#__PURE__*/_jsx(Panel,{header:\"\\u6982\\u5FF5\\u89E3\\u91CA\\u8BE6\\u60C5\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"concept-details\",children:[/*#__PURE__*/_jsx(Title,{level:4,children:safeRender(response.concept_explanation.concept_name)||'概念解释'}),/*#__PURE__*/_jsx(Paragraph,{children:safeRender(response.concept_explanation.definition)}),Array.isArray(response.concept_explanation.core_principles)&&response.concept_explanation.core_principles.length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u6838\\u5FC3\\u539F\\u7406:\"}),/*#__PURE__*/_jsx(\"ul\",{children:response.concept_explanation.core_principles.map((principle,i)=>/*#__PURE__*/_jsx(\"li\",{children:safeRender(principle)},i))})]})]})},\"concept\"),Array.isArray(response.example_problems)&&response.example_problems.length>0&&/*#__PURE__*/_jsx(Panel,{header:`示例题目 (${response.example_problems.length}道)`,children:/*#__PURE__*/_jsx(\"div\",{className:\"example-problems\",children:response.example_problems.map((problem,index)=>renderProblemCard(problem,index))})},\"examples\"),Array.isArray(response.similar_problems)&&response.similar_problems.length>0&&response.similar_problems.some(p=>p.title&&p.title!=='无'&&p.title.trim()!=='')&&/*#__PURE__*/_jsx(Panel,{header:\"\\uD83C\\uDFAF \\u667A\\u80FD\\u63A8\\u8350\",children:/*#__PURE__*/_jsx(EnhancedSimilarProblems,{problems:response.similar_problems.filter(p=>p.title&&p.title!=='无'&&p.title.trim()!==''),onProblemClick:handleProblemClick,maxDisplay:6})},\"similar\")]}),/*#__PURE__*/_jsx(SmartLinkSuggestions,{response:response,onConceptClick:handleConceptClick,onProblemClick:handleProblemClick}),/*#__PURE__*/_jsx(\"div\",{className:\"feedback-section\",children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"\\u8FD9\\u4E2A\\u56DE\\u7B54\\u5BF9\\u60A8\\u6709\\u5E2E\\u52A9\\u5417\\uFF1F\"}),/*#__PURE__*/_jsx(Rate,{value:userRating,onChange:setUserRating,style:{fontSize:16}}),/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(LikeOutlined,{}),size:\"small\"}),/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(DislikeOutlined,{}),size:\"small\"})]})})]})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:`\n        .message-item {\n          display: flex;\n          margin-bottom: 24px;\n          align-items: flex-start;\n        }\n        \n        .message-avatar {\n          width: 40px;\n          height: 40px;\n          border-radius: 50%;\n          background: #52c41a;\n          display: flex;\n          align-items: center;\n          justify-content: center;\n          color: white;\n          margin: 0 12px;\n          flex-shrink: 0;\n        }\n        \n        .message-content {\n          flex: 1;\n          max-width: 85%;\n        }\n        \n        .response-card {\n          border-radius: 12px;\n          box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n        }\n\n        .cancelled-message {\n          opacity: 0.7;\n          border: 1px solid #faad14;\n          background-color: #fffbe6;\n        }\n\n        .cancelled-notice {\n          margin-bottom: 12px;\n          padding: 8px 12px;\n          background-color: #fff7e6;\n          border: 1px solid #ffd591;\n          border-radius: 6px;\n          display: flex;\n          align-items: center;\n        }\n        \n        .reasoning-section {\n          margin-bottom: 16px;\n          padding-bottom: 16px;\n          border-bottom: 1px solid #f0f0f0;\n        }\n        \n        .response-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 12px;\n          padding-bottom: 8px;\n          border-bottom: 1px solid #f0f0f0;\n        }\n        \n        .response-content {\n          line-height: 1.6;\n          color: #333;\n        }\n        \n        .problem-card, .similar-problem-card {\n          border: 1px solid #e8e8e8;\n          transition: all 0.2s;\n        }\n        \n        .problem-card:hover, .similar-problem-card:hover {\n          border-color: #1890ff;\n          box-shadow: 0 2px 8px rgba(24, 144, 255, 0.2);\n        }\n        \n        .problem-header, .similar-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          margin-bottom: 8px;\n        }\n        \n        .problem-tags, .shared-tags {\n          margin-top: 8px;\n        }\n        \n        .recommendation-info, .learning-path {\n          margin: 4px 0;\n          font-size: 13px;\n        }\n        \n        .feedback-section {\n          margin-top: 16px;\n          padding-top: 12px;\n          border-top: 1px solid #f0f0f0;\n        }\n        \n        @media (max-width: 768px) {\n          .message-content {\n            max-width: 90%;\n          }\n          \n          .response-header {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 8px;\n          }\n        }\n      `})]});};export default MessageItem;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}