{"ast":null,"code":"import { useLayoutUpdateEffect } from \"rc-util/es/hooks/useLayoutEffect\";\nimport raf from \"rc-util/es/raf\";\nimport * as React from 'react';\n\n/**\n * Trigger `callback` immediately when `condition` is `true`.\n * But trigger `callback` in next frame when `condition` is `false`.\n */\nexport default function useLockEffect(condition, callback) {\n  var delayFrames = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n  var callbackRef = React.useRef(callback);\n  callbackRef.current = callback;\n  useLayoutUpdateEffect(function () {\n    if (condition) {\n      callbackRef.current(condition);\n    } else {\n      var id = raf(function () {\n        callbackRef.current(condition);\n      }, delayFrames);\n      return function () {\n        raf.cancel(id);\n      };\n    }\n  }, [condition]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}