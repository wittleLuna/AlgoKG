{
  "id": "SA118",
  "name": "prim算法精讲",
  "alias": [
    "普里姆算法"
  ],
  "type": "specific_algorithm",
  "description": "Prim算法是一种用于求解最小生成树问题的贪心算法，通过逐步选择距离当前生成树最近的节点来构建最小生成树。该算法从一个节点开始，逐步扩展生成树。",
  "key_concepts": [
    "顶点",
    "路径",
    "最小生成树",
    "贪心算法"
  ],
  "applications": [
    "网络设计",
    "电路布线",
    "交通规划"
  ],
  "created_at": "2025-07-19T12:55:05Z",
  "updated_at": "2025-07-19T12:55:37Z",
  "source_files": [
    "prim_kama.txt",
    "prim_wiki.txt"
  ],
  "spacy_entities": {
    "COMPLEXITY": [
      "O(n²)",
      "O(n^2)",
      "O(1)",
      "O(n^2+m)",
      "O((n+m) log n)",
      "O(n log n + m)"
    ],
    "SPECIFIC_ALGORITHM": [
      "最小生成树算法",
      "Prim算法",
      "prim",
      "Kruskal",
      "Dijkstra"
    ],
    "DATA_STRUCTURE": [
      "数组",
      "树",
      "图",
      "无向图",
      "graph",
      "Tree",
      "String",
      "堆",
      "二叉堆",
      "queue"
    ],
    "CORE_CONCEPT": [
      "初始化",
      "时间复杂度",
      "顶点",
      "路径",
      "最小生成树",
      "最优子结构"
    ],
    "PROBLEM_TYPE": [
      "最小生成树问题"
    ],
    "ALGORITHM_PARADIGM": [
      "贪心",
      "贪心算法"
    ]
  }
}