{"ast":null,"code":"\"use client\";\n\nimport React from 'react';\nimport Divider from '../divider';\nimport PanelPicker from './components/PanelPicker';\nimport PanelPresets from './components/PanelPresets';\nimport { PanelPickerContext, PanelPresetsContext } from './context';\nconst ColorPickerPanel = props => {\n  const {\n    prefixCls,\n    presets,\n    panelRender,\n    value,\n    onChange,\n    onClear,\n    allowClear,\n    disabledAlpha,\n    mode,\n    onModeChange,\n    modeOptions,\n    onChangeComplete,\n    activeIndex,\n    onActive,\n    format,\n    onFormatChange,\n    gradientDragging,\n    onGradientDragging,\n    disabledFormat\n  } = props;\n  const colorPickerPanelPrefixCls = `${prefixCls}-inner`;\n  // ===================== Context ======================\n  const panelContext = React.useMemo(() => ({\n    prefixCls,\n    value,\n    onChange,\n    onClear,\n    allowClear,\n    disabledAlpha,\n    mode,\n    onModeChange,\n    modeOptions,\n    onChangeComplete,\n    activeIndex,\n    onActive,\n    format,\n    onFormatChange,\n    gradientDragging,\n    onGradientDragging,\n    disabledFormat\n  }), [prefixCls, value, onChange, onClear, allowClear, disabledAlpha, mode, onModeChange, modeOptions, onChangeComplete, activeIndex, onActive, format, onFormatChange, gradientDragging, onGradientDragging, disabledFormat]);\n  const presetContext = React.useMemo(() => ({\n    prefixCls,\n    value,\n    presets,\n    onChange\n  }), [prefixCls, value, presets, onChange]);\n  // ====================== Render ======================\n  const innerPanel = /*#__PURE__*/React.createElement(\"div\", {\n    className: `${colorPickerPanelPrefixCls}-content`\n  }, /*#__PURE__*/React.createElement(PanelPicker, null), Array.isArray(presets) && /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(PanelPresets, null));\n  return /*#__PURE__*/React.createElement(PanelPickerContext.Provider, {\n    value: panelContext\n  }, /*#__PURE__*/React.createElement(PanelPresetsContext.Provider, {\n    value: presetContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: colorPickerPanelPrefixCls\n  }, typeof panelRender === 'function' ? panelRender(innerPanel, {\n    components: {\n      Picker: PanelPicker,\n      Presets: PanelPresets\n    }\n  }) : innerPanel)));\n};\nif (process.env.NODE_ENV !== 'production') {\n  ColorPickerPanel.displayName = 'ColorPickerPanel';\n}\nexport default ColorPickerPanel;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}