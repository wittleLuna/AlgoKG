{"ast":null,"code":"import React,{useEffect,useRef,useState,useCallback}from'react';import{Card,Typography,Button,Space,Tooltip,Select,Slider,Switch,Drawer,List,Tag}from'antd';import{FullscreenOutlined,ReloadOutlined,SettingOutlined,ZoomInOutlined,ZoomOutOutlined,PlayCircleOutlined,PauseCircleOutlined,FilterOutlined}from'@ant-design/icons';import{Network}from'vis-network';import{DataSet}from'vis-data';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const{Title,Text}=Typography;const{Option}=Select;const EnhancedGraphVisualization=_ref=>{var _networkRef$current3,_networkRef$current3$;let{data,onNodeClick,height=500,width,layoutType='force',showAnimation=true,showMiniMap=false,enableClustering=false,onPathHighlight,disableBuiltinNodeInfo=false}=_ref;const containerRef=useRef(null);const networkRef=useRef(null);const[isFullscreen,setIsFullscreen]=useState(false);const[showSettings,setShowSettings]=useState(false);const[showNodeInfo,setShowNodeInfo]=useState(false);const[selectedNode,setSelectedNode]=useState(null);// 可视化设置\nconst[currentLayoutType,setCurrentLayoutType]=useState(layoutType);const[nodeSize,setNodeSize]=useState(25);const[edgeWidth,setEdgeWidth]=useState(2);const[physicsEnabled,setPhysicsEnabled]=useState(true);const[showLabels,setShowLabels]=useState(true);const[nodeFilter,setNodeFilter]=useState([]);const[edgeFilter,setEdgeFilter]=useState([]);// 动画状态\nconst[isAnimating,setIsAnimating]=useState(false);const[animationSpeed,setAnimationSpeed]=useState(1000);// 统计信息\nconst[graphStats,setGraphStats]=useState({nodeCount:0,edgeCount:0,nodeTypes:[],edgeTypes:[]});// 节点类型颜色映射（增强版）\nconst getNodeColor=function(type){let isCenter=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;let isHighlighted=arguments.length>2&&arguments[2]!==undefined?arguments[2]:false;if(isHighlighted){return{background:'#ff4d4f',border:'#cf1322',highlight:{background:'#ff7875',border:'#cf1322'}};}if(isCenter){return{background:'#722ed1',border:'#531dab',highlight:{background:'#9254de',border:'#531dab'}};}const colorMap={'Problem':{background:'#1890ff',border:'#096dd9',highlight:{background:'#40a9ff',border:'#096dd9'}},'Algorithm':{background:'#52c41a',border:'#389e0d',highlight:{background:'#73d13d',border:'#389e0d'}},'DataStructure':{background:'#fa8c16',border:'#d46b08',highlight:{background:'#ffa940',border:'#d46b08'}},'Technique':{background:'#13c2c2',border:'#08979c',highlight:{background:'#36cfc9',border:'#08979c'}},'Concept':{background:'#eb2f96',border:'#c41d7f',highlight:{background:'#f759ab',border:'#c41d7f'}}};return colorMap[type]||{background:'#8c8c8c',border:'#595959',highlight:{background:'#bfbfbf',border:'#595959'}};};// 关系类型样式映射（增强版）\nconst getEdgeStyle=function(relationship){let isHighlighted=arguments.length>1&&arguments[1]!==undefined?arguments[1]:false;const baseStyle={'USES_ALGORITHM':{color:'#52c41a',dashes:false,width:2},'REQUIRES_DATA_STRUCTURE':{color:'#fa8c16',dashes:false,width:2},'APPLIES_TECHNIQUE':{color:'#13c2c2',dashes:false,width:2},'SIMILAR_TO':{color:'#1890ff',dashes:[5,5],width:1},'RELATED_TO':{color:'#8c8c8c',dashes:[2,2],width:1},'PREREQUISITE_OF':{color:'#ff4d4f',dashes:false,width:3},'EXTENDS':{color:'#722ed1',dashes:[10,5],width:2}};const style=baseStyle[relationship]||{color:'#8c8c8c',dashes:false,width:1};if(isHighlighted){return{...style,color:'#ff4d4f',width:style.width*2};}return style;};// 转换数据格式（增强版）\nconst convertData=useCallback(()=>{if(!data||!data.nodes||!data.edges){return{nodes:new DataSet([]),edges:new DataSet([])};}// 过滤节点\nconst filteredNodes=data.nodes.filter(node=>nodeFilter.length===0||nodeFilter.includes(node.type));// 过滤边\nconst filteredEdges=data.edges.filter(edge=>edgeFilter.length===0||edgeFilter.includes(edge.relationship));const nodes=filteredNodes.map(node=>{var _node$properties,_node$properties2;const isCenter=((_node$properties=node.properties)===null||_node$properties===void 0?void 0:_node$properties.is_center)||false;const isHighlighted=(selectedNode===null||selectedNode===void 0?void 0:selectedNode.id)===node.id;const color=getNodeColor(node.type,isCenter,isHighlighted);return{id:node.id,label:showLabels?node.label:'',title:`${node.type}: ${node.label}${isCenter?' (中心节点)':''}`,color,size:isCenter?nodeSize*1.5:nodeSize,font:{size:isCenter?16:14,color:'#ffffff',strokeWidth:2,strokeColor:'#000000'},borderWidth:isHighlighted?4:2,shape:getNodeShape(node.type),clickable:node.clickable,physics:physicsEnabled,// 添加自定义属性\ngroup:node.type,level:((_node$properties2=node.properties)===null||_node$properties2===void 0?void 0:_node$properties2.level)||0};});const edges=filteredEdges.map(edge=>{const isHighlighted=selectedNode&&(selectedNode.id===edge.source||selectedNode.id===edge.target);const style=getEdgeStyle(edge.relationship,isHighlighted);return{id:`${edge.source}-${edge.target}`,from:edge.source,to:edge.target,label:showLabels?edge.relationship:'',color:style.color,width:(style.width||1)*edgeWidth,dashes:style.dashes,arrows:{to:{enabled:true,scaleFactor:1.2}},font:{size:10,align:'middle'},smooth:{type:'continuous',roundness:0.5},physics:physicsEnabled};});// 更新统计信息\nsetGraphStats({nodeCount:nodes.length,edgeCount:edges.length,nodeTypes:Array.from(new Set(data.nodes.map(n=>n.type))),edgeTypes:Array.from(new Set(data.edges.map(e=>e.relationship)))});return{nodes:new DataSet(nodes),edges:new DataSet(edges)};},[data,nodeFilter,edgeFilter,nodeSize,edgeWidth,physicsEnabled,showLabels,selectedNode]);// 获取节点形状\nconst getNodeShape=type=>{const shapeMap={'Problem':'box','Algorithm':'ellipse','DataStructure':'diamond','Technique':'triangle','Concept':'dot'};return shapeMap[type]||'dot';};// 网络配置选项（增强版）\nconst getNetworkOptions=useCallback(()=>{const baseOptions={physics:{enabled:physicsEnabled,stabilization:{iterations:200},barnesHut:{gravitationalConstant:-2000,centralGravity:0.3,springLength:120,springConstant:0.04,damping:0.09,avoidOverlap:0.1},solver:'barnesHut'},interaction:{hover:true,tooltipDelay:200,hideEdgesOnDrag:false,hideNodesOnDrag:false,selectConnectedEdges:true,multiselect:true},nodes:{borderWidth:2,shadow:{enabled:true,color:'rgba(0,0,0,0.2)',size:5,x:2,y:2},font:{size:14,color:'#ffffff',strokeWidth:2,strokeColor:'#000000'}},edges:{width:edgeWidth,shadow:{enabled:true,color:'rgba(0,0,0,0.1)',size:3,x:1,y:1},smooth:{type:'continuous',roundness:0.5}},groups:{Problem:{color:{background:'#1890ff'}},Algorithm:{color:{background:'#52c41a'}},DataStructure:{color:{background:'#fa8c16'}},Technique:{color:{background:'#13c2c2'}},Concept:{color:{background:'#eb2f96'}}}};// 根据布局类型添加特定配置\nif(currentLayoutType==='hierarchical'){return{...baseOptions,layout:{hierarchical:{enabled:true,direction:'UD',sortMethod:'directed',nodeSpacing:200,levelSeparation:200,treeSpacing:250}},physics:{enabled:false}};}else if(currentLayoutType==='force'){return{...baseOptions,layout:{randomSeed:2,improvedLayout:true}};}else if(currentLayoutType==='circular'){return{...baseOptions,layout:{randomSeed:undefined},physics:{enabled:false}};}return baseOptions;},[currentLayoutType,physicsEnabled,edgeWidth]);// 初始化网络（增强版）\nuseEffect(()=>{if(!containerRef.current||!data)return;const networkData=convertData();const options=getNetworkOptions();networkRef.current=new Network(containerRef.current,networkData,options);// 添加事件监听器\nnetworkRef.current.on('click',params=>{if(params.nodes.length>0){const nodeId=params.nodes[0];const node=data.nodes.find(n=>n.id===nodeId);if(node){// 只有在未禁用内置节点信息时才显示\nif(!disableBuiltinNodeInfo){setSelectedNode(node);setShowNodeInfo(true);}// 总是调用外部的onNodeClick回调\nif(node.clickable&&onNodeClick){onNodeClick(node);}}}else{setSelectedNode(null);setShowNodeInfo(false);}});networkRef.current.on('hoverNode',params=>{var _networkRef$current,_networkRef$current2;if(containerRef.current){containerRef.current.style.cursor='pointer';}// 高亮连接的节点和边\nconst connectedNodes=(_networkRef$current=networkRef.current)===null||_networkRef$current===void 0?void 0:_networkRef$current.getConnectedNodes(params.node);const connectedEdges=(_networkRef$current2=networkRef.current)===null||_networkRef$current2===void 0?void 0:_networkRef$current2.getConnectedEdges(params.node);if(connectedNodes&&connectedEdges){// 可以在这里实现高亮效果\n}});networkRef.current.on('blurNode',()=>{if(containerRef.current){containerRef.current.style.cursor='default';}});// 稳定化完成后的回调\nnetworkRef.current.on('stabilizationIterationsDone',()=>{if(showAnimation&&!isAnimating){startAnimation();}});return()=>{if(networkRef.current){networkRef.current.destroy();networkRef.current=null;}};},[data,convertData,getNetworkOptions,showAnimation,isAnimating]);// 动画控制\nconst startAnimation=()=>{if(!networkRef.current)return;setIsAnimating(true);// 实现节点动画效果\nconst nodes=networkRef.current.body.data.nodes.get();let index=0;const animateNode=()=>{if(index<nodes.length&&networkRef.current){const node=nodes[index];try{// 检查节点是否存在\nconst allNodes=networkRef.current.body.data.nodes.get();const nodeExists=allNodes.some(n=>n.id===node.id);if(nodeExists){networkRef.current.selectNodes([node.id]);}setTimeout(()=>{if(networkRef.current){networkRef.current.unselectAll();}index++;if(index<nodes.length){animateNode();}else{setIsAnimating(false);}},animationSpeed);}catch(error){console.warn('动画节点选择失败:',error);// 跳过这个节点，继续下一个\nindex++;if(index<nodes.length){animateNode();}else{setIsAnimating(false);}}}};animateNode();};const stopAnimation=()=>{setIsAnimating(false);};// 控制函数\nconst handleZoomIn=()=>{if(networkRef.current){const scale=networkRef.current.getScale()*1.2;networkRef.current.moveTo({scale});}};const handleZoomOut=()=>{if(networkRef.current){const scale=networkRef.current.getScale()*0.8;networkRef.current.moveTo({scale});}};const handleReset=()=>{if(networkRef.current){networkRef.current.fit();}};const handleFullscreen=()=>{setIsFullscreen(!isFullscreen);};// 查找最短路径\nconst findShortestPath=(startNodeId,endNodeId)=>{if(!networkRef.current)return[];// 简单的BFS实现\nconst visited=new Set();const queue=[[startNodeId]];while(queue.length>0){const path=queue.shift();const node=path[path.length-1];if(node===endNodeId){return path;}if(!visited.has(node)){visited.add(node);const neighbors=networkRef.current.getConnectedNodes(node);for(const neighbor of neighbors){if(!visited.has(neighbor)){queue.push([...path,neighbor]);}}}}return[];};if(!data||!data.nodes||data.nodes.length===0){return/*#__PURE__*/_jsx(Card,{className:\"graph-placeholder\",children:/*#__PURE__*/_jsx(\"div\",{style:{textAlign:'center',padding:'40px 0'},children:/*#__PURE__*/_jsx(Text,{type:\"secondary\",children:\"\\u6682\\u65E0\\u56FE\\u8C31\\u6570\\u636E\"})})});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(Card,{className:`enhanced-graph-visualization ${isFullscreen?'fullscreen':''}`,title:/*#__PURE__*/_jsxs(\"div\",{className:\"graph-header\",children:[/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Title,{level:5,style:{margin:0},children:\"\\uD83D\\uDD78\\uFE0F \\u77E5\\u8BC6\\u56FE\\u8C31\"}),/*#__PURE__*/_jsxs(Tag,{color:\"blue\",children:[graphStats.nodeCount,\" \\u8282\\u70B9\"]}),/*#__PURE__*/_jsxs(Tag,{color:\"green\",children:[graphStats.edgeCount,\" \\u5173\\u7CFB\"]})]}),/*#__PURE__*/_jsxs(Space,{children:[showAnimation&&/*#__PURE__*/_jsx(Tooltip,{title:isAnimating?\"停止动画\":\"开始动画\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:isAnimating?/*#__PURE__*/_jsx(PauseCircleOutlined,{}):/*#__PURE__*/_jsx(PlayCircleOutlined,{}),onClick:isAnimating?stopAnimation:startAnimation})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\\u653E\\u5927\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(ZoomInOutlined,{}),onClick:handleZoomIn})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\\u7F29\\u5C0F\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(ZoomOutOutlined,{}),onClick:handleZoomOut})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\\u91CD\\u7F6E\\u89C6\\u56FE\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(ReloadOutlined,{}),onClick:handleReset})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\\u8FC7\\u6EE4\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(FilterOutlined,{}),onClick:()=>setShowSettings(!showSettings)})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\\u8BBE\\u7F6E\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(SettingOutlined,{}),onClick:()=>setShowSettings(!showSettings)})}),/*#__PURE__*/_jsx(Tooltip,{title:\"\\u5168\\u5C4F\",children:/*#__PURE__*/_jsx(Button,{type:\"text\",icon:/*#__PURE__*/_jsx(FullscreenOutlined,{}),onClick:handleFullscreen})})]})]}),children:[/*#__PURE__*/_jsx(\"div\",{ref:containerRef,className:\"graph-container\",style:{height:isFullscreen?'80vh':height||'100%',width:width||'100%',minHeight:'600px',border:'1px solid #d9d9d9',borderRadius:'6px',background:'linear-gradient(135deg, #f6f9fc 0%, #ffffff 100%)'}}),/*#__PURE__*/_jsx(\"div\",{className:\"enhanced-graph-legend\",children:/*#__PURE__*/_jsx(Space,{wrap:true,children:graphStats.nodeTypes.map(type=>/*#__PURE__*/_jsxs(\"div\",{className:\"legend-item\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"legend-color\",style:{background:getNodeColor(type).background,borderRadius:getNodeShape(type)==='box'?'2px':'50%'}}),/*#__PURE__*/_jsx(Text,{children:type})]},type))})})]}),/*#__PURE__*/_jsx(Drawer,{title:\"\\u56FE\\u8C31\\u8BBE\\u7F6E\",placement:\"right\",onClose:()=>setShowSettings(false),open:showSettings,width:320,children:/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",style:{width:'100%'},size:\"large\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u5E03\\u5C40\\u7C7B\\u578B\"}),/*#__PURE__*/_jsxs(Select,{value:currentLayoutType,onChange:setCurrentLayoutType,style:{width:'100%',marginTop:8},children:[/*#__PURE__*/_jsx(Option,{value:\"hierarchical\",children:\"\\u5C42\\u6B21\\u5E03\\u5C40\"}),/*#__PURE__*/_jsx(Option,{value:\"force\",children:\"\\u529B\\u5BFC\\u5411\\u5E03\\u5C40\"}),/*#__PURE__*/_jsx(Option,{value:\"circular\",children:\"\\u73AF\\u5F62\\u5E03\\u5C40\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Text,{strong:true,children:[\"\\u8282\\u70B9\\u5927\\u5C0F: \",nodeSize]}),/*#__PURE__*/_jsx(Slider,{min:15,max:50,value:nodeSize,onChange:setNodeSize,style:{marginTop:8}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Text,{strong:true,children:[\"\\u8FB9\\u5BBD\\u5EA6: \",edgeWidth]}),/*#__PURE__*/_jsx(Slider,{min:1,max:5,value:edgeWidth,onChange:setEdgeWidth,style:{marginTop:8}})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u7269\\u7406\\u5F15\\u64CE\"}),/*#__PURE__*/_jsx(Switch,{checked:physicsEnabled,onChange:setPhysicsEnabled})]})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u663E\\u793A\\u6807\\u7B7E\"}),/*#__PURE__*/_jsx(Switch,{checked:showLabels,onChange:setShowLabels})]})}),showAnimation&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Text,{strong:true,children:[\"\\u52A8\\u753B\\u901F\\u5EA6: \",animationSpeed,\"ms\"]}),/*#__PURE__*/_jsx(Slider,{min:200,max:2000,value:animationSpeed,onChange:setAnimationSpeed,style:{marginTop:8}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u8282\\u70B9\\u7C7B\\u578B\\u8FC7\\u6EE4\"}),/*#__PURE__*/_jsx(Select,{mode:\"multiple\",placeholder:\"\\u9009\\u62E9\\u8981\\u663E\\u793A\\u7684\\u8282\\u70B9\\u7C7B\\u578B\",value:nodeFilter,onChange:setNodeFilter,style:{width:'100%',marginTop:8},children:graphStats.nodeTypes.map(type=>/*#__PURE__*/_jsx(Option,{value:type,children:type},type))})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u5173\\u7CFB\\u7C7B\\u578B\\u8FC7\\u6EE4\"}),/*#__PURE__*/_jsx(Select,{mode:\"multiple\",placeholder:\"\\u9009\\u62E9\\u8981\\u663E\\u793A\\u7684\\u5173\\u7CFB\\u7C7B\\u578B\",value:edgeFilter,onChange:setEdgeFilter,style:{width:'100%',marginTop:8},children:graphStats.edgeTypes.map(type=>/*#__PURE__*/_jsx(Option,{value:type,children:type},type))})]})]})}),!disableBuiltinNodeInfo&&/*#__PURE__*/_jsx(Drawer,{title:\"\\u8282\\u70B9\\u8BE6\\u60C5\",placement:\"right\",onClose:()=>setShowNodeInfo(false),open:showNodeInfo,width:400,children:selectedNode&&/*#__PURE__*/_jsxs(Space,{direction:\"vertical\",style:{width:'100%'},size:\"middle\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Title,{level:4,children:selectedNode.label}),/*#__PURE__*/_jsx(Tag,{color:\"blue\",children:selectedNode.type})]}),selectedNode.properties&&Object.keys(selectedNode.properties).length>0&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u5C5E\\u6027\\u4FE1\\u606F\"}),/*#__PURE__*/_jsx(List,{size:\"small\",dataSource:Object.entries(selectedNode.properties),renderItem:_ref2=>{let[key,value]=_ref2;return/*#__PURE__*/_jsxs(List.Item,{children:[/*#__PURE__*/_jsxs(Text,{strong:true,children:[key,\":\"]}),\" \",String(value)]});}})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(Text,{strong:true,children:\"\\u8FDE\\u63A5\\u4FE1\\u606F\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginTop:8},children:/*#__PURE__*/_jsxs(Text,{type:\"secondary\",children:[\"\\u8BE5\\u8282\\u70B9\\u4E0E \",((_networkRef$current3=networkRef.current)===null||_networkRef$current3===void 0?void 0:(_networkRef$current3$=_networkRef$current3.getConnectedNodes(selectedNode.id))===null||_networkRef$current3$===void 0?void 0:_networkRef$current3$.length)||0,\" \\u4E2A\\u8282\\u70B9\\u76F8\\u8FDE\"]})})]})]})}),/*#__PURE__*/_jsx(\"style\",{jsx:true,children:`\n        .enhanced-graph-visualization {\n          position: relative;\n          border-radius: 12px;\n          overflow: visible;\n          box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);\n        }\n\n        .enhanced-graph-visualization.fullscreen {\n          position: fixed;\n          top: 0;\n          left: 0;\n          right: 0;\n          bottom: 0;\n          z-index: 1000;\n          background: white;\n          border-radius: 0;\n        }\n\n        .graph-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n        }\n\n        .graph-container {\n          position: relative;\n          overflow: visible;\n        }\n\n        .enhanced-graph-legend {\n          margin-top: 16px;\n          padding: 12px;\n          background: rgba(24, 144, 255, 0.05);\n          border-radius: 8px;\n          border-left: 4px solid #1890ff;\n        }\n\n        .legend-item {\n          display: flex;\n          align-items: center;\n          gap: 8px;\n        }\n\n        .legend-color {\n          width: 16px;\n          height: 16px;\n          border: 2px solid #fff;\n          box-shadow: 0 1px 3px rgba(0, 0, 0, 0.2);\n        }\n\n        @media (max-width: 768px) {\n          .graph-header {\n            flex-direction: column;\n            gap: 8px;\n          }\n        }\n      `})]});};export default EnhancedGraphVisualization;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}