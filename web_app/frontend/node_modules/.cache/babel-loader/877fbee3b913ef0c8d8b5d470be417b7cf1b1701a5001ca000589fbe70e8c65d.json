{"ast":null,"code":"import * as React from 'react';\nimport isEqual from \"rc-util/es/isEqual\";\n/**\n * Singleton cache will only take latest `cacheParams` as key\n * and return the result for callback matching.\n */\nexport default function useSingletonCache() {\n  const cacheRef = React.useRef([null, null]);\n  const getCache = (cacheKeys, callback) => {\n    const filteredKeys = cacheKeys.map(item => item instanceof HTMLElement || Number.isNaN(item) ? '' : item);\n    if (!isEqual(cacheRef.current[0], filteredKeys)) {\n      cacheRef.current = [filteredKeys, callback()];\n    }\n    return cacheRef.current[1];\n  };\n  return getCache;\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}