{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/helpers/esm/regeneratorRuntime\";\nimport _toConsumableArray from \"@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n// https://github.com/ant-design/ant-design/issues/50080\nvar traverseFileTree = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(files, isAccepted) {\n    var flattenFileList, progressFileList, readDirectory, _readDirectory, readFile, _readFile, _traverseFileTree, wipIndex;\n    return _regeneratorRuntime().wrap(function _callee4$(_context4) {\n      while (1) switch (_context4.prev = _context4.next) {\n        case 0:\n          _readFile = function _readFile3() {\n            _readFile = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(item) {\n              return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n                while (1) switch (_context3.prev = _context3.next) {\n                  case 0:\n                    return _context3.abrupt(\"return\", new Promise(function (reslove) {\n                      item.file(function (file) {\n                        if (isAccepted(file)) {\n                          // https://github.com/ant-design/ant-design/issues/16426\n                          if (item.fullPath && !file.webkitRelativePath) {\n                            Object.defineProperties(file, {\n                              webkitRelativePath: {\n                                writable: true\n                              }\n                            });\n                            // eslint-disable-next-line no-param-reassign\n                            file.webkitRelativePath = item.fullPath.replace(/^\\//, '');\n                            Object.defineProperties(file, {\n                              webkitRelativePath: {\n                                writable: false\n                              }\n                            });\n                          }\n                          reslove(file);\n                        } else {\n                          reslove(null);\n                        }\n                      });\n                    }));\n                  case 1:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }, _callee3);\n            }));\n            return _readFile.apply(this, arguments);\n          };\n          readFile = function _readFile2(_x4) {\n            return _readFile.apply(this, arguments);\n          };\n          _readDirectory = function _readDirectory3() {\n            _readDirectory = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(directory) {\n              var dirReader, entries, results, n, i;\n              return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n                while (1) switch (_context2.prev = _context2.next) {\n                  case 0:\n                    dirReader = directory.createReader();\n                    entries = [];\n                  case 2:\n                    if (!true) {\n                      _context2.next = 12;\n                      break;\n                    }\n                    _context2.next = 5;\n                    return new Promise(function (resolve) {\n                      dirReader.readEntries(resolve, function () {\n                        return resolve([]);\n                      });\n                    });\n                  case 5:\n                    results = _context2.sent;\n                    n = results.length;\n                    if (n) {\n                      _context2.next = 9;\n                      break;\n                    }\n                    return _context2.abrupt(\"break\", 12);\n                  case 9:\n                    for (i = 0; i < n; i++) {\n                      entries.push(results[i]);\n                    }\n                    _context2.next = 2;\n                    break;\n                  case 12:\n                    return _context2.abrupt(\"return\", entries);\n                  case 13:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }, _callee2);\n            }));\n            return _readDirectory.apply(this, arguments);\n          };\n          readDirectory = function _readDirectory2(_x3) {\n            return _readDirectory.apply(this, arguments);\n          };\n          flattenFileList = [];\n          progressFileList = [];\n          files.forEach(function (file) {\n            return progressFileList.push(file.webkitGetAsEntry());\n          });\n\n          // eslint-disable-next-line @typescript-eslint/naming-convention\n          _traverseFileTree = /*#__PURE__*/function () {\n            var _ref2 = _asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(item, path) {\n              var _file, entries;\n              return _regeneratorRuntime().wrap(function _callee$(_context) {\n                while (1) switch (_context.prev = _context.next) {\n                  case 0:\n                    if (item) {\n                      _context.next = 2;\n                      break;\n                    }\n                    return _context.abrupt(\"return\");\n                  case 2:\n                    // eslint-disable-next-line no-param-reassign\n                    item.path = path || '';\n                    if (!item.isFile) {\n                      _context.next = 10;\n                      break;\n                    }\n                    _context.next = 6;\n                    return readFile(item);\n                  case 6:\n                    _file = _context.sent;\n                    if (_file) {\n                      flattenFileList.push(_file);\n                    }\n                    _context.next = 15;\n                    break;\n                  case 10:\n                    if (!item.isDirectory) {\n                      _context.next = 15;\n                      break;\n                    }\n                    _context.next = 13;\n                    return readDirectory(item);\n                  case 13:\n                    entries = _context.sent;\n                    progressFileList.push.apply(progressFileList, _toConsumableArray(entries));\n                  case 15:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }, _callee);\n            }));\n            return function _traverseFileTree(_x5, _x6) {\n              return _ref2.apply(this, arguments);\n            };\n          }();\n          wipIndex = 0;\n        case 9:\n          if (!(wipIndex < progressFileList.length)) {\n            _context4.next = 15;\n            break;\n          }\n          _context4.next = 12;\n          return _traverseFileTree(progressFileList[wipIndex]);\n        case 12:\n          wipIndex++;\n          _context4.next = 9;\n          break;\n        case 15:\n          return _context4.abrupt(\"return\", flattenFileList);\n        case 16:\n        case \"end\":\n          return _context4.stop();\n      }\n    }, _callee4);\n  }));\n  return function traverseFileTree(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport default traverseFileTree;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}